<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.6" xml:lang="en-US">
  <compounddef id="namespacerunner__example" kind="namespace" language="Python">
    <compoundname>runner_example</compoundname>
    <briefdescription>
<para><ref refid="classvart_1_1_runner" kindref="compound">vart.Runner</ref> Example </para>
    </briefdescription>
    <detaileddescription>
<para>This example assumes creating a DPU runner from a DPU subgraph (called dpu_subgraph).</para>
<para><programlisting><codeline><highlight class="comment">#<sp/>create<sp/>DPU<sp/>runner</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">dpu_runner<sp/>=<sp/><ref refid="classvart_1_1_runner_1ab52aaae2dab3f8ec5763cd0d34af0da9" kindref="member">vart.Runner.create_runner</ref>(dpu_subgraph,<sp/></highlight><highlight class="stringliteral">&quot;run&quot;</highlight><highlight class="normal">)</highlight></codeline>
<codeline><highlight class="normal"><sp/></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">#<sp/>get<sp/>a<sp/>list<sp/>of<sp/>runner<sp/>inputs</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">inputTensors<sp/>=<sp/>dpu_runner.get_input_tensors()</highlight></codeline>
<codeline><highlight class="normal"><sp/></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">#<sp/>optional<sp/>–<sp/>print<sp/>names<sp/>and<sp/>shapes<sp/>of<sp/>each<sp/>input<sp/>tensor</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>inputTensor<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>inputTensors:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>print(</highlight><highlight class="stringliteral">&apos;Input<sp/>tensor<sp/>:&apos;</highlight><highlight class="normal">,inputTensor.name,<sp/>inputTensors.dims)</highlight></codeline>
<codeline><highlight class="normal"><sp/></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">#<sp/>create<sp/>input<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">#<sp/>Important:<sp/>Order<sp/>of<sp/>values<sp/>passed<sp/>to<sp/>DPU<sp/>thru’<sp/>input<sp/>data<sp/>buffer<sp/>must<sp/>match<sp/>the<sp/>order<sp/>of<sp/>tensor<sp/>objects<sp/>returned<sp/>by<sp/>get_input_tensor()<sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">inputData<sp/>=<sp/>[]</highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>inputTensor<sp/></highlight><highlight class="keywordflow">in</highlight><highlight class="normal"><sp/>inputTensors:</highlight></codeline>
<codeline><highlight class="normal"><sp/><sp/><sp/><sp/>inputData.append(some_input_data.reshape(inputTensor.dims))</highlight></codeline>
<codeline><highlight class="normal"><sp/></highlight></codeline>
<codeline><highlight class="normal"></highlight><highlight class="comment">#<sp/>pass<sp/>input<sp/>buffer<sp/>to<sp/>DPU<sp/>runner,<sp/>launch<sp/>and<sp/>wait<sp/>for<sp/>completion</highlight><highlight class="normal"></highlight></codeline>
<codeline><highlight class="normal">job_id<sp/>=<sp/>dpu_runner.execute_async(inputData,outputData)</highlight></codeline>
<codeline><highlight class="normal">dpu_runner.wait(job_id)<sp/><sp/><sp/></highlight></codeline>
</programlisting> </para>
    </detaileddescription>
    <location file="pydoc/runner_example.py" line="1" column="1"/>
  </compounddef>
</doxygen>
