// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.2
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module ISPpipeline_Block_Ma (
        ap_clk,
        ap_rst,
        ap_start,
        start_full_n,
        ap_done,
        ap_continue,
        ap_idle,
        ap_ready,
        start_out,
        start_write,
        height,
        width,
        imgInput1_rows_out_din,
        imgInput1_rows_out_full_n,
        imgInput1_rows_out_write,
        imgInput1_cols_out_din,
        imgInput1_cols_out_full_n,
        imgInput1_cols_out_write,
        imgInput2_rows_out_din,
        imgInput2_rows_out_full_n,
        imgInput2_rows_out_write,
        imgInput2_cols_out_din,
        imgInput2_cols_out_full_n,
        imgInput2_cols_out_write,
        bpc_out_rows_out_din,
        bpc_out_rows_out_full_n,
        bpc_out_rows_out_write,
        bpc_out_cols_out_din,
        bpc_out_cols_out_full_n,
        bpc_out_cols_out_write,
        gain_out_rows_out_din,
        gain_out_rows_out_full_n,
        gain_out_rows_out_write,
        gain_out_cols_out_din,
        gain_out_cols_out_full_n,
        gain_out_cols_out_write,
        demosaic_out_rows_out_din,
        demosaic_out_rows_out_full_n,
        demosaic_out_rows_out_write,
        demosaic_out_cols_out_din,
        demosaic_out_cols_out_full_n,
        demosaic_out_cols_out_write,
        ltm_in_rows_out_din,
        ltm_in_rows_out_full_n,
        ltm_in_rows_out_write,
        ltm_in_cols_out_din,
        ltm_in_cols_out_full_n,
        ltm_in_cols_out_write,
        lsc_out_rows_out_din,
        lsc_out_rows_out_full_n,
        lsc_out_rows_out_write,
        lsc_out_cols_out_din,
        lsc_out_cols_out_full_n,
        lsc_out_cols_out_write,
        aecin_rows_out_din,
        aecin_rows_out_full_n,
        aecin_rows_out_write,
        aecin_cols_out_din,
        aecin_cols_out_full_n,
        aecin_cols_out_write
);

parameter    ap_ST_fsm_state1 = 1'd1;

input   ap_clk;
input   ap_rst;
input   ap_start;
input   start_full_n;
output   ap_done;
input   ap_continue;
output   ap_idle;
output   ap_ready;
output   start_out;
output   start_write;
input  [15:0] height;
input  [15:0] width;
output  [15:0] imgInput1_rows_out_din;
input   imgInput1_rows_out_full_n;
output   imgInput1_rows_out_write;
output  [15:0] imgInput1_cols_out_din;
input   imgInput1_cols_out_full_n;
output   imgInput1_cols_out_write;
output  [15:0] imgInput2_rows_out_din;
input   imgInput2_rows_out_full_n;
output   imgInput2_rows_out_write;
output  [15:0] imgInput2_cols_out_din;
input   imgInput2_cols_out_full_n;
output   imgInput2_cols_out_write;
output  [15:0] bpc_out_rows_out_din;
input   bpc_out_rows_out_full_n;
output   bpc_out_rows_out_write;
output  [15:0] bpc_out_cols_out_din;
input   bpc_out_cols_out_full_n;
output   bpc_out_cols_out_write;
output  [15:0] gain_out_rows_out_din;
input   gain_out_rows_out_full_n;
output   gain_out_rows_out_write;
output  [15:0] gain_out_cols_out_din;
input   gain_out_cols_out_full_n;
output   gain_out_cols_out_write;
output  [15:0] demosaic_out_rows_out_din;
input   demosaic_out_rows_out_full_n;
output   demosaic_out_rows_out_write;
output  [15:0] demosaic_out_cols_out_din;
input   demosaic_out_cols_out_full_n;
output   demosaic_out_cols_out_write;
output  [15:0] ltm_in_rows_out_din;
input   ltm_in_rows_out_full_n;
output   ltm_in_rows_out_write;
output  [15:0] ltm_in_cols_out_din;
input   ltm_in_cols_out_full_n;
output   ltm_in_cols_out_write;
output  [15:0] lsc_out_rows_out_din;
input   lsc_out_rows_out_full_n;
output   lsc_out_rows_out_write;
output  [15:0] lsc_out_cols_out_din;
input   lsc_out_cols_out_full_n;
output   lsc_out_cols_out_write;
output  [15:0] aecin_rows_out_din;
input   aecin_rows_out_full_n;
output   aecin_rows_out_write;
output  [15:0] aecin_cols_out_din;
input   aecin_cols_out_full_n;
output   aecin_cols_out_write;

reg ap_done;
reg ap_idle;
reg start_write;
reg imgInput1_rows_out_write;
reg imgInput1_cols_out_write;
reg imgInput2_rows_out_write;
reg imgInput2_cols_out_write;
reg bpc_out_rows_out_write;
reg bpc_out_cols_out_write;
reg gain_out_rows_out_write;
reg gain_out_cols_out_write;
reg demosaic_out_rows_out_write;
reg demosaic_out_cols_out_write;
reg ltm_in_rows_out_write;
reg ltm_in_cols_out_write;
reg lsc_out_rows_out_write;
reg lsc_out_cols_out_write;
reg aecin_rows_out_write;
reg aecin_cols_out_write;

reg    real_start;
reg    start_once_reg;
reg    ap_done_reg;
(* fsm_encoding = "none" *) reg   [0:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    internal_ap_ready;
reg    imgInput1_rows_out_blk_n;
reg    imgInput1_cols_out_blk_n;
reg    imgInput2_rows_out_blk_n;
reg    imgInput2_cols_out_blk_n;
reg    bpc_out_rows_out_blk_n;
reg    bpc_out_cols_out_blk_n;
reg    gain_out_rows_out_blk_n;
reg    gain_out_cols_out_blk_n;
reg    demosaic_out_rows_out_blk_n;
reg    demosaic_out_cols_out_blk_n;
reg    ltm_in_rows_out_blk_n;
reg    ltm_in_cols_out_blk_n;
reg    lsc_out_rows_out_blk_n;
reg    lsc_out_cols_out_blk_n;
reg    aecin_rows_out_blk_n;
reg    aecin_cols_out_blk_n;
reg    ap_block_state1;
reg   [0:0] ap_NS_fsm;

// power-on initialization
initial begin
#0 start_once_reg = 1'b0;
#0 ap_done_reg = 1'b0;
#0 ap_CS_fsm = 1'd1;
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_done_reg <= 1'b0;
    end else begin
        if ((ap_continue == 1'b1)) begin
            ap_done_reg <= 1'b0;
        end else if ((~((1'b0 == aecin_rows_out_full_n) | (lsc_out_cols_out_full_n == 1'b0) | (lsc_out_rows_out_full_n == 1'b0) | (ltm_in_cols_out_full_n == 1'b0) | (ltm_in_rows_out_full_n == 1'b0) | (demosaic_out_cols_out_full_n == 1'b0) | (demosaic_out_rows_out_full_n == 1'b0) | (real_start == 1'b0) | (gain_out_cols_out_full_n == 1'b0) | (gain_out_rows_out_full_n == 1'b0) | (bpc_out_cols_out_full_n == 1'b0) | (bpc_out_rows_out_full_n == 1'b0) | (imgInput2_cols_out_full_n == 1'b0) | (imgInput2_rows_out_full_n == 1'b0) | (imgInput1_cols_out_full_n == 1'b0) | (imgInput1_rows_out_full_n == 1'b0) | (1'b0 == aecin_cols_out_full_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
            ap_done_reg <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        start_once_reg <= 1'b0;
    end else begin
        if (((internal_ap_ready == 1'b0) & (real_start == 1'b1))) begin
            start_once_reg <= 1'b1;
        end else if ((internal_ap_ready == 1'b1)) begin
            start_once_reg <= 1'b0;
        end
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        aecin_cols_out_blk_n = aecin_cols_out_full_n;
    end else begin
        aecin_cols_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b0 == aecin_rows_out_full_n) | (lsc_out_cols_out_full_n == 1'b0) | (lsc_out_rows_out_full_n == 1'b0) | (ltm_in_cols_out_full_n == 1'b0) | (ltm_in_rows_out_full_n == 1'b0) | (demosaic_out_cols_out_full_n == 1'b0) | (demosaic_out_rows_out_full_n == 1'b0) | (real_start == 1'b0) | (gain_out_cols_out_full_n == 1'b0) | (gain_out_rows_out_full_n == 1'b0) | (bpc_out_cols_out_full_n == 1'b0) | (bpc_out_rows_out_full_n == 1'b0) | (imgInput2_cols_out_full_n == 1'b0) | (imgInput2_rows_out_full_n == 1'b0) | (imgInput1_cols_out_full_n == 1'b0) | (imgInput1_rows_out_full_n == 1'b0) | (1'b0 == aecin_cols_out_full_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        aecin_cols_out_write = 1'b1;
    end else begin
        aecin_cols_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        aecin_rows_out_blk_n = aecin_rows_out_full_n;
    end else begin
        aecin_rows_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b0 == aecin_rows_out_full_n) | (lsc_out_cols_out_full_n == 1'b0) | (lsc_out_rows_out_full_n == 1'b0) | (ltm_in_cols_out_full_n == 1'b0) | (ltm_in_rows_out_full_n == 1'b0) | (demosaic_out_cols_out_full_n == 1'b0) | (demosaic_out_rows_out_full_n == 1'b0) | (real_start == 1'b0) | (gain_out_cols_out_full_n == 1'b0) | (gain_out_rows_out_full_n == 1'b0) | (bpc_out_cols_out_full_n == 1'b0) | (bpc_out_rows_out_full_n == 1'b0) | (imgInput2_cols_out_full_n == 1'b0) | (imgInput2_rows_out_full_n == 1'b0) | (imgInput1_cols_out_full_n == 1'b0) | (imgInput1_rows_out_full_n == 1'b0) | (1'b0 == aecin_cols_out_full_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        aecin_rows_out_write = 1'b1;
    end else begin
        aecin_rows_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b0 == aecin_rows_out_full_n) | (lsc_out_cols_out_full_n == 1'b0) | (lsc_out_rows_out_full_n == 1'b0) | (ltm_in_cols_out_full_n == 1'b0) | (ltm_in_rows_out_full_n == 1'b0) | (demosaic_out_cols_out_full_n == 1'b0) | (demosaic_out_rows_out_full_n == 1'b0) | (real_start == 1'b0) | (gain_out_cols_out_full_n == 1'b0) | (gain_out_rows_out_full_n == 1'b0) | (bpc_out_cols_out_full_n == 1'b0) | (bpc_out_rows_out_full_n == 1'b0) | (imgInput2_cols_out_full_n == 1'b0) | (imgInput2_rows_out_full_n == 1'b0) | (imgInput1_cols_out_full_n == 1'b0) | (imgInput1_rows_out_full_n == 1'b0) | (1'b0 == aecin_cols_out_full_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = ap_done_reg;
    end
end

always @ (*) begin
    if (((real_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        bpc_out_cols_out_blk_n = bpc_out_cols_out_full_n;
    end else begin
        bpc_out_cols_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b0 == aecin_rows_out_full_n) | (lsc_out_cols_out_full_n == 1'b0) | (lsc_out_rows_out_full_n == 1'b0) | (ltm_in_cols_out_full_n == 1'b0) | (ltm_in_rows_out_full_n == 1'b0) | (demosaic_out_cols_out_full_n == 1'b0) | (demosaic_out_rows_out_full_n == 1'b0) | (real_start == 1'b0) | (gain_out_cols_out_full_n == 1'b0) | (gain_out_rows_out_full_n == 1'b0) | (bpc_out_cols_out_full_n == 1'b0) | (bpc_out_rows_out_full_n == 1'b0) | (imgInput2_cols_out_full_n == 1'b0) | (imgInput2_rows_out_full_n == 1'b0) | (imgInput1_cols_out_full_n == 1'b0) | (imgInput1_rows_out_full_n == 1'b0) | (1'b0 == aecin_cols_out_full_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        bpc_out_cols_out_write = 1'b1;
    end else begin
        bpc_out_cols_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        bpc_out_rows_out_blk_n = bpc_out_rows_out_full_n;
    end else begin
        bpc_out_rows_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b0 == aecin_rows_out_full_n) | (lsc_out_cols_out_full_n == 1'b0) | (lsc_out_rows_out_full_n == 1'b0) | (ltm_in_cols_out_full_n == 1'b0) | (ltm_in_rows_out_full_n == 1'b0) | (demosaic_out_cols_out_full_n == 1'b0) | (demosaic_out_rows_out_full_n == 1'b0) | (real_start == 1'b0) | (gain_out_cols_out_full_n == 1'b0) | (gain_out_rows_out_full_n == 1'b0) | (bpc_out_cols_out_full_n == 1'b0) | (bpc_out_rows_out_full_n == 1'b0) | (imgInput2_cols_out_full_n == 1'b0) | (imgInput2_rows_out_full_n == 1'b0) | (imgInput1_cols_out_full_n == 1'b0) | (imgInput1_rows_out_full_n == 1'b0) | (1'b0 == aecin_cols_out_full_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        bpc_out_rows_out_write = 1'b1;
    end else begin
        bpc_out_rows_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        demosaic_out_cols_out_blk_n = demosaic_out_cols_out_full_n;
    end else begin
        demosaic_out_cols_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b0 == aecin_rows_out_full_n) | (lsc_out_cols_out_full_n == 1'b0) | (lsc_out_rows_out_full_n == 1'b0) | (ltm_in_cols_out_full_n == 1'b0) | (ltm_in_rows_out_full_n == 1'b0) | (demosaic_out_cols_out_full_n == 1'b0) | (demosaic_out_rows_out_full_n == 1'b0) | (real_start == 1'b0) | (gain_out_cols_out_full_n == 1'b0) | (gain_out_rows_out_full_n == 1'b0) | (bpc_out_cols_out_full_n == 1'b0) | (bpc_out_rows_out_full_n == 1'b0) | (imgInput2_cols_out_full_n == 1'b0) | (imgInput2_rows_out_full_n == 1'b0) | (imgInput1_cols_out_full_n == 1'b0) | (imgInput1_rows_out_full_n == 1'b0) | (1'b0 == aecin_cols_out_full_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        demosaic_out_cols_out_write = 1'b1;
    end else begin
        demosaic_out_cols_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        demosaic_out_rows_out_blk_n = demosaic_out_rows_out_full_n;
    end else begin
        demosaic_out_rows_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b0 == aecin_rows_out_full_n) | (lsc_out_cols_out_full_n == 1'b0) | (lsc_out_rows_out_full_n == 1'b0) | (ltm_in_cols_out_full_n == 1'b0) | (ltm_in_rows_out_full_n == 1'b0) | (demosaic_out_cols_out_full_n == 1'b0) | (demosaic_out_rows_out_full_n == 1'b0) | (real_start == 1'b0) | (gain_out_cols_out_full_n == 1'b0) | (gain_out_rows_out_full_n == 1'b0) | (bpc_out_cols_out_full_n == 1'b0) | (bpc_out_rows_out_full_n == 1'b0) | (imgInput2_cols_out_full_n == 1'b0) | (imgInput2_rows_out_full_n == 1'b0) | (imgInput1_cols_out_full_n == 1'b0) | (imgInput1_rows_out_full_n == 1'b0) | (1'b0 == aecin_cols_out_full_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        demosaic_out_rows_out_write = 1'b1;
    end else begin
        demosaic_out_rows_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        gain_out_cols_out_blk_n = gain_out_cols_out_full_n;
    end else begin
        gain_out_cols_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b0 == aecin_rows_out_full_n) | (lsc_out_cols_out_full_n == 1'b0) | (lsc_out_rows_out_full_n == 1'b0) | (ltm_in_cols_out_full_n == 1'b0) | (ltm_in_rows_out_full_n == 1'b0) | (demosaic_out_cols_out_full_n == 1'b0) | (demosaic_out_rows_out_full_n == 1'b0) | (real_start == 1'b0) | (gain_out_cols_out_full_n == 1'b0) | (gain_out_rows_out_full_n == 1'b0) | (bpc_out_cols_out_full_n == 1'b0) | (bpc_out_rows_out_full_n == 1'b0) | (imgInput2_cols_out_full_n == 1'b0) | (imgInput2_rows_out_full_n == 1'b0) | (imgInput1_cols_out_full_n == 1'b0) | (imgInput1_rows_out_full_n == 1'b0) | (1'b0 == aecin_cols_out_full_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        gain_out_cols_out_write = 1'b1;
    end else begin
        gain_out_cols_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        gain_out_rows_out_blk_n = gain_out_rows_out_full_n;
    end else begin
        gain_out_rows_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b0 == aecin_rows_out_full_n) | (lsc_out_cols_out_full_n == 1'b0) | (lsc_out_rows_out_full_n == 1'b0) | (ltm_in_cols_out_full_n == 1'b0) | (ltm_in_rows_out_full_n == 1'b0) | (demosaic_out_cols_out_full_n == 1'b0) | (demosaic_out_rows_out_full_n == 1'b0) | (real_start == 1'b0) | (gain_out_cols_out_full_n == 1'b0) | (gain_out_rows_out_full_n == 1'b0) | (bpc_out_cols_out_full_n == 1'b0) | (bpc_out_rows_out_full_n == 1'b0) | (imgInput2_cols_out_full_n == 1'b0) | (imgInput2_rows_out_full_n == 1'b0) | (imgInput1_cols_out_full_n == 1'b0) | (imgInput1_rows_out_full_n == 1'b0) | (1'b0 == aecin_cols_out_full_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        gain_out_rows_out_write = 1'b1;
    end else begin
        gain_out_rows_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        imgInput1_cols_out_blk_n = imgInput1_cols_out_full_n;
    end else begin
        imgInput1_cols_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b0 == aecin_rows_out_full_n) | (lsc_out_cols_out_full_n == 1'b0) | (lsc_out_rows_out_full_n == 1'b0) | (ltm_in_cols_out_full_n == 1'b0) | (ltm_in_rows_out_full_n == 1'b0) | (demosaic_out_cols_out_full_n == 1'b0) | (demosaic_out_rows_out_full_n == 1'b0) | (real_start == 1'b0) | (gain_out_cols_out_full_n == 1'b0) | (gain_out_rows_out_full_n == 1'b0) | (bpc_out_cols_out_full_n == 1'b0) | (bpc_out_rows_out_full_n == 1'b0) | (imgInput2_cols_out_full_n == 1'b0) | (imgInput2_rows_out_full_n == 1'b0) | (imgInput1_cols_out_full_n == 1'b0) | (imgInput1_rows_out_full_n == 1'b0) | (1'b0 == aecin_cols_out_full_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        imgInput1_cols_out_write = 1'b1;
    end else begin
        imgInput1_cols_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        imgInput1_rows_out_blk_n = imgInput1_rows_out_full_n;
    end else begin
        imgInput1_rows_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b0 == aecin_rows_out_full_n) | (lsc_out_cols_out_full_n == 1'b0) | (lsc_out_rows_out_full_n == 1'b0) | (ltm_in_cols_out_full_n == 1'b0) | (ltm_in_rows_out_full_n == 1'b0) | (demosaic_out_cols_out_full_n == 1'b0) | (demosaic_out_rows_out_full_n == 1'b0) | (real_start == 1'b0) | (gain_out_cols_out_full_n == 1'b0) | (gain_out_rows_out_full_n == 1'b0) | (bpc_out_cols_out_full_n == 1'b0) | (bpc_out_rows_out_full_n == 1'b0) | (imgInput2_cols_out_full_n == 1'b0) | (imgInput2_rows_out_full_n == 1'b0) | (imgInput1_cols_out_full_n == 1'b0) | (imgInput1_rows_out_full_n == 1'b0) | (1'b0 == aecin_cols_out_full_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        imgInput1_rows_out_write = 1'b1;
    end else begin
        imgInput1_rows_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        imgInput2_cols_out_blk_n = imgInput2_cols_out_full_n;
    end else begin
        imgInput2_cols_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b0 == aecin_rows_out_full_n) | (lsc_out_cols_out_full_n == 1'b0) | (lsc_out_rows_out_full_n == 1'b0) | (ltm_in_cols_out_full_n == 1'b0) | (ltm_in_rows_out_full_n == 1'b0) | (demosaic_out_cols_out_full_n == 1'b0) | (demosaic_out_rows_out_full_n == 1'b0) | (real_start == 1'b0) | (gain_out_cols_out_full_n == 1'b0) | (gain_out_rows_out_full_n == 1'b0) | (bpc_out_cols_out_full_n == 1'b0) | (bpc_out_rows_out_full_n == 1'b0) | (imgInput2_cols_out_full_n == 1'b0) | (imgInput2_rows_out_full_n == 1'b0) | (imgInput1_cols_out_full_n == 1'b0) | (imgInput1_rows_out_full_n == 1'b0) | (1'b0 == aecin_cols_out_full_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        imgInput2_cols_out_write = 1'b1;
    end else begin
        imgInput2_cols_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        imgInput2_rows_out_blk_n = imgInput2_rows_out_full_n;
    end else begin
        imgInput2_rows_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b0 == aecin_rows_out_full_n) | (lsc_out_cols_out_full_n == 1'b0) | (lsc_out_rows_out_full_n == 1'b0) | (ltm_in_cols_out_full_n == 1'b0) | (ltm_in_rows_out_full_n == 1'b0) | (demosaic_out_cols_out_full_n == 1'b0) | (demosaic_out_rows_out_full_n == 1'b0) | (real_start == 1'b0) | (gain_out_cols_out_full_n == 1'b0) | (gain_out_rows_out_full_n == 1'b0) | (bpc_out_cols_out_full_n == 1'b0) | (bpc_out_rows_out_full_n == 1'b0) | (imgInput2_cols_out_full_n == 1'b0) | (imgInput2_rows_out_full_n == 1'b0) | (imgInput1_cols_out_full_n == 1'b0) | (imgInput1_rows_out_full_n == 1'b0) | (1'b0 == aecin_cols_out_full_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        imgInput2_rows_out_write = 1'b1;
    end else begin
        imgInput2_rows_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((1'b0 == aecin_rows_out_full_n) | (lsc_out_cols_out_full_n == 1'b0) | (lsc_out_rows_out_full_n == 1'b0) | (ltm_in_cols_out_full_n == 1'b0) | (ltm_in_rows_out_full_n == 1'b0) | (demosaic_out_cols_out_full_n == 1'b0) | (demosaic_out_rows_out_full_n == 1'b0) | (real_start == 1'b0) | (gain_out_cols_out_full_n == 1'b0) | (gain_out_rows_out_full_n == 1'b0) | (bpc_out_cols_out_full_n == 1'b0) | (bpc_out_rows_out_full_n == 1'b0) | (imgInput2_cols_out_full_n == 1'b0) | (imgInput2_rows_out_full_n == 1'b0) | (imgInput1_cols_out_full_n == 1'b0) | (imgInput1_rows_out_full_n == 1'b0) | (1'b0 == aecin_cols_out_full_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        internal_ap_ready = 1'b1;
    end else begin
        internal_ap_ready = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        lsc_out_cols_out_blk_n = lsc_out_cols_out_full_n;
    end else begin
        lsc_out_cols_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b0 == aecin_rows_out_full_n) | (lsc_out_cols_out_full_n == 1'b0) | (lsc_out_rows_out_full_n == 1'b0) | (ltm_in_cols_out_full_n == 1'b0) | (ltm_in_rows_out_full_n == 1'b0) | (demosaic_out_cols_out_full_n == 1'b0) | (demosaic_out_rows_out_full_n == 1'b0) | (real_start == 1'b0) | (gain_out_cols_out_full_n == 1'b0) | (gain_out_rows_out_full_n == 1'b0) | (bpc_out_cols_out_full_n == 1'b0) | (bpc_out_rows_out_full_n == 1'b0) | (imgInput2_cols_out_full_n == 1'b0) | (imgInput2_rows_out_full_n == 1'b0) | (imgInput1_cols_out_full_n == 1'b0) | (imgInput1_rows_out_full_n == 1'b0) | (1'b0 == aecin_cols_out_full_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        lsc_out_cols_out_write = 1'b1;
    end else begin
        lsc_out_cols_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        lsc_out_rows_out_blk_n = lsc_out_rows_out_full_n;
    end else begin
        lsc_out_rows_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b0 == aecin_rows_out_full_n) | (lsc_out_cols_out_full_n == 1'b0) | (lsc_out_rows_out_full_n == 1'b0) | (ltm_in_cols_out_full_n == 1'b0) | (ltm_in_rows_out_full_n == 1'b0) | (demosaic_out_cols_out_full_n == 1'b0) | (demosaic_out_rows_out_full_n == 1'b0) | (real_start == 1'b0) | (gain_out_cols_out_full_n == 1'b0) | (gain_out_rows_out_full_n == 1'b0) | (bpc_out_cols_out_full_n == 1'b0) | (bpc_out_rows_out_full_n == 1'b0) | (imgInput2_cols_out_full_n == 1'b0) | (imgInput2_rows_out_full_n == 1'b0) | (imgInput1_cols_out_full_n == 1'b0) | (imgInput1_rows_out_full_n == 1'b0) | (1'b0 == aecin_cols_out_full_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        lsc_out_rows_out_write = 1'b1;
    end else begin
        lsc_out_rows_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ltm_in_cols_out_blk_n = ltm_in_cols_out_full_n;
    end else begin
        ltm_in_cols_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b0 == aecin_rows_out_full_n) | (lsc_out_cols_out_full_n == 1'b0) | (lsc_out_rows_out_full_n == 1'b0) | (ltm_in_cols_out_full_n == 1'b0) | (ltm_in_rows_out_full_n == 1'b0) | (demosaic_out_cols_out_full_n == 1'b0) | (demosaic_out_rows_out_full_n == 1'b0) | (real_start == 1'b0) | (gain_out_cols_out_full_n == 1'b0) | (gain_out_rows_out_full_n == 1'b0) | (bpc_out_cols_out_full_n == 1'b0) | (bpc_out_rows_out_full_n == 1'b0) | (imgInput2_cols_out_full_n == 1'b0) | (imgInput2_rows_out_full_n == 1'b0) | (imgInput1_cols_out_full_n == 1'b0) | (imgInput1_rows_out_full_n == 1'b0) | (1'b0 == aecin_cols_out_full_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ltm_in_cols_out_write = 1'b1;
    end else begin
        ltm_in_cols_out_write = 1'b0;
    end
end

always @ (*) begin
    if ((~((real_start == 1'b0) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ltm_in_rows_out_blk_n = ltm_in_rows_out_full_n;
    end else begin
        ltm_in_rows_out_blk_n = 1'b1;
    end
end

always @ (*) begin
    if ((~((1'b0 == aecin_rows_out_full_n) | (lsc_out_cols_out_full_n == 1'b0) | (lsc_out_rows_out_full_n == 1'b0) | (ltm_in_cols_out_full_n == 1'b0) | (ltm_in_rows_out_full_n == 1'b0) | (demosaic_out_cols_out_full_n == 1'b0) | (demosaic_out_rows_out_full_n == 1'b0) | (real_start == 1'b0) | (gain_out_cols_out_full_n == 1'b0) | (gain_out_rows_out_full_n == 1'b0) | (bpc_out_cols_out_full_n == 1'b0) | (bpc_out_rows_out_full_n == 1'b0) | (imgInput2_cols_out_full_n == 1'b0) | (imgInput2_rows_out_full_n == 1'b0) | (imgInput1_cols_out_full_n == 1'b0) | (imgInput1_rows_out_full_n == 1'b0) | (1'b0 == aecin_cols_out_full_n) | (ap_done_reg == 1'b1)) & (1'b1 == ap_CS_fsm_state1))) begin
        ltm_in_rows_out_write = 1'b1;
    end else begin
        ltm_in_rows_out_write = 1'b0;
    end
end

always @ (*) begin
    if (((start_full_n == 1'b0) & (start_once_reg == 1'b0))) begin
        real_start = 1'b0;
    end else begin
        real_start = ap_start;
    end
end

always @ (*) begin
    if (((start_once_reg == 1'b0) & (real_start == 1'b1))) begin
        start_write = 1'b1;
    end else begin
        start_write = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            ap_NS_fsm = ap_ST_fsm_state1;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign aecin_cols_out_din = width;

assign aecin_rows_out_din = height;

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

always @ (*) begin
    ap_block_state1 = ((1'b0 == aecin_rows_out_full_n) | (lsc_out_cols_out_full_n == 1'b0) | (lsc_out_rows_out_full_n == 1'b0) | (ltm_in_cols_out_full_n == 1'b0) | (ltm_in_rows_out_full_n == 1'b0) | (demosaic_out_cols_out_full_n == 1'b0) | (demosaic_out_rows_out_full_n == 1'b0) | (real_start == 1'b0) | (gain_out_cols_out_full_n == 1'b0) | (gain_out_rows_out_full_n == 1'b0) | (bpc_out_cols_out_full_n == 1'b0) | (bpc_out_rows_out_full_n == 1'b0) | (imgInput2_cols_out_full_n == 1'b0) | (imgInput2_rows_out_full_n == 1'b0) | (imgInput1_cols_out_full_n == 1'b0) | (imgInput1_rows_out_full_n == 1'b0) | (1'b0 == aecin_cols_out_full_n) | (ap_done_reg == 1'b1));
end

assign ap_ready = internal_ap_ready;

assign bpc_out_cols_out_din = width;

assign bpc_out_rows_out_din = height;

assign demosaic_out_cols_out_din = width;

assign demosaic_out_rows_out_din = height;

assign gain_out_cols_out_din = width;

assign gain_out_rows_out_din = height;

assign imgInput1_cols_out_din = width;

assign imgInput1_rows_out_din = height;

assign imgInput2_cols_out_din = width;

assign imgInput2_rows_out_din = height;

assign lsc_out_cols_out_din = width;

assign lsc_out_rows_out_din = height;

assign ltm_in_cols_out_din = width;

assign ltm_in_rows_out_din = height;

assign start_out = real_start;

endmodule //ISPpipeline_Block_Ma
