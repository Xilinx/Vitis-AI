# RUN: tf-mlir-translate -graphdef-to-mlir %s -tf-input-arrays=input -tf-input-data-types=DT_FLOAT -tf-input-shapes='' -tf-output-arrays=out:1,out -o - | FileCheck %s

# Verify that we match correctly the input / output when they are scalar.

# CHECK: func @main(%arg0: tensor<f32>) -> (tensor<f32>, tensor<f32>)
# CHECK-NEXT: attributes {tf.entry_function = {inputs = "input", outputs = "out"}} {
# CHECK:  "tf.Placeholder.input"(%arg0)

# CHECK: tf.Relu
# CHECK:  %[[IDENTITY:[0-9]+]]:3 = tf_executor.island
# CHECK-NEXT: tf.Identity
# CHECK:  fetch %[[IDENTITY]]#1, %[[IDENTITY]]#0 : tensor<f32>, tensor<f32>

node {
  name: "input"
  op: "Placeholder"
  device: "/device:CPU:0"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "shape"
    value {
      shape {
        dim {
          size: 1
        }
      }
    }
  }
}
node {
  name: "Relu"
  op: "Relu"
  input: "input"
  device: "/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "out"
  op: "IdentityN"
  input: "Relu"
  input: "Relu"
  attr: {
    key: "T"
    value: {
      list: {
        type: DT_FLOAT
        type: DT_FLOAT
      }
    }
  }

}
versions {
  producer: 27
}
