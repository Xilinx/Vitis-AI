# RUN: tf-mlir-translate -graphdef-to-splatted-mlir %s -o - | FileCheck %s --dump-input-on-failure

# CHECK: tf_executor.SwitchN
# CHECK-SAME: of 3 : tensor<i32>
# CHECK-SAME: T = "tfdtype$DT_INT32"
# CHECK-SAME: name = "Case/branch_index/_3"

node {
  name: "Case/branch_index"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_INT32
        tensor_shape {
        }
        int_val: 0
      }
    }
  }
}
node {
  name: "Case/input_0"
  op: "Const"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 1
      }
    }
  }
}
node {
  name: "Case/branch_index/_3"
  op: "_SwitchN"
  input: "Case/branch_index"
  input: "Case/branch_index"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
  attr {
    key: "num_outs"
    value {
      i: 3
    }
  }
}
node {
  name: "Case/Case/input_0/_7"
  op: "_SwitchN"
  input: "Case/input_0"
  input: "Case/branch_index"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "_class"
    value {
      list {
        s: "Case/input_0"
      }
    }
  }
  attr {
    key: "num_outs"
    value {
      i: 3
    }
  }
}
node {
  name: "Case/pivot_0/_4"
  op: "Identity"
  input: "Case/branch_index/_3"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Case/pivot_1/_5"
  op: "Identity"
  input: "Case/branch_index/_3:1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Case/pivot_2/_6"
  op: "Identity"
  input: "Case/branch_index/_3:2"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "Case/branch0/_0/mul/y"
  op: "Const"
  input: "^Case/pivot_0/_4"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 2
      }
    }
  }
}
node {
  name: "Case/branch1/_1/mul/y"
  op: "Const"
  input: "^Case/pivot_1/_5"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 3
      }
    }
  }
}
node {
  name: "Case/branch2/_2/mul/y"
  op: "Const"
  input: "^Case/pivot_2/_6"
  attr {
    key: "dtype"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "value"
    value {
      tensor {
        dtype: DT_FLOAT
        tensor_shape {
        }
        float_val: 4
      }
    }
  }
}
node {
  name: "Case/branch0/_0/mul_0"
  op: "Mul"
  input: "Case/Case/input_0/_7"
  input: "Case/branch0/_0/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Case/branch1/_1/mul_0"
  op: "Mul"
  input: "Case/Case/input_0/_7:1"
  input: "Case/branch1/_1/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Case/branch2/_2/mul_0"
  op: "Mul"
  input: "Case/Case/input_0/_7:2"
  input: "Case/branch2/_2/mul/y"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "Case/merge/_9"
  op: "Merge"
  input: "Case/branch0/_0/mul_0"
  input: "Case/branch1/_1/mul_0"
  input: "Case/branch2/_2/mul_0"
  attr {
    key: "N"
    value {
      i: 3
    }
  }
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
}
node {
  name: "__inference_run_240_RetVal"
  op: "_Retval"
  input: "Case/merge/_9"
  device: "/job:localhost/replica:0/task:0/device:CPU:0"
  attr {
    key: "T"
    value {
      type: DT_FLOAT
    }
  }
  attr {
    key: "index"
    value {
      i: 0
    }
  }
}
library {
}
versions {
  producer: 126
}
