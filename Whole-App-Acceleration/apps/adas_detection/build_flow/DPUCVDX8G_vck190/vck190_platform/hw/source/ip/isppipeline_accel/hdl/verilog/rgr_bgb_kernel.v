// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.2
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module rgr_bgb_kernel (
        ap_clk,
        ap_rst,
        imgblock_0_0_V_read,
        imgblock_0_1_V_read,
        imgblock_0_2_V_read,
        imgblock_0_3_V_read,
        imgblock_0_4_V_read,
        imgblock_0_5_V_read,
        imgblock_0_6_V_read,
        imgblock_0_7_V_read,
        imgblock_0_8_V_read,
        imgblock_0_9_V_read,
        imgblock_1_0_V_read,
        imgblock_1_1_V_read,
        imgblock_1_2_V_read,
        imgblock_1_3_V_read,
        imgblock_1_4_V_read,
        imgblock_1_5_V_read,
        imgblock_1_6_V_read,
        imgblock_1_7_V_read,
        imgblock_1_8_V_read,
        imgblock_1_9_V_read,
        imgblock_2_0_V_read,
        imgblock_2_1_V_read,
        imgblock_2_2_V_read,
        imgblock_2_3_V_read,
        imgblock_2_4_V_read,
        imgblock_2_5_V_read,
        imgblock_2_6_V_read,
        imgblock_2_7_V_read,
        imgblock_2_8_V_read,
        imgblock_2_9_V_read,
        imgblock_3_0_V_read,
        imgblock_3_1_V_read,
        imgblock_3_2_V_read,
        imgblock_3_3_V_read,
        imgblock_3_4_V_read,
        imgblock_3_5_V_read,
        imgblock_3_6_V_read,
        imgblock_3_7_V_read,
        imgblock_3_8_V_read,
        imgblock_3_9_V_read,
        imgblock_4_0_V_read,
        imgblock_4_1_V_read,
        imgblock_4_2_V_read,
        imgblock_4_3_V_read,
        imgblock_4_4_V_read,
        imgblock_4_5_V_read,
        imgblock_4_6_V_read,
        imgblock_4_7_V_read,
        imgblock_4_8_V_read,
        imgblock_4_9_V_read,
        loop_r,
        ap_return,
        ap_ce
);


input   ap_clk;
input   ap_rst;
input  [9:0] imgblock_0_0_V_read;
input  [9:0] imgblock_0_1_V_read;
input  [9:0] imgblock_0_2_V_read;
input  [9:0] imgblock_0_3_V_read;
input  [9:0] imgblock_0_4_V_read;
input  [9:0] imgblock_0_5_V_read;
input  [9:0] imgblock_0_6_V_read;
input  [9:0] imgblock_0_7_V_read;
input  [9:0] imgblock_0_8_V_read;
input  [9:0] imgblock_0_9_V_read;
input  [9:0] imgblock_1_0_V_read;
input  [9:0] imgblock_1_1_V_read;
input  [9:0] imgblock_1_2_V_read;
input  [9:0] imgblock_1_3_V_read;
input  [9:0] imgblock_1_4_V_read;
input  [9:0] imgblock_1_5_V_read;
input  [9:0] imgblock_1_6_V_read;
input  [9:0] imgblock_1_7_V_read;
input  [9:0] imgblock_1_8_V_read;
input  [9:0] imgblock_1_9_V_read;
input  [9:0] imgblock_2_0_V_read;
input  [9:0] imgblock_2_1_V_read;
input  [9:0] imgblock_2_2_V_read;
input  [9:0] imgblock_2_3_V_read;
input  [9:0] imgblock_2_4_V_read;
input  [9:0] imgblock_2_5_V_read;
input  [9:0] imgblock_2_6_V_read;
input  [9:0] imgblock_2_7_V_read;
input  [9:0] imgblock_2_8_V_read;
input  [9:0] imgblock_2_9_V_read;
input  [9:0] imgblock_3_0_V_read;
input  [9:0] imgblock_3_1_V_read;
input  [9:0] imgblock_3_2_V_read;
input  [9:0] imgblock_3_3_V_read;
input  [9:0] imgblock_3_4_V_read;
input  [9:0] imgblock_3_5_V_read;
input  [9:0] imgblock_3_6_V_read;
input  [9:0] imgblock_3_7_V_read;
input  [9:0] imgblock_3_8_V_read;
input  [9:0] imgblock_3_9_V_read;
input  [9:0] imgblock_4_0_V_read;
input  [9:0] imgblock_4_1_V_read;
input  [9:0] imgblock_4_2_V_read;
input  [9:0] imgblock_4_3_V_read;
input  [9:0] imgblock_4_4_V_read;
input  [9:0] imgblock_4_5_V_read;
input  [9:0] imgblock_4_6_V_read;
input  [9:0] imgblock_4_7_V_read;
input  [9:0] imgblock_4_8_V_read;
input  [9:0] imgblock_4_9_V_read;
input  [1:0] loop_r;
output  [13:0] ap_return;
input   ap_ce;

wire   [11:0] ret_V_2_fu_706_p2;
reg   [11:0] ret_V_2_reg_1036;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state2_pp0_stage0_iter1;
wire    ap_block_state3_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_11001;
wire   [10:0] add_ln1353_4_fu_772_p2;
reg   [10:0] add_ln1353_4_reg_1041;
reg   [9:0] lshr_ln_reg_1046;
wire   [13:0] add_ln96_fu_918_p2;
reg   [13:0] add_ln96_reg_1051;
wire   [14:0] res_fu_956_p2;
reg   [14:0] res_reg_1056;
wire    ap_block_pp0_stage0;
wire   [2:0] zext_ln215_fu_454_p1;
wire   [2:0] add_ln215_fu_458_p2;
wire   [3:0] zext_ln215_1_fu_464_p1;
wire   [9:0] tmp_s_fu_468_p12;
wire   [9:0] tmp_37_fu_498_p12;
wire   [10:0] lhs_V_fu_494_p1;
wire   [10:0] rhs_V_fu_524_p1;
wire   [2:0] add_ln215_1_fu_534_p2;
wire   [3:0] zext_ln215_4_fu_540_p1;
wire   [9:0] tmp_38_fu_544_p12;
wire   [2:0] add_ln215_2_fu_574_p2;
wire   [3:0] zext_ln215_6_fu_580_p1;
wire   [9:0] tmp_39_fu_584_p12;
wire   [10:0] lhs_V_1_fu_570_p1;
wire   [10:0] rhs_V_1_fu_610_p1;
wire   [10:0] ret_V_1_fu_614_p2;
wire   [3:0] tmp_40_fu_624_p11;
wire   [9:0] tmp_40_fu_624_p12;
wire   [2:0] or_ln_fu_654_p3;
wire   [3:0] tmp_41_fu_666_p11;
wire   [9:0] tmp_41_fu_666_p12;
wire   [10:0] zext_ln1353_24_fu_692_p1;
wire   [10:0] zext_ln215_9_fu_650_p1;
wire   [10:0] add_ln1353_fu_696_p2;
wire   [11:0] lhs_V_2_fu_620_p1;
wire   [11:0] zext_ln1353_25_fu_702_p1;
wire   [9:0] tmp_fu_712_p12;
wire   [9:0] tmp_42_fu_742_p12;
wire   [10:0] zext_ln1353_26_fu_768_p1;
wire   [10:0] zext_ln215_11_fu_738_p1;
wire   [9:0] tmp_43_fu_778_p12;
wire   [9:0] tmp_44_fu_808_p12;
wire   [10:0] lhs_V_3_fu_804_p1;
wire   [10:0] rhs_V_2_fu_834_p1;
wire   [10:0] ret_V_4_fu_838_p2;
wire   [12:0] t3_fu_844_p3;
wire   [9:0] tmp_45_fu_856_p12;
wire   [11:0] shl_ln_fu_886_p3;
wire   [12:0] zext_ln95_fu_882_p1;
wire   [12:0] zext_ln95_1_fu_894_p1;
wire   [12:0] t4_fu_898_p2;
wire   [10:0] ret_V_fu_528_p2;
wire   [13:0] zext_ln95_2_fu_904_p1;
wire   [13:0] zext_ln94_fu_852_p1;
wire   [12:0] zext_ln1353_fu_924_p1;
wire   [12:0] zext_ln1353_27_fu_927_p1;
wire   [12:0] ret_V_3_fu_930_p2;
wire   [13:0] zext_ln96_fu_940_p1;
wire   [13:0] zext_ln91_fu_936_p1;
wire   [13:0] sub_ln96_fu_943_p2;
wire  signed [14:0] sext_ln96_fu_949_p1;
wire   [14:0] zext_ln96_1_fu_953_p1;
wire   [14:0] sub_ln97_fu_969_p2;
wire   [11:0] trunc_ln97_3_fu_974_p4;
wire  signed [12:0] sext_ln97_fu_984_p1;
wire   [13:0] zext_ln97_fu_988_p1;
wire   [11:0] trunc_ln97_4_fu_998_p4;
wire  signed [12:0] sext_ln97_1_fu_1007_p1;
wire   [0:0] tmp_135_fu_962_p3;
wire   [13:0] sub_ln97_1_fu_992_p2;
wire   [13:0] zext_ln97_1_fu_1011_p1;
wire   [0:0] icmp_ln98_fu_1023_p2;
wire   [13:0] select_ln97_fu_1015_p3;
reg   [9:0] imgblock_0_0_V_read_int_reg;
reg   [9:0] imgblock_0_1_V_read_int_reg;
reg   [9:0] imgblock_0_2_V_read_int_reg;
reg   [9:0] imgblock_0_3_V_read_int_reg;
reg   [9:0] imgblock_0_4_V_read_int_reg;
reg   [9:0] imgblock_0_5_V_read_int_reg;
reg   [9:0] imgblock_0_6_V_read_int_reg;
reg   [9:0] imgblock_0_7_V_read_int_reg;
reg   [9:0] imgblock_0_8_V_read_int_reg;
reg   [9:0] imgblock_0_9_V_read_int_reg;
reg   [9:0] imgblock_1_0_V_read_int_reg;
reg   [9:0] imgblock_1_1_V_read_int_reg;
reg   [9:0] imgblock_1_2_V_read_int_reg;
reg   [9:0] imgblock_1_3_V_read_int_reg;
reg   [9:0] imgblock_1_4_V_read_int_reg;
reg   [9:0] imgblock_1_5_V_read_int_reg;
reg   [9:0] imgblock_1_6_V_read_int_reg;
reg   [9:0] imgblock_1_7_V_read_int_reg;
reg   [9:0] imgblock_1_8_V_read_int_reg;
reg   [9:0] imgblock_1_9_V_read_int_reg;
reg   [9:0] imgblock_2_0_V_read_int_reg;
reg   [9:0] imgblock_2_1_V_read_int_reg;
reg   [9:0] imgblock_2_2_V_read_int_reg;
reg   [9:0] imgblock_2_3_V_read_int_reg;
reg   [9:0] imgblock_2_4_V_read_int_reg;
reg   [9:0] imgblock_2_5_V_read_int_reg;
reg   [9:0] imgblock_2_6_V_read_int_reg;
reg   [9:0] imgblock_2_7_V_read_int_reg;
reg   [9:0] imgblock_2_8_V_read_int_reg;
reg   [9:0] imgblock_2_9_V_read_int_reg;
reg   [9:0] imgblock_3_0_V_read_int_reg;
reg   [9:0] imgblock_3_1_V_read_int_reg;
reg   [9:0] imgblock_3_2_V_read_int_reg;
reg   [9:0] imgblock_3_3_V_read_int_reg;
reg   [9:0] imgblock_3_4_V_read_int_reg;
reg   [9:0] imgblock_3_5_V_read_int_reg;
reg   [9:0] imgblock_3_6_V_read_int_reg;
reg   [9:0] imgblock_3_7_V_read_int_reg;
reg   [9:0] imgblock_3_8_V_read_int_reg;
reg   [9:0] imgblock_3_9_V_read_int_reg;
reg   [9:0] imgblock_4_0_V_read_int_reg;
reg   [9:0] imgblock_4_1_V_read_int_reg;
reg   [9:0] imgblock_4_2_V_read_int_reg;
reg   [9:0] imgblock_4_3_V_read_int_reg;
reg   [9:0] imgblock_4_4_V_read_int_reg;
reg   [9:0] imgblock_4_5_V_read_int_reg;
reg   [9:0] imgblock_4_6_V_read_int_reg;
reg   [9:0] imgblock_4_7_V_read_int_reg;
reg   [9:0] imgblock_4_8_V_read_int_reg;
reg   [9:0] imgblock_4_9_V_read_int_reg;
reg   [1:0] loop_r_int_reg;

ISPPipeline_accelkbM #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 10 ),
    .din3_WIDTH( 10 ),
    .din4_WIDTH( 10 ),
    .din5_WIDTH( 10 ),
    .din6_WIDTH( 10 ),
    .din7_WIDTH( 10 ),
    .din8_WIDTH( 10 ),
    .din9_WIDTH( 10 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 10 ))
ISPPipeline_accelkbM_U285(
    .din0(imgblock_0_0_V_read_int_reg),
    .din1(imgblock_0_1_V_read_int_reg),
    .din2(imgblock_0_2_V_read_int_reg),
    .din3(imgblock_0_3_V_read_int_reg),
    .din4(imgblock_0_4_V_read_int_reg),
    .din5(imgblock_0_5_V_read_int_reg),
    .din6(imgblock_0_6_V_read_int_reg),
    .din7(imgblock_0_7_V_read_int_reg),
    .din8(imgblock_0_8_V_read_int_reg),
    .din9(imgblock_0_9_V_read_int_reg),
    .din10(zext_ln215_1_fu_464_p1),
    .dout(tmp_s_fu_468_p12)
);

ISPPipeline_accelkbM #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 10 ),
    .din3_WIDTH( 10 ),
    .din4_WIDTH( 10 ),
    .din5_WIDTH( 10 ),
    .din6_WIDTH( 10 ),
    .din7_WIDTH( 10 ),
    .din8_WIDTH( 10 ),
    .din9_WIDTH( 10 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 10 ))
ISPPipeline_accelkbM_U286(
    .din0(imgblock_4_0_V_read_int_reg),
    .din1(imgblock_4_1_V_read_int_reg),
    .din2(imgblock_4_2_V_read_int_reg),
    .din3(imgblock_4_3_V_read_int_reg),
    .din4(imgblock_4_4_V_read_int_reg),
    .din5(imgblock_4_5_V_read_int_reg),
    .din6(imgblock_4_6_V_read_int_reg),
    .din7(imgblock_4_7_V_read_int_reg),
    .din8(imgblock_4_8_V_read_int_reg),
    .din9(imgblock_4_9_V_read_int_reg),
    .din10(zext_ln215_1_fu_464_p1),
    .dout(tmp_37_fu_498_p12)
);

ISPPipeline_accelkbM #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 10 ),
    .din3_WIDTH( 10 ),
    .din4_WIDTH( 10 ),
    .din5_WIDTH( 10 ),
    .din6_WIDTH( 10 ),
    .din7_WIDTH( 10 ),
    .din8_WIDTH( 10 ),
    .din9_WIDTH( 10 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 10 ))
ISPPipeline_accelkbM_U287(
    .din0(imgblock_1_0_V_read_int_reg),
    .din1(imgblock_1_1_V_read_int_reg),
    .din2(imgblock_1_2_V_read_int_reg),
    .din3(imgblock_1_3_V_read_int_reg),
    .din4(imgblock_1_4_V_read_int_reg),
    .din5(imgblock_1_5_V_read_int_reg),
    .din6(imgblock_1_6_V_read_int_reg),
    .din7(imgblock_1_7_V_read_int_reg),
    .din8(imgblock_1_8_V_read_int_reg),
    .din9(imgblock_1_9_V_read_int_reg),
    .din10(zext_ln215_4_fu_540_p1),
    .dout(tmp_38_fu_544_p12)
);

ISPPipeline_accelkbM #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 10 ),
    .din3_WIDTH( 10 ),
    .din4_WIDTH( 10 ),
    .din5_WIDTH( 10 ),
    .din6_WIDTH( 10 ),
    .din7_WIDTH( 10 ),
    .din8_WIDTH( 10 ),
    .din9_WIDTH( 10 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 10 ))
ISPPipeline_accelkbM_U288(
    .din0(imgblock_1_0_V_read_int_reg),
    .din1(imgblock_1_1_V_read_int_reg),
    .din2(imgblock_1_2_V_read_int_reg),
    .din3(imgblock_1_3_V_read_int_reg),
    .din4(imgblock_1_4_V_read_int_reg),
    .din5(imgblock_1_5_V_read_int_reg),
    .din6(imgblock_1_6_V_read_int_reg),
    .din7(imgblock_1_7_V_read_int_reg),
    .din8(imgblock_1_8_V_read_int_reg),
    .din9(imgblock_1_9_V_read_int_reg),
    .din10(zext_ln215_6_fu_580_p1),
    .dout(tmp_39_fu_584_p12)
);

ISPPipeline_accelkbM #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 10 ),
    .din3_WIDTH( 10 ),
    .din4_WIDTH( 10 ),
    .din5_WIDTH( 10 ),
    .din6_WIDTH( 10 ),
    .din7_WIDTH( 10 ),
    .din8_WIDTH( 10 ),
    .din9_WIDTH( 10 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 10 ))
ISPPipeline_accelkbM_U289(
    .din0(imgblock_2_0_V_read_int_reg),
    .din1(imgblock_2_1_V_read_int_reg),
    .din2(imgblock_2_2_V_read_int_reg),
    .din3(imgblock_2_3_V_read_int_reg),
    .din4(imgblock_2_4_V_read_int_reg),
    .din5(imgblock_2_5_V_read_int_reg),
    .din6(imgblock_2_6_V_read_int_reg),
    .din7(imgblock_2_7_V_read_int_reg),
    .din8(imgblock_2_8_V_read_int_reg),
    .din9(imgblock_2_9_V_read_int_reg),
    .din10(tmp_40_fu_624_p11),
    .dout(tmp_40_fu_624_p12)
);

ISPPipeline_accelkbM #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 10 ),
    .din3_WIDTH( 10 ),
    .din4_WIDTH( 10 ),
    .din5_WIDTH( 10 ),
    .din6_WIDTH( 10 ),
    .din7_WIDTH( 10 ),
    .din8_WIDTH( 10 ),
    .din9_WIDTH( 10 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 10 ))
ISPPipeline_accelkbM_U290(
    .din0(imgblock_2_0_V_read_int_reg),
    .din1(imgblock_2_1_V_read_int_reg),
    .din2(imgblock_2_2_V_read_int_reg),
    .din3(imgblock_2_3_V_read_int_reg),
    .din4(imgblock_2_4_V_read_int_reg),
    .din5(imgblock_2_5_V_read_int_reg),
    .din6(imgblock_2_6_V_read_int_reg),
    .din7(imgblock_2_7_V_read_int_reg),
    .din8(imgblock_2_8_V_read_int_reg),
    .din9(imgblock_2_9_V_read_int_reg),
    .din10(tmp_41_fu_666_p11),
    .dout(tmp_41_fu_666_p12)
);

ISPPipeline_accelkbM #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 10 ),
    .din3_WIDTH( 10 ),
    .din4_WIDTH( 10 ),
    .din5_WIDTH( 10 ),
    .din6_WIDTH( 10 ),
    .din7_WIDTH( 10 ),
    .din8_WIDTH( 10 ),
    .din9_WIDTH( 10 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 10 ))
ISPPipeline_accelkbM_U291(
    .din0(imgblock_3_0_V_read_int_reg),
    .din1(imgblock_3_1_V_read_int_reg),
    .din2(imgblock_3_2_V_read_int_reg),
    .din3(imgblock_3_3_V_read_int_reg),
    .din4(imgblock_3_4_V_read_int_reg),
    .din5(imgblock_3_5_V_read_int_reg),
    .din6(imgblock_3_6_V_read_int_reg),
    .din7(imgblock_3_7_V_read_int_reg),
    .din8(imgblock_3_8_V_read_int_reg),
    .din9(imgblock_3_9_V_read_int_reg),
    .din10(zext_ln215_4_fu_540_p1),
    .dout(tmp_fu_712_p12)
);

ISPPipeline_accelkbM #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 10 ),
    .din3_WIDTH( 10 ),
    .din4_WIDTH( 10 ),
    .din5_WIDTH( 10 ),
    .din6_WIDTH( 10 ),
    .din7_WIDTH( 10 ),
    .din8_WIDTH( 10 ),
    .din9_WIDTH( 10 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 10 ))
ISPPipeline_accelkbM_U292(
    .din0(imgblock_3_0_V_read_int_reg),
    .din1(imgblock_3_1_V_read_int_reg),
    .din2(imgblock_3_2_V_read_int_reg),
    .din3(imgblock_3_3_V_read_int_reg),
    .din4(imgblock_3_4_V_read_int_reg),
    .din5(imgblock_3_5_V_read_int_reg),
    .din6(imgblock_3_6_V_read_int_reg),
    .din7(imgblock_3_7_V_read_int_reg),
    .din8(imgblock_3_8_V_read_int_reg),
    .din9(imgblock_3_9_V_read_int_reg),
    .din10(zext_ln215_6_fu_580_p1),
    .dout(tmp_42_fu_742_p12)
);

ISPPipeline_accelkbM #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 10 ),
    .din3_WIDTH( 10 ),
    .din4_WIDTH( 10 ),
    .din5_WIDTH( 10 ),
    .din6_WIDTH( 10 ),
    .din7_WIDTH( 10 ),
    .din8_WIDTH( 10 ),
    .din9_WIDTH( 10 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 10 ))
ISPPipeline_accelkbM_U293(
    .din0(imgblock_2_0_V_read_int_reg),
    .din1(imgblock_2_1_V_read_int_reg),
    .din2(imgblock_2_2_V_read_int_reg),
    .din3(imgblock_2_3_V_read_int_reg),
    .din4(imgblock_2_4_V_read_int_reg),
    .din5(imgblock_2_5_V_read_int_reg),
    .din6(imgblock_2_6_V_read_int_reg),
    .din7(imgblock_2_7_V_read_int_reg),
    .din8(imgblock_2_8_V_read_int_reg),
    .din9(imgblock_2_9_V_read_int_reg),
    .din10(zext_ln215_4_fu_540_p1),
    .dout(tmp_43_fu_778_p12)
);

ISPPipeline_accelkbM #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 10 ),
    .din3_WIDTH( 10 ),
    .din4_WIDTH( 10 ),
    .din5_WIDTH( 10 ),
    .din6_WIDTH( 10 ),
    .din7_WIDTH( 10 ),
    .din8_WIDTH( 10 ),
    .din9_WIDTH( 10 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 10 ))
ISPPipeline_accelkbM_U294(
    .din0(imgblock_2_0_V_read_int_reg),
    .din1(imgblock_2_1_V_read_int_reg),
    .din2(imgblock_2_2_V_read_int_reg),
    .din3(imgblock_2_3_V_read_int_reg),
    .din4(imgblock_2_4_V_read_int_reg),
    .din5(imgblock_2_5_V_read_int_reg),
    .din6(imgblock_2_6_V_read_int_reg),
    .din7(imgblock_2_7_V_read_int_reg),
    .din8(imgblock_2_8_V_read_int_reg),
    .din9(imgblock_2_9_V_read_int_reg),
    .din10(zext_ln215_6_fu_580_p1),
    .dout(tmp_44_fu_808_p12)
);

ISPPipeline_accelkbM #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 10 ),
    .din1_WIDTH( 10 ),
    .din2_WIDTH( 10 ),
    .din3_WIDTH( 10 ),
    .din4_WIDTH( 10 ),
    .din5_WIDTH( 10 ),
    .din6_WIDTH( 10 ),
    .din7_WIDTH( 10 ),
    .din8_WIDTH( 10 ),
    .din9_WIDTH( 10 ),
    .din10_WIDTH( 4 ),
    .dout_WIDTH( 10 ))
ISPPipeline_accelkbM_U295(
    .din0(imgblock_2_0_V_read_int_reg),
    .din1(imgblock_2_1_V_read_int_reg),
    .din2(imgblock_2_2_V_read_int_reg),
    .din3(imgblock_2_3_V_read_int_reg),
    .din4(imgblock_2_4_V_read_int_reg),
    .din5(imgblock_2_5_V_read_int_reg),
    .din6(imgblock_2_6_V_read_int_reg),
    .din7(imgblock_2_7_V_read_int_reg),
    .din8(imgblock_2_8_V_read_int_reg),
    .din9(imgblock_2_9_V_read_int_reg),
    .din10(zext_ln215_1_fu_464_p1),
    .dout(tmp_45_fu_856_p12)
);

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (1'b1 == ap_ce))) begin
        add_ln1353_4_reg_1041 <= add_ln1353_4_fu_772_p2;
        add_ln96_reg_1051 <= add_ln96_fu_918_p2;
        lshr_ln_reg_1046 <= {{ret_V_fu_528_p2[10:1]}};
        res_reg_1056 <= res_fu_956_p2;
        ret_V_2_reg_1036 <= ret_V_2_fu_706_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_ce)) begin
        imgblock_0_0_V_read_int_reg <= imgblock_0_0_V_read;
        imgblock_0_1_V_read_int_reg <= imgblock_0_1_V_read;
        imgblock_0_2_V_read_int_reg <= imgblock_0_2_V_read;
        imgblock_0_3_V_read_int_reg <= imgblock_0_3_V_read;
        imgblock_0_4_V_read_int_reg <= imgblock_0_4_V_read;
        imgblock_0_5_V_read_int_reg <= imgblock_0_5_V_read;
        imgblock_0_6_V_read_int_reg <= imgblock_0_6_V_read;
        imgblock_0_7_V_read_int_reg <= imgblock_0_7_V_read;
        imgblock_0_8_V_read_int_reg <= imgblock_0_8_V_read;
        imgblock_0_9_V_read_int_reg <= imgblock_0_9_V_read;
        imgblock_1_0_V_read_int_reg <= imgblock_1_0_V_read;
        imgblock_1_1_V_read_int_reg <= imgblock_1_1_V_read;
        imgblock_1_2_V_read_int_reg <= imgblock_1_2_V_read;
        imgblock_1_3_V_read_int_reg <= imgblock_1_3_V_read;
        imgblock_1_4_V_read_int_reg <= imgblock_1_4_V_read;
        imgblock_1_5_V_read_int_reg <= imgblock_1_5_V_read;
        imgblock_1_6_V_read_int_reg <= imgblock_1_6_V_read;
        imgblock_1_7_V_read_int_reg <= imgblock_1_7_V_read;
        imgblock_1_8_V_read_int_reg <= imgblock_1_8_V_read;
        imgblock_1_9_V_read_int_reg <= imgblock_1_9_V_read;
        imgblock_2_0_V_read_int_reg <= imgblock_2_0_V_read;
        imgblock_2_1_V_read_int_reg <= imgblock_2_1_V_read;
        imgblock_2_2_V_read_int_reg <= imgblock_2_2_V_read;
        imgblock_2_3_V_read_int_reg <= imgblock_2_3_V_read;
        imgblock_2_4_V_read_int_reg <= imgblock_2_4_V_read;
        imgblock_2_5_V_read_int_reg <= imgblock_2_5_V_read;
        imgblock_2_6_V_read_int_reg <= imgblock_2_6_V_read;
        imgblock_2_7_V_read_int_reg <= imgblock_2_7_V_read;
        imgblock_2_8_V_read_int_reg <= imgblock_2_8_V_read;
        imgblock_2_9_V_read_int_reg <= imgblock_2_9_V_read;
        imgblock_3_0_V_read_int_reg <= imgblock_3_0_V_read;
        imgblock_3_1_V_read_int_reg <= imgblock_3_1_V_read;
        imgblock_3_2_V_read_int_reg <= imgblock_3_2_V_read;
        imgblock_3_3_V_read_int_reg <= imgblock_3_3_V_read;
        imgblock_3_4_V_read_int_reg <= imgblock_3_4_V_read;
        imgblock_3_5_V_read_int_reg <= imgblock_3_5_V_read;
        imgblock_3_6_V_read_int_reg <= imgblock_3_6_V_read;
        imgblock_3_7_V_read_int_reg <= imgblock_3_7_V_read;
        imgblock_3_8_V_read_int_reg <= imgblock_3_8_V_read;
        imgblock_3_9_V_read_int_reg <= imgblock_3_9_V_read;
        imgblock_4_0_V_read_int_reg <= imgblock_4_0_V_read;
        imgblock_4_1_V_read_int_reg <= imgblock_4_1_V_read;
        imgblock_4_2_V_read_int_reg <= imgblock_4_2_V_read;
        imgblock_4_3_V_read_int_reg <= imgblock_4_3_V_read;
        imgblock_4_4_V_read_int_reg <= imgblock_4_4_V_read;
        imgblock_4_5_V_read_int_reg <= imgblock_4_5_V_read;
        imgblock_4_6_V_read_int_reg <= imgblock_4_6_V_read;
        imgblock_4_7_V_read_int_reg <= imgblock_4_7_V_read;
        imgblock_4_8_V_read_int_reg <= imgblock_4_8_V_read;
        imgblock_4_9_V_read_int_reg <= imgblock_4_9_V_read;
        loop_r_int_reg <= loop_r;
    end
end

assign add_ln1353_4_fu_772_p2 = (zext_ln1353_26_fu_768_p1 + zext_ln215_11_fu_738_p1);

assign add_ln1353_fu_696_p2 = (zext_ln1353_24_fu_692_p1 + zext_ln215_9_fu_650_p1);

assign add_ln215_1_fu_534_p2 = (zext_ln215_fu_454_p1 + 3'd1);

assign add_ln215_2_fu_574_p2 = (zext_ln215_fu_454_p1 + 3'd3);

assign add_ln215_fu_458_p2 = (zext_ln215_fu_454_p1 + 3'd2);

assign add_ln96_fu_918_p2 = (zext_ln95_2_fu_904_p1 + zext_ln94_fu_852_p1);

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_return = ((icmp_ln98_fu_1023_p2[0:0] === 1'b1) ? 14'd0 : select_ln97_fu_1015_p3);

assign icmp_ln98_fu_1023_p2 = (($signed(res_reg_1056) < $signed(15'd32761)) ? 1'b1 : 1'b0);

assign lhs_V_1_fu_570_p1 = tmp_38_fu_544_p12;

assign lhs_V_2_fu_620_p1 = ret_V_1_fu_614_p2;

assign lhs_V_3_fu_804_p1 = tmp_43_fu_778_p12;

assign lhs_V_fu_494_p1 = tmp_s_fu_468_p12;

assign or_ln_fu_654_p3 = {{1'd1}, {loop_r_int_reg}};

assign res_fu_956_p2 = ($signed(sext_ln96_fu_949_p1) + $signed(zext_ln96_1_fu_953_p1));

assign ret_V_1_fu_614_p2 = (lhs_V_1_fu_570_p1 + rhs_V_1_fu_610_p1);

assign ret_V_2_fu_706_p2 = (lhs_V_2_fu_620_p1 + zext_ln1353_25_fu_702_p1);

assign ret_V_3_fu_930_p2 = (zext_ln1353_fu_924_p1 + zext_ln1353_27_fu_927_p1);

assign ret_V_4_fu_838_p2 = (lhs_V_3_fu_804_p1 + rhs_V_2_fu_834_p1);

assign ret_V_fu_528_p2 = (lhs_V_fu_494_p1 + rhs_V_fu_524_p1);

assign rhs_V_1_fu_610_p1 = tmp_39_fu_584_p12;

assign rhs_V_2_fu_834_p1 = tmp_44_fu_808_p12;

assign rhs_V_fu_524_p1 = tmp_37_fu_498_p12;

assign select_ln97_fu_1015_p3 = ((tmp_135_fu_962_p3[0:0] === 1'b1) ? sub_ln97_1_fu_992_p2 : zext_ln97_1_fu_1011_p1);

assign sext_ln96_fu_949_p1 = $signed(sub_ln96_fu_943_p2);

assign sext_ln97_1_fu_1007_p1 = $signed(trunc_ln97_4_fu_998_p4);

assign sext_ln97_fu_984_p1 = $signed(trunc_ln97_3_fu_974_p4);

assign shl_ln_fu_886_p3 = {{tmp_45_fu_856_p12}, {2'd0}};

assign sub_ln96_fu_943_p2 = (zext_ln96_fu_940_p1 - zext_ln91_fu_936_p1);

assign sub_ln97_1_fu_992_p2 = (14'd0 - zext_ln97_fu_988_p1);

assign sub_ln97_fu_969_p2 = (15'd0 - res_reg_1056);

assign t3_fu_844_p3 = {{ret_V_4_fu_838_p2}, {2'd0}};

assign t4_fu_898_p2 = (zext_ln95_fu_882_p1 + zext_ln95_1_fu_894_p1);

assign tmp_135_fu_962_p3 = res_reg_1056[32'd14];

assign tmp_40_fu_624_p11 = loop_r_int_reg;

assign tmp_41_fu_666_p11 = or_ln_fu_654_p3;

assign trunc_ln97_3_fu_974_p4 = {{sub_ln97_fu_969_p2[14:3]}};

assign trunc_ln97_4_fu_998_p4 = {{res_reg_1056[14:3]}};

assign zext_ln1353_24_fu_692_p1 = tmp_41_fu_666_p12;

assign zext_ln1353_25_fu_702_p1 = add_ln1353_fu_696_p2;

assign zext_ln1353_26_fu_768_p1 = tmp_42_fu_742_p12;

assign zext_ln1353_27_fu_927_p1 = add_ln1353_4_reg_1041;

assign zext_ln1353_fu_924_p1 = ret_V_2_reg_1036;

assign zext_ln215_11_fu_738_p1 = tmp_fu_712_p12;

assign zext_ln215_1_fu_464_p1 = add_ln215_fu_458_p2;

assign zext_ln215_4_fu_540_p1 = add_ln215_1_fu_534_p2;

assign zext_ln215_6_fu_580_p1 = add_ln215_2_fu_574_p2;

assign zext_ln215_9_fu_650_p1 = tmp_40_fu_624_p12;

assign zext_ln215_fu_454_p1 = loop_r_int_reg;

assign zext_ln91_fu_936_p1 = ret_V_3_fu_930_p2;

assign zext_ln94_fu_852_p1 = t3_fu_844_p3;

assign zext_ln95_1_fu_894_p1 = shl_ln_fu_886_p3;

assign zext_ln95_2_fu_904_p1 = t4_fu_898_p2;

assign zext_ln95_fu_882_p1 = tmp_45_fu_856_p12;

assign zext_ln96_1_fu_953_p1 = add_ln96_reg_1051;

assign zext_ln96_fu_940_p1 = lshr_ln_reg_1046;

assign zext_ln97_1_fu_1011_p1 = $unsigned(sext_ln97_1_fu_1007_p1);

assign zext_ln97_fu_988_p1 = $unsigned(sext_ln97_fu_984_p1);

endmodule //rgr_bgb_kernel
