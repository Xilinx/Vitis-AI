// ==============================================================
// RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
// Version: 2020.2
// Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

module AWBNormalizationkern (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        src_data_V_V_dout,
        src_data_V_V_empty_n,
        src_data_V_V_read,
        dst_rows_read,
        dst_cols_read,
        dst_data_V_V_din,
        dst_data_V_V_full_n,
        dst_data_V_V_write,
        hist_0_address0,
        hist_0_ce0,
        hist_0_q0,
        hist_1_address0,
        hist_1_ce0,
        hist_1_q0,
        hist_2_address0,
        hist_2_ce0,
        hist_2_q0
);

parameter    ap_ST_fsm_state1 = 17'd1;
parameter    ap_ST_fsm_state2 = 17'd2;
parameter    ap_ST_fsm_state3 = 17'd4;
parameter    ap_ST_fsm_state4 = 17'd8;
parameter    ap_ST_fsm_state5 = 17'd16;
parameter    ap_ST_fsm_state6 = 17'd32;
parameter    ap_ST_fsm_state7 = 17'd64;
parameter    ap_ST_fsm_state8 = 17'd128;
parameter    ap_ST_fsm_state9 = 17'd256;
parameter    ap_ST_fsm_state10 = 17'd512;
parameter    ap_ST_fsm_state11 = 17'd1024;
parameter    ap_ST_fsm_state12 = 17'd2048;
parameter    ap_ST_fsm_state13 = 17'd4096;
parameter    ap_ST_fsm_state14 = 17'd8192;
parameter    ap_ST_fsm_state15 = 17'd16384;
parameter    ap_ST_fsm_pp2_stage0 = 17'd32768;
parameter    ap_ST_fsm_state54 = 17'd65536;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
input  [119:0] src_data_V_V_dout;
input   src_data_V_V_empty_n;
output   src_data_V_V_read;
input  [15:0] dst_rows_read;
input  [15:0] dst_cols_read;
output  [119:0] dst_data_V_V_din;
input   dst_data_V_V_full_n;
output   dst_data_V_V_write;
output  [9:0] hist_0_address0;
output   hist_0_ce0;
input  [31:0] hist_0_q0;
output  [9:0] hist_1_address0;
output   hist_1_ce0;
input  [31:0] hist_1_q0;
output  [9:0] hist_2_address0;
output   hist_2_ce0;
input  [31:0] hist_2_q0;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg src_data_V_V_read;
reg dst_data_V_V_write;
reg[9:0] hist_0_address0;
reg hist_0_ce0;
reg[9:0] hist_1_address0;
reg hist_1_ce0;
reg[9:0] hist_2_address0;
reg hist_2_ce0;

(* fsm_encoding = "none" *) reg   [16:0] ap_CS_fsm;
wire    ap_CS_fsm_state1;
reg    src_data_V_V_blk_n;
wire    ap_CS_fsm_pp2_stage0;
reg    ap_enable_reg_pp2_iter1;
wire    ap_block_pp2_stage0;
reg   [0:0] icmp_ln887_12_reg_3298;
reg    dst_data_V_V_blk_n;
reg    ap_enable_reg_pp2_iter37;
reg   [0:0] icmp_ln887_12_reg_3298_pp2_iter36_reg;
reg   [12:0] t_V_2_reg_413;
reg   [31:0] reg_433;
wire    ap_CS_fsm_state8;
wire    ap_CS_fsm_state12;
reg   [31:0] reg_437;
reg   [31:0] reg_441;
reg   [13:0] width_reg_3128;
wire   [31:0] total_fu_3033_p2;
reg   [31:0] total_reg_3133;
wire    ap_CS_fsm_state2;
wire   [37:0] grp_fu_541_p2;
reg   [37:0] mul_ln1148_reg_3150;
wire    ap_CS_fsm_state3;
wire   [44:0] grp_fu_547_p2;
reg   [44:0] mul_ln1148_1_reg_3155;
wire    ap_CS_fsm_state4;
wire   [75:0] grp_fu_556_p2;
reg   [75:0] mul_ln1148_2_reg_3170;
wire    ap_CS_fsm_state5;
wire   [89:0] grp_fu_565_p2;
reg   [89:0] mul_ln1148_3_reg_3175;
wire   [0:0] icmp_ln293_fu_571_p2;
wire    ap_CS_fsm_state6;
wire   [1:0] j_fu_577_p2;
reg   [1:0] j_reg_3184;
reg   [31:0] trunc_ln555_4_reg_3189;
wire   [32:0] zext_ln887_2_fu_601_p1;
reg   [32:0] zext_ln887_2_reg_3194;
wire  signed [29:0] sext_ln1148_fu_641_p1;
reg  signed [29:0] sext_ln1148_reg_3199;
wire  signed [29:0] sext_ln1148_1_fu_645_p1;
reg  signed [29:0] sext_ln1148_1_reg_3207;
wire  signed [29:0] sext_ln1148_2_fu_649_p1;
reg  signed [29:0] sext_ln1148_2_reg_3215;
wire    ap_CS_fsm_state7;
wire   [10:0] add_ln700_fu_699_p2;
wire    ap_CS_fsm_state9;
wire   [31:0] add_ln700_28_fu_705_p2;
wire   [0:0] and_ln317_fu_693_p2;
wire  signed [32:0] sext_ln895_fu_759_p1;
reg  signed [32:0] sext_ln895_reg_3251;
wire    ap_CS_fsm_state10;
wire    ap_CS_fsm_state11;
wire   [0:0] icmp_ln883_fu_769_p2;
reg   [0:0] icmp_ln883_reg_3271;
wire   [15:0] add_ln701_fu_799_p2;
wire    ap_CS_fsm_state13;
wire   [0:0] and_ln329_fu_794_p2;
wire   [31:0] sub_ln701_fu_805_p2;
wire   [0:0] icmp_ln887_11_fu_872_p2;
wire    ap_CS_fsm_state15;
wire   [12:0] row_V_fu_877_p2;
reg   [12:0] row_V_reg_3293;
wire   [0:0] icmp_ln887_12_fu_887_p2;
wire    ap_block_state16_pp2_stage0_iter0;
reg    ap_block_state17_pp2_stage0_iter1;
wire    ap_block_state18_pp2_stage0_iter2;
wire    ap_block_state19_pp2_stage0_iter3;
wire    ap_block_state20_pp2_stage0_iter4;
wire    ap_block_state21_pp2_stage0_iter5;
wire    ap_block_state22_pp2_stage0_iter6;
wire    ap_block_state23_pp2_stage0_iter7;
wire    ap_block_state24_pp2_stage0_iter8;
wire    ap_block_state25_pp2_stage0_iter9;
wire    ap_block_state26_pp2_stage0_iter10;
wire    ap_block_state27_pp2_stage0_iter11;
wire    ap_block_state28_pp2_stage0_iter12;
wire    ap_block_state29_pp2_stage0_iter13;
wire    ap_block_state30_pp2_stage0_iter14;
wire    ap_block_state31_pp2_stage0_iter15;
wire    ap_block_state32_pp2_stage0_iter16;
wire    ap_block_state33_pp2_stage0_iter17;
wire    ap_block_state34_pp2_stage0_iter18;
wire    ap_block_state35_pp2_stage0_iter19;
wire    ap_block_state36_pp2_stage0_iter20;
wire    ap_block_state37_pp2_stage0_iter21;
wire    ap_block_state38_pp2_stage0_iter22;
wire    ap_block_state39_pp2_stage0_iter23;
wire    ap_block_state40_pp2_stage0_iter24;
wire    ap_block_state41_pp2_stage0_iter25;
wire    ap_block_state42_pp2_stage0_iter26;
wire    ap_block_state43_pp2_stage0_iter27;
wire    ap_block_state44_pp2_stage0_iter28;
wire    ap_block_state45_pp2_stage0_iter29;
wire    ap_block_state46_pp2_stage0_iter30;
wire    ap_block_state47_pp2_stage0_iter31;
wire    ap_block_state48_pp2_stage0_iter32;
wire    ap_block_state49_pp2_stage0_iter33;
wire    ap_block_state50_pp2_stage0_iter34;
wire    ap_block_state51_pp2_stage0_iter35;
wire    ap_block_state52_pp2_stage0_iter36;
reg    ap_block_state53_pp2_stage0_iter37;
reg    ap_block_pp2_stage0_11001;
reg   [0:0] icmp_ln887_12_reg_3298_pp2_iter1_reg;
reg   [0:0] icmp_ln887_12_reg_3298_pp2_iter2_reg;
reg   [0:0] icmp_ln887_12_reg_3298_pp2_iter3_reg;
reg   [0:0] icmp_ln887_12_reg_3298_pp2_iter4_reg;
reg   [0:0] icmp_ln887_12_reg_3298_pp2_iter5_reg;
reg   [0:0] icmp_ln887_12_reg_3298_pp2_iter6_reg;
reg   [0:0] icmp_ln887_12_reg_3298_pp2_iter7_reg;
reg   [0:0] icmp_ln887_12_reg_3298_pp2_iter8_reg;
reg   [0:0] icmp_ln887_12_reg_3298_pp2_iter9_reg;
reg   [0:0] icmp_ln887_12_reg_3298_pp2_iter10_reg;
reg   [0:0] icmp_ln887_12_reg_3298_pp2_iter11_reg;
reg   [0:0] icmp_ln887_12_reg_3298_pp2_iter12_reg;
reg   [0:0] icmp_ln887_12_reg_3298_pp2_iter13_reg;
reg   [0:0] icmp_ln887_12_reg_3298_pp2_iter14_reg;
reg   [0:0] icmp_ln887_12_reg_3298_pp2_iter15_reg;
reg   [0:0] icmp_ln887_12_reg_3298_pp2_iter16_reg;
reg   [0:0] icmp_ln887_12_reg_3298_pp2_iter17_reg;
reg   [0:0] icmp_ln887_12_reg_3298_pp2_iter18_reg;
reg   [0:0] icmp_ln887_12_reg_3298_pp2_iter19_reg;
reg   [0:0] icmp_ln887_12_reg_3298_pp2_iter20_reg;
reg   [0:0] icmp_ln887_12_reg_3298_pp2_iter21_reg;
reg   [0:0] icmp_ln887_12_reg_3298_pp2_iter22_reg;
reg   [0:0] icmp_ln887_12_reg_3298_pp2_iter23_reg;
reg   [0:0] icmp_ln887_12_reg_3298_pp2_iter24_reg;
reg   [0:0] icmp_ln887_12_reg_3298_pp2_iter25_reg;
reg   [0:0] icmp_ln887_12_reg_3298_pp2_iter26_reg;
reg   [0:0] icmp_ln887_12_reg_3298_pp2_iter27_reg;
reg   [0:0] icmp_ln887_12_reg_3298_pp2_iter28_reg;
reg   [0:0] icmp_ln887_12_reg_3298_pp2_iter29_reg;
reg   [0:0] icmp_ln887_12_reg_3298_pp2_iter30_reg;
reg   [0:0] icmp_ln887_12_reg_3298_pp2_iter31_reg;
reg   [0:0] icmp_ln887_12_reg_3298_pp2_iter32_reg;
reg   [0:0] icmp_ln887_12_reg_3298_pp2_iter33_reg;
reg   [0:0] icmp_ln887_12_reg_3298_pp2_iter34_reg;
reg   [0:0] icmp_ln887_12_reg_3298_pp2_iter35_reg;
wire   [12:0] col_V_fu_892_p2;
reg    ap_enable_reg_pp2_iter0;
wire   [9:0] trunc_ln703_fu_898_p1;
reg   [9:0] trunc_ln703_reg_3307;
reg   [9:0] tmp_66_reg_3312;
reg   [9:0] tmp_69_reg_3317;
reg   [9:0] tmp_72_reg_3322;
reg   [9:0] tmp_75_reg_3327;
reg   [9:0] tmp_78_reg_3332;
reg   [9:0] tmp_81_reg_3337;
reg   [9:0] tmp_84_reg_3342;
reg   [9:0] tmp_87_reg_3347;
reg   [9:0] tmp_90_reg_3352;
reg   [9:0] tmp_93_reg_3357;
reg   [9:0] tmp_96_reg_3362;
wire   [40:0] sub_ln1118_fu_1398_p2;
reg   [40:0] sub_ln1118_reg_3427;
reg   [17:0] tmp_27_reg_3432;
wire   [0:0] icmp_ln851_fu_1424_p2;
reg   [0:0] icmp_ln851_reg_3437;
wire   [40:0] sub_ln1118_1_fu_1456_p2;
reg   [40:0] sub_ln1118_1_reg_3442;
reg   [17:0] tmp_28_reg_3447;
wire   [0:0] icmp_ln851_12_fu_1482_p2;
reg   [0:0] icmp_ln851_12_reg_3452;
wire   [40:0] sub_ln1118_2_fu_1514_p2;
reg   [40:0] sub_ln1118_2_reg_3457;
reg   [17:0] tmp_29_reg_3462;
wire   [0:0] icmp_ln851_13_fu_1540_p2;
reg   [0:0] icmp_ln851_13_reg_3467;
wire   [40:0] sub_ln1118_3_fu_1572_p2;
reg   [40:0] sub_ln1118_3_reg_3472;
reg   [17:0] tmp_30_reg_3477;
wire   [0:0] icmp_ln851_14_fu_1598_p2;
reg   [0:0] icmp_ln851_14_reg_3482;
wire   [40:0] sub_ln1118_4_fu_1630_p2;
reg   [40:0] sub_ln1118_4_reg_3487;
reg   [17:0] tmp_31_reg_3492;
wire   [0:0] icmp_ln851_15_fu_1656_p2;
reg   [0:0] icmp_ln851_15_reg_3497;
wire   [40:0] sub_ln1118_5_fu_1688_p2;
reg   [40:0] sub_ln1118_5_reg_3502;
reg   [17:0] tmp_32_reg_3507;
wire   [0:0] icmp_ln851_16_fu_1714_p2;
reg   [0:0] icmp_ln851_16_reg_3512;
wire   [40:0] sub_ln1118_6_fu_1746_p2;
reg   [40:0] sub_ln1118_6_reg_3517;
reg   [17:0] tmp_33_reg_3522;
wire   [0:0] icmp_ln851_17_fu_1772_p2;
reg   [0:0] icmp_ln851_17_reg_3527;
wire   [40:0] sub_ln1118_7_fu_1804_p2;
reg   [40:0] sub_ln1118_7_reg_3532;
reg   [17:0] tmp_34_reg_3537;
wire   [0:0] icmp_ln851_18_fu_1830_p2;
reg   [0:0] icmp_ln851_18_reg_3542;
wire   [40:0] sub_ln1118_8_fu_1862_p2;
reg   [40:0] sub_ln1118_8_reg_3547;
reg   [17:0] tmp_35_reg_3552;
wire   [0:0] icmp_ln851_19_fu_1888_p2;
reg   [0:0] icmp_ln851_19_reg_3557;
wire   [40:0] sub_ln1118_9_fu_1920_p2;
reg   [40:0] sub_ln1118_9_reg_3562;
reg   [17:0] tmp_36_reg_3567;
wire   [0:0] icmp_ln851_20_fu_1946_p2;
reg   [0:0] icmp_ln851_20_reg_3572;
wire   [40:0] sub_ln1118_10_fu_1978_p2;
reg   [40:0] sub_ln1118_10_reg_3577;
reg   [17:0] tmp_37_reg_3582;
wire   [0:0] icmp_ln851_21_fu_2004_p2;
reg   [0:0] icmp_ln851_21_reg_3587;
wire   [40:0] sub_ln1118_11_fu_2036_p2;
reg   [40:0] sub_ln1118_11_reg_3592;
reg   [17:0] tmp_38_reg_3597;
wire   [0:0] icmp_ln851_22_fu_2062_p2;
reg   [0:0] icmp_ln851_22_reg_3602;
wire   [9:0] select_ln45_fu_2139_p3;
reg   [9:0] select_ln45_reg_3607;
wire   [9:0] select_ln45_1_fu_2218_p3;
reg   [9:0] select_ln45_1_reg_3612;
wire   [9:0] select_ln45_2_fu_2297_p3;
reg   [9:0] select_ln45_2_reg_3617;
wire   [9:0] select_ln45_3_fu_2376_p3;
reg   [9:0] select_ln45_3_reg_3622;
wire   [9:0] select_ln45_4_fu_2455_p3;
reg   [9:0] select_ln45_4_reg_3627;
wire   [9:0] select_ln45_5_fu_2534_p3;
reg   [9:0] select_ln45_5_reg_3632;
wire   [9:0] select_ln45_6_fu_2613_p3;
reg   [9:0] select_ln45_6_reg_3637;
wire   [9:0] select_ln45_7_fu_2692_p3;
reg   [9:0] select_ln45_7_reg_3642;
wire   [9:0] select_ln45_8_fu_2771_p3;
reg   [9:0] select_ln45_8_reg_3647;
wire   [9:0] select_ln45_9_fu_2850_p3;
reg   [9:0] select_ln45_9_reg_3652;
wire   [9:0] select_ln45_10_fu_2929_p3;
reg   [9:0] select_ln45_10_reg_3657;
wire   [9:0] select_ln45_11_fu_3008_p3;
reg   [9:0] select_ln45_11_reg_3662;
reg    ap_block_pp2_stage0_subdone;
reg    ap_condition_pp2_exit_iter0_state16;
reg    ap_enable_reg_pp2_iter2;
reg    ap_enable_reg_pp2_iter3;
reg    ap_enable_reg_pp2_iter4;
reg    ap_enable_reg_pp2_iter5;
reg    ap_enable_reg_pp2_iter6;
reg    ap_enable_reg_pp2_iter7;
reg    ap_enable_reg_pp2_iter8;
reg    ap_enable_reg_pp2_iter9;
reg    ap_enable_reg_pp2_iter10;
reg    ap_enable_reg_pp2_iter11;
reg    ap_enable_reg_pp2_iter12;
reg    ap_enable_reg_pp2_iter13;
reg    ap_enable_reg_pp2_iter14;
reg    ap_enable_reg_pp2_iter15;
reg    ap_enable_reg_pp2_iter16;
reg    ap_enable_reg_pp2_iter17;
reg    ap_enable_reg_pp2_iter18;
reg    ap_enable_reg_pp2_iter19;
reg    ap_enable_reg_pp2_iter20;
reg    ap_enable_reg_pp2_iter21;
reg    ap_enable_reg_pp2_iter22;
reg    ap_enable_reg_pp2_iter23;
reg    ap_enable_reg_pp2_iter24;
reg    ap_enable_reg_pp2_iter25;
reg    ap_enable_reg_pp2_iter26;
reg    ap_enable_reg_pp2_iter27;
reg    ap_enable_reg_pp2_iter28;
reg    ap_enable_reg_pp2_iter29;
reg    ap_enable_reg_pp2_iter30;
reg    ap_enable_reg_pp2_iter31;
reg    ap_enable_reg_pp2_iter32;
reg    ap_enable_reg_pp2_iter33;
reg    ap_enable_reg_pp2_iter34;
reg    ap_enable_reg_pp2_iter35;
reg    ap_enable_reg_pp2_iter36;
reg   [1:0] j_0_reg_346;
wire    ap_CS_fsm_state14;
reg   [10:0] t_V_16_0_reg_358;
reg   [31:0] p_01629_1_0_reg_370;
reg   [15:0] t_V_17_0_reg_381;
reg   [31:0] p_01348_1_0_reg_393;
reg   [12:0] t_V_reg_402;
wire    ap_CS_fsm_state54;
wire   [63:0] zext_ln544_fu_653_p1;
wire   [63:0] zext_ln544_2_fu_762_p1;
reg   [23:0] p_Val2_s_fu_210;
wire   [23:0] maxValue_0_V_2_fu_832_p2;
reg   [23:0] p_Val2_6_fu_214;
wire   [23:0] minValue_0_V_2_fu_723_p2;
reg   [23:0] p_Val2_7_fu_218;
reg   [23:0] p_Val2_8_fu_222;
reg   [23:0] p_Val2_9_fu_226;
reg   [23:0] p_Val2_10_fu_230;
reg   [23:0] minValue_0_V_fu_234;
reg   [23:0] minValue_1_V_fu_238;
reg   [23:0] minValue_2_V_fu_242;
reg   [23:0] maxValue_0_V_fu_246;
reg   [23:0] maxValue_1_V_fu_250;
reg   [23:0] maxValue_2_V_fu_254;
reg    ap_block_pp2_stage0_01001;
wire   [31:0] grp_fu_541_p0;
wire   [6:0] grp_fu_541_p1;
wire   [31:0] grp_fu_547_p0;
wire   [13:0] grp_fu_547_p1;
wire   [37:0] grp_fu_556_p0;
wire   [39:0] grp_fu_556_p1;
wire   [44:0] grp_fu_565_p0;
wire   [46:0] grp_fu_565_p1;
wire   [24:0] tmp_167_fu_583_p4;
wire   [23:0] maxmin_diff_0_V_fu_623_p2;
wire   [23:0] maxmin_diff_1_V_fu_629_p2;
wire   [23:0] maxmin_diff_2_V_fu_635_p2;
wire   [31:0] grp_fu_445_p5;
wire   [32:0] zext_ln215_4_fu_664_p1;
wire   [32:0] zext_ln215_fu_660_p1;
wire   [32:0] add_ln1353_fu_668_p2;
wire   [0:0] tmp_168_fu_679_p3;
wire   [0:0] icmp_ln887_fu_674_p2;
wire   [0:0] xor_ln887_fu_687_p2;
wire   [23:0] tmp_105_fu_711_p5;
wire   [32:0] zext_ln215_5_fu_775_p1;
wire   [32:0] zext_ln215_6_fu_779_p1;
wire   [32:0] sub_ln1354_fu_783_p2;
wire   [0:0] icmp_ln895_fu_789_p2;
wire   [23:0] tmp_107_fu_820_p5;
wire   [15:0] zext_ln887_fu_868_p1;
wire   [13:0] zext_ln887_1_fu_883_p1;
wire   [15:0] shl_ln_fu_1012_p3;
wire   [23:0] zext_ln703_fu_1019_p1;
wire   [23:0] sub_ln703_fu_1023_p2;
wire   [29:0] grp_fu_1037_p0;
wire  signed [23:0] grp_fu_1037_p1;
wire   [15:0] shl_ln703_1_fu_1042_p3;
wire   [23:0] zext_ln703_1_fu_1049_p1;
wire   [23:0] sub_ln703_1_fu_1053_p2;
wire   [29:0] grp_fu_1067_p0;
wire  signed [23:0] grp_fu_1067_p1;
wire   [15:0] shl_ln703_2_fu_1072_p3;
wire   [23:0] zext_ln703_2_fu_1079_p1;
wire   [23:0] sub_ln703_2_fu_1083_p2;
wire   [29:0] grp_fu_1097_p0;
wire  signed [23:0] grp_fu_1097_p1;
wire   [15:0] shl_ln703_3_fu_1102_p3;
wire   [23:0] zext_ln703_3_fu_1109_p1;
wire   [23:0] sub_ln703_3_fu_1113_p2;
wire   [29:0] grp_fu_1127_p0;
wire  signed [23:0] grp_fu_1127_p1;
wire   [15:0] shl_ln703_4_fu_1132_p3;
wire   [23:0] zext_ln703_4_fu_1139_p1;
wire   [23:0] sub_ln703_4_fu_1143_p2;
wire   [29:0] grp_fu_1157_p0;
wire  signed [23:0] grp_fu_1157_p1;
wire   [15:0] shl_ln703_5_fu_1162_p3;
wire   [23:0] zext_ln703_5_fu_1169_p1;
wire   [23:0] sub_ln703_5_fu_1173_p2;
wire   [29:0] grp_fu_1187_p0;
wire  signed [23:0] grp_fu_1187_p1;
wire   [15:0] shl_ln703_6_fu_1192_p3;
wire   [23:0] zext_ln703_6_fu_1199_p1;
wire   [23:0] sub_ln703_6_fu_1203_p2;
wire   [29:0] grp_fu_1217_p0;
wire  signed [23:0] grp_fu_1217_p1;
wire   [15:0] shl_ln703_7_fu_1222_p3;
wire   [23:0] zext_ln703_7_fu_1229_p1;
wire   [23:0] sub_ln703_7_fu_1233_p2;
wire   [29:0] grp_fu_1247_p0;
wire  signed [23:0] grp_fu_1247_p1;
wire   [15:0] shl_ln703_8_fu_1252_p3;
wire   [23:0] zext_ln703_8_fu_1259_p1;
wire   [23:0] sub_ln703_8_fu_1263_p2;
wire   [29:0] grp_fu_1277_p0;
wire  signed [23:0] grp_fu_1277_p1;
wire   [15:0] shl_ln703_9_fu_1282_p3;
wire   [23:0] zext_ln703_9_fu_1289_p1;
wire   [23:0] sub_ln703_9_fu_1293_p2;
wire   [29:0] grp_fu_1307_p0;
wire  signed [23:0] grp_fu_1307_p1;
wire   [15:0] shl_ln703_s_fu_1312_p3;
wire   [23:0] zext_ln703_10_fu_1319_p1;
wire   [23:0] sub_ln703_10_fu_1323_p2;
wire   [29:0] grp_fu_1337_p0;
wire  signed [23:0] grp_fu_1337_p1;
wire   [15:0] shl_ln703_10_fu_1342_p3;
wire   [23:0] zext_ln703_11_fu_1349_p1;
wire   [23:0] sub_ln703_11_fu_1353_p2;
wire   [29:0] grp_fu_1367_p0;
wire  signed [23:0] grp_fu_1367_p1;
wire   [29:0] grp_fu_1037_p2;
wire   [23:0] trunc_ln1118_fu_1372_p1;
wire   [39:0] shl_ln3_fu_1376_p3;
wire   [29:0] shl_ln1118_fu_1388_p2;
wire  signed [40:0] sext_ln1118_fu_1384_p1;
wire  signed [40:0] sext_ln1118_1_fu_1394_p1;
wire   [5:0] p_Result_2_fu_1414_p4;
wire   [29:0] grp_fu_1067_p2;
wire   [23:0] trunc_ln1118_1_fu_1430_p1;
wire   [39:0] shl_ln1118_2_fu_1434_p3;
wire   [29:0] shl_ln1118_1_fu_1446_p2;
wire  signed [40:0] sext_ln1118_2_fu_1442_p1;
wire  signed [40:0] sext_ln1118_3_fu_1452_p1;
wire   [5:0] p_Result_105_1_fu_1472_p4;
wire   [29:0] grp_fu_1097_p2;
wire   [23:0] trunc_ln1118_2_fu_1488_p1;
wire   [39:0] shl_ln1118_4_fu_1492_p3;
wire   [29:0] shl_ln1118_3_fu_1504_p2;
wire  signed [40:0] sext_ln1118_4_fu_1500_p1;
wire  signed [40:0] sext_ln1118_5_fu_1510_p1;
wire   [5:0] p_Result_105_2_fu_1530_p4;
wire   [29:0] grp_fu_1127_p2;
wire   [23:0] trunc_ln1118_3_fu_1546_p1;
wire   [39:0] shl_ln1118_6_fu_1550_p3;
wire   [29:0] shl_ln1118_5_fu_1562_p2;
wire  signed [40:0] sext_ln1118_6_fu_1558_p1;
wire  signed [40:0] sext_ln1118_7_fu_1568_p1;
wire   [5:0] p_Result_105_3_fu_1588_p4;
wire   [29:0] grp_fu_1157_p2;
wire   [23:0] trunc_ln1118_4_fu_1604_p1;
wire   [39:0] shl_ln1118_8_fu_1608_p3;
wire   [29:0] shl_ln1118_7_fu_1620_p2;
wire  signed [40:0] sext_ln1118_8_fu_1616_p1;
wire  signed [40:0] sext_ln1118_9_fu_1626_p1;
wire   [5:0] p_Result_105_4_fu_1646_p4;
wire   [29:0] grp_fu_1187_p2;
wire   [23:0] trunc_ln1118_5_fu_1662_p1;
wire   [39:0] shl_ln1118_s_fu_1666_p3;
wire   [29:0] shl_ln1118_9_fu_1678_p2;
wire  signed [40:0] sext_ln1118_10_fu_1674_p1;
wire  signed [40:0] sext_ln1118_11_fu_1684_p1;
wire   [5:0] p_Result_105_5_fu_1704_p4;
wire   [29:0] grp_fu_1217_p2;
wire   [23:0] trunc_ln1118_6_fu_1720_p1;
wire   [39:0] shl_ln1118_10_fu_1724_p3;
wire   [29:0] shl_ln1118_11_fu_1736_p2;
wire  signed [40:0] sext_ln1118_12_fu_1732_p1;
wire  signed [40:0] sext_ln1118_13_fu_1742_p1;
wire   [5:0] p_Result_105_6_fu_1762_p4;
wire   [29:0] grp_fu_1247_p2;
wire   [23:0] trunc_ln1118_7_fu_1778_p1;
wire   [39:0] shl_ln1118_12_fu_1782_p3;
wire   [29:0] shl_ln1118_13_fu_1794_p2;
wire  signed [40:0] sext_ln1118_14_fu_1790_p1;
wire  signed [40:0] sext_ln1118_15_fu_1800_p1;
wire   [5:0] p_Result_105_7_fu_1820_p4;
wire   [29:0] grp_fu_1277_p2;
wire   [23:0] trunc_ln1118_8_fu_1836_p1;
wire   [39:0] shl_ln1118_14_fu_1840_p3;
wire   [29:0] shl_ln1118_15_fu_1852_p2;
wire  signed [40:0] sext_ln1118_16_fu_1848_p1;
wire  signed [40:0] sext_ln1118_17_fu_1858_p1;
wire   [5:0] p_Result_105_8_fu_1878_p4;
wire   [29:0] grp_fu_1307_p2;
wire   [23:0] trunc_ln1118_9_fu_1894_p1;
wire   [39:0] shl_ln1118_16_fu_1898_p3;
wire   [29:0] shl_ln1118_17_fu_1910_p2;
wire  signed [40:0] sext_ln1118_18_fu_1906_p1;
wire  signed [40:0] sext_ln1118_19_fu_1916_p1;
wire   [5:0] p_Result_105_9_fu_1936_p4;
wire   [29:0] grp_fu_1337_p2;
wire   [23:0] trunc_ln1118_10_fu_1952_p1;
wire   [39:0] shl_ln1118_18_fu_1956_p3;
wire   [29:0] shl_ln1118_19_fu_1968_p2;
wire  signed [40:0] sext_ln1118_20_fu_1964_p1;
wire  signed [40:0] sext_ln1118_21_fu_1974_p1;
wire   [5:0] p_Result_105_s_fu_1994_p4;
wire   [29:0] grp_fu_1367_p2;
wire   [23:0] trunc_ln1118_11_fu_2010_p1;
wire   [39:0] shl_ln1118_20_fu_2014_p3;
wire   [29:0] shl_ln1118_21_fu_2026_p2;
wire  signed [40:0] sext_ln1118_22_fu_2022_p1;
wire  signed [40:0] sext_ln1118_23_fu_2032_p1;
wire   [5:0] p_Result_105_10_fu_2052_p4;
wire  signed [18:0] sext_ln835_fu_2068_p1;
wire   [18:0] add_ln700_29_fu_2078_p2;
wire   [0:0] tmp_169_fu_2071_p3;
wire   [18:0] select_ln851_fu_2084_p3;
wire   [18:0] select_ln850_fu_2091_p3;
wire   [0:0] tmp_170_fu_2103_p3;
wire   [17:0] trunc_ln647_fu_2099_p1;
wire   [17:0] select_ln399_fu_2111_p3;
wire   [7:0] tmp_171_fu_2119_p4;
wire   [0:0] icmp_ln45_fu_2129_p2;
wire   [9:0] trunc_ln45_fu_2135_p1;
wire  signed [18:0] sext_ln835_1_fu_2147_p1;
wire   [18:0] add_ln700_30_fu_2157_p2;
wire   [0:0] tmp_172_fu_2150_p3;
wire   [18:0] select_ln851_12_fu_2163_p3;
wire   [18:0] select_ln850_12_fu_2170_p3;
wire   [0:0] tmp_173_fu_2182_p3;
wire   [17:0] trunc_ln647_13_fu_2178_p1;
wire   [17:0] select_ln399_1_fu_2190_p3;
wire   [7:0] tmp_174_fu_2198_p4;
wire   [0:0] icmp_ln45_1_fu_2208_p2;
wire   [9:0] trunc_ln45_1_fu_2214_p1;
wire  signed [18:0] sext_ln835_2_fu_2226_p1;
wire   [18:0] add_ln700_31_fu_2236_p2;
wire   [0:0] tmp_175_fu_2229_p3;
wire   [18:0] select_ln851_13_fu_2242_p3;
wire   [18:0] select_ln850_13_fu_2249_p3;
wire   [0:0] tmp_176_fu_2261_p3;
wire   [17:0] trunc_ln647_14_fu_2257_p1;
wire   [17:0] select_ln399_2_fu_2269_p3;
wire   [7:0] tmp_177_fu_2277_p4;
wire   [0:0] icmp_ln45_2_fu_2287_p2;
wire   [9:0] trunc_ln45_2_fu_2293_p1;
wire  signed [18:0] sext_ln835_3_fu_2305_p1;
wire   [18:0] add_ln700_32_fu_2315_p2;
wire   [0:0] tmp_178_fu_2308_p3;
wire   [18:0] select_ln851_14_fu_2321_p3;
wire   [18:0] select_ln850_14_fu_2328_p3;
wire   [0:0] tmp_179_fu_2340_p3;
wire   [17:0] trunc_ln647_15_fu_2336_p1;
wire   [17:0] select_ln399_3_fu_2348_p3;
wire   [7:0] tmp_180_fu_2356_p4;
wire   [0:0] icmp_ln45_3_fu_2366_p2;
wire   [9:0] trunc_ln45_3_fu_2372_p1;
wire  signed [18:0] sext_ln835_4_fu_2384_p1;
wire   [18:0] add_ln700_33_fu_2394_p2;
wire   [0:0] tmp_181_fu_2387_p3;
wire   [18:0] select_ln851_15_fu_2400_p3;
wire   [18:0] select_ln850_15_fu_2407_p3;
wire   [0:0] tmp_182_fu_2419_p3;
wire   [17:0] trunc_ln647_16_fu_2415_p1;
wire   [17:0] select_ln399_4_fu_2427_p3;
wire   [7:0] tmp_183_fu_2435_p4;
wire   [0:0] icmp_ln45_4_fu_2445_p2;
wire   [9:0] trunc_ln45_4_fu_2451_p1;
wire  signed [18:0] sext_ln835_5_fu_2463_p1;
wire   [18:0] add_ln700_34_fu_2473_p2;
wire   [0:0] tmp_184_fu_2466_p3;
wire   [18:0] select_ln851_16_fu_2479_p3;
wire   [18:0] select_ln850_16_fu_2486_p3;
wire   [0:0] tmp_185_fu_2498_p3;
wire   [17:0] trunc_ln647_17_fu_2494_p1;
wire   [17:0] select_ln399_5_fu_2506_p3;
wire   [7:0] tmp_186_fu_2514_p4;
wire   [0:0] icmp_ln45_5_fu_2524_p2;
wire   [9:0] trunc_ln45_5_fu_2530_p1;
wire  signed [18:0] sext_ln835_6_fu_2542_p1;
wire   [18:0] add_ln700_35_fu_2552_p2;
wire   [0:0] tmp_187_fu_2545_p3;
wire   [18:0] select_ln851_17_fu_2558_p3;
wire   [18:0] select_ln850_17_fu_2565_p3;
wire   [0:0] tmp_188_fu_2577_p3;
wire   [17:0] trunc_ln647_18_fu_2573_p1;
wire   [17:0] select_ln399_6_fu_2585_p3;
wire   [7:0] tmp_189_fu_2593_p4;
wire   [0:0] icmp_ln45_6_fu_2603_p2;
wire   [9:0] trunc_ln45_6_fu_2609_p1;
wire  signed [18:0] sext_ln835_7_fu_2621_p1;
wire   [18:0] add_ln700_36_fu_2631_p2;
wire   [0:0] tmp_190_fu_2624_p3;
wire   [18:0] select_ln851_18_fu_2637_p3;
wire   [18:0] select_ln850_18_fu_2644_p3;
wire   [0:0] tmp_191_fu_2656_p3;
wire   [17:0] trunc_ln647_19_fu_2652_p1;
wire   [17:0] select_ln399_7_fu_2664_p3;
wire   [7:0] tmp_192_fu_2672_p4;
wire   [0:0] icmp_ln45_7_fu_2682_p2;
wire   [9:0] trunc_ln45_7_fu_2688_p1;
wire  signed [18:0] sext_ln835_8_fu_2700_p1;
wire   [18:0] add_ln700_37_fu_2710_p2;
wire   [0:0] tmp_193_fu_2703_p3;
wire   [18:0] select_ln851_19_fu_2716_p3;
wire   [18:0] select_ln850_19_fu_2723_p3;
wire   [0:0] tmp_194_fu_2735_p3;
wire   [17:0] trunc_ln647_20_fu_2731_p1;
wire   [17:0] select_ln399_8_fu_2743_p3;
wire   [7:0] tmp_195_fu_2751_p4;
wire   [0:0] icmp_ln45_8_fu_2761_p2;
wire   [9:0] trunc_ln45_8_fu_2767_p1;
wire  signed [18:0] sext_ln835_9_fu_2779_p1;
wire   [18:0] add_ln700_38_fu_2789_p2;
wire   [0:0] tmp_196_fu_2782_p3;
wire   [18:0] select_ln851_20_fu_2795_p3;
wire   [18:0] select_ln850_20_fu_2802_p3;
wire   [0:0] tmp_197_fu_2814_p3;
wire   [17:0] trunc_ln647_21_fu_2810_p1;
wire   [17:0] select_ln399_9_fu_2822_p3;
wire   [7:0] tmp_198_fu_2830_p4;
wire   [0:0] icmp_ln45_9_fu_2840_p2;
wire   [9:0] trunc_ln45_9_fu_2846_p1;
wire  signed [18:0] sext_ln835_10_fu_2858_p1;
wire   [18:0] add_ln700_39_fu_2868_p2;
wire   [0:0] tmp_199_fu_2861_p3;
wire   [18:0] select_ln851_21_fu_2874_p3;
wire   [18:0] select_ln850_21_fu_2881_p3;
wire   [0:0] tmp_200_fu_2893_p3;
wire   [17:0] trunc_ln647_22_fu_2889_p1;
wire   [17:0] select_ln399_10_fu_2901_p3;
wire   [7:0] tmp_201_fu_2909_p4;
wire   [0:0] icmp_ln45_10_fu_2919_p2;
wire   [9:0] trunc_ln45_10_fu_2925_p1;
wire  signed [18:0] sext_ln835_11_fu_2937_p1;
wire   [18:0] add_ln700_40_fu_2947_p2;
wire   [0:0] tmp_202_fu_2940_p3;
wire   [18:0] select_ln851_22_fu_2953_p3;
wire   [18:0] select_ln850_22_fu_2960_p3;
wire   [0:0] tmp_203_fu_2972_p3;
wire   [17:0] trunc_ln647_23_fu_2968_p1;
wire   [17:0] select_ln399_11_fu_2980_p3;
wire   [7:0] tmp_204_fu_2988_p4;
wire   [0:0] icmp_ln45_11_fu_2998_p2;
wire   [9:0] trunc_ln45_11_fu_3004_p1;
wire   [15:0] total_fu_3033_p0;
wire   [15:0] total_fu_3033_p1;
reg    grp_fu_1037_ce;
reg    grp_fu_1067_ce;
reg    grp_fu_1097_ce;
reg    grp_fu_1127_ce;
reg    grp_fu_1157_ce;
reg    grp_fu_1187_ce;
reg    grp_fu_1217_ce;
reg    grp_fu_1247_ce;
reg    grp_fu_1277_ce;
reg    grp_fu_1307_ce;
reg    grp_fu_1337_ce;
reg    grp_fu_1367_ce;
reg   [16:0] ap_NS_fsm;
reg    ap_idle_pp2;
wire    ap_enable_pp2;
wire   [37:0] grp_fu_541_p00;
wire   [44:0] grp_fu_547_p00;
wire   [75:0] grp_fu_556_p00;
wire   [89:0] grp_fu_565_p00;
wire   [31:0] total_fu_3033_p00;
wire   [31:0] total_fu_3033_p10;

// power-on initialization
initial begin
#0 ap_CS_fsm = 17'd1;
#0 ap_enable_reg_pp2_iter1 = 1'b0;
#0 ap_enable_reg_pp2_iter37 = 1'b0;
#0 ap_enable_reg_pp2_iter0 = 1'b0;
#0 ap_enable_reg_pp2_iter2 = 1'b0;
#0 ap_enable_reg_pp2_iter3 = 1'b0;
#0 ap_enable_reg_pp2_iter4 = 1'b0;
#0 ap_enable_reg_pp2_iter5 = 1'b0;
#0 ap_enable_reg_pp2_iter6 = 1'b0;
#0 ap_enable_reg_pp2_iter7 = 1'b0;
#0 ap_enable_reg_pp2_iter8 = 1'b0;
#0 ap_enable_reg_pp2_iter9 = 1'b0;
#0 ap_enable_reg_pp2_iter10 = 1'b0;
#0 ap_enable_reg_pp2_iter11 = 1'b0;
#0 ap_enable_reg_pp2_iter12 = 1'b0;
#0 ap_enable_reg_pp2_iter13 = 1'b0;
#0 ap_enable_reg_pp2_iter14 = 1'b0;
#0 ap_enable_reg_pp2_iter15 = 1'b0;
#0 ap_enable_reg_pp2_iter16 = 1'b0;
#0 ap_enable_reg_pp2_iter17 = 1'b0;
#0 ap_enable_reg_pp2_iter18 = 1'b0;
#0 ap_enable_reg_pp2_iter19 = 1'b0;
#0 ap_enable_reg_pp2_iter20 = 1'b0;
#0 ap_enable_reg_pp2_iter21 = 1'b0;
#0 ap_enable_reg_pp2_iter22 = 1'b0;
#0 ap_enable_reg_pp2_iter23 = 1'b0;
#0 ap_enable_reg_pp2_iter24 = 1'b0;
#0 ap_enable_reg_pp2_iter25 = 1'b0;
#0 ap_enable_reg_pp2_iter26 = 1'b0;
#0 ap_enable_reg_pp2_iter27 = 1'b0;
#0 ap_enable_reg_pp2_iter28 = 1'b0;
#0 ap_enable_reg_pp2_iter29 = 1'b0;
#0 ap_enable_reg_pp2_iter30 = 1'b0;
#0 ap_enable_reg_pp2_iter31 = 1'b0;
#0 ap_enable_reg_pp2_iter32 = 1'b0;
#0 ap_enable_reg_pp2_iter33 = 1'b0;
#0 ap_enable_reg_pp2_iter34 = 1'b0;
#0 ap_enable_reg_pp2_iter35 = 1'b0;
#0 ap_enable_reg_pp2_iter36 = 1'b0;
end

ISPPipeline_accelPgM #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 32 ),
    .din2_WIDTH( 32 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 32 ))
ISPPipeline_accelPgM_U438(
    .din0(reg_433),
    .din1(reg_437),
    .din2(reg_441),
    .din3(j_0_reg_346),
    .dout(grp_fu_445_p5)
);

ISPPipeline_accelQgW #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 7 ),
    .dout_WIDTH( 38 ))
ISPPipeline_accelQgW_U439(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_541_p0),
    .din1(grp_fu_541_p1),
    .ce(1'b1),
    .dout(grp_fu_541_p2)
);

ISPPipeline_accelRg6 #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 32 ),
    .din1_WIDTH( 14 ),
    .dout_WIDTH( 45 ))
ISPPipeline_accelRg6_U440(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_547_p0),
    .din1(grp_fu_547_p1),
    .ce(1'b1),
    .dout(grp_fu_547_p2)
);

ISPPipeline_accelShg #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 38 ),
    .din1_WIDTH( 40 ),
    .dout_WIDTH( 76 ))
ISPPipeline_accelShg_U441(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_556_p0),
    .din1(grp_fu_556_p1),
    .ce(1'b1),
    .dout(grp_fu_556_p2)
);

ISPPipeline_accelThq #(
    .ID( 1 ),
    .NUM_STAGE( 2 ),
    .din0_WIDTH( 45 ),
    .din1_WIDTH( 47 ),
    .dout_WIDTH( 90 ))
ISPPipeline_accelThq_U442(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_565_p0),
    .din1(grp_fu_565_p1),
    .ce(1'b1),
    .dout(grp_fu_565_p2)
);

ISPPipeline_accelUhA #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 24 ),
    .din2_WIDTH( 24 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 24 ))
ISPPipeline_accelUhA_U443(
    .din0(minValue_0_V_fu_234),
    .din1(minValue_1_V_fu_238),
    .din2(minValue_2_V_fu_242),
    .din3(j_0_reg_346),
    .dout(tmp_105_fu_711_p5)
);

ISPPipeline_accelUhA #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 24 ),
    .din1_WIDTH( 24 ),
    .din2_WIDTH( 24 ),
    .din3_WIDTH( 2 ),
    .dout_WIDTH( 24 ))
ISPPipeline_accelUhA_U444(
    .din0(maxValue_0_V_fu_246),
    .din1(maxValue_1_V_fu_250),
    .din2(maxValue_2_V_fu_254),
    .din3(j_0_reg_346),
    .dout(tmp_107_fu_820_p5)
);

ISPPipeline_accelVhK #(
    .ID( 1 ),
    .NUM_STAGE( 34 ),
    .din0_WIDTH( 30 ),
    .din1_WIDTH( 24 ),
    .dout_WIDTH( 30 ))
ISPPipeline_accelVhK_U445(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1037_p0),
    .din1(grp_fu_1037_p1),
    .ce(grp_fu_1037_ce),
    .dout(grp_fu_1037_p2)
);

ISPPipeline_accelVhK #(
    .ID( 1 ),
    .NUM_STAGE( 34 ),
    .din0_WIDTH( 30 ),
    .din1_WIDTH( 24 ),
    .dout_WIDTH( 30 ))
ISPPipeline_accelVhK_U446(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1067_p0),
    .din1(grp_fu_1067_p1),
    .ce(grp_fu_1067_ce),
    .dout(grp_fu_1067_p2)
);

ISPPipeline_accelVhK #(
    .ID( 1 ),
    .NUM_STAGE( 34 ),
    .din0_WIDTH( 30 ),
    .din1_WIDTH( 24 ),
    .dout_WIDTH( 30 ))
ISPPipeline_accelVhK_U447(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1097_p0),
    .din1(grp_fu_1097_p1),
    .ce(grp_fu_1097_ce),
    .dout(grp_fu_1097_p2)
);

ISPPipeline_accelVhK #(
    .ID( 1 ),
    .NUM_STAGE( 34 ),
    .din0_WIDTH( 30 ),
    .din1_WIDTH( 24 ),
    .dout_WIDTH( 30 ))
ISPPipeline_accelVhK_U448(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1127_p0),
    .din1(grp_fu_1127_p1),
    .ce(grp_fu_1127_ce),
    .dout(grp_fu_1127_p2)
);

ISPPipeline_accelVhK #(
    .ID( 1 ),
    .NUM_STAGE( 34 ),
    .din0_WIDTH( 30 ),
    .din1_WIDTH( 24 ),
    .dout_WIDTH( 30 ))
ISPPipeline_accelVhK_U449(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1157_p0),
    .din1(grp_fu_1157_p1),
    .ce(grp_fu_1157_ce),
    .dout(grp_fu_1157_p2)
);

ISPPipeline_accelVhK #(
    .ID( 1 ),
    .NUM_STAGE( 34 ),
    .din0_WIDTH( 30 ),
    .din1_WIDTH( 24 ),
    .dout_WIDTH( 30 ))
ISPPipeline_accelVhK_U450(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1187_p0),
    .din1(grp_fu_1187_p1),
    .ce(grp_fu_1187_ce),
    .dout(grp_fu_1187_p2)
);

ISPPipeline_accelVhK #(
    .ID( 1 ),
    .NUM_STAGE( 34 ),
    .din0_WIDTH( 30 ),
    .din1_WIDTH( 24 ),
    .dout_WIDTH( 30 ))
ISPPipeline_accelVhK_U451(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1217_p0),
    .din1(grp_fu_1217_p1),
    .ce(grp_fu_1217_ce),
    .dout(grp_fu_1217_p2)
);

ISPPipeline_accelVhK #(
    .ID( 1 ),
    .NUM_STAGE( 34 ),
    .din0_WIDTH( 30 ),
    .din1_WIDTH( 24 ),
    .dout_WIDTH( 30 ))
ISPPipeline_accelVhK_U452(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1247_p0),
    .din1(grp_fu_1247_p1),
    .ce(grp_fu_1247_ce),
    .dout(grp_fu_1247_p2)
);

ISPPipeline_accelVhK #(
    .ID( 1 ),
    .NUM_STAGE( 34 ),
    .din0_WIDTH( 30 ),
    .din1_WIDTH( 24 ),
    .dout_WIDTH( 30 ))
ISPPipeline_accelVhK_U453(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1277_p0),
    .din1(grp_fu_1277_p1),
    .ce(grp_fu_1277_ce),
    .dout(grp_fu_1277_p2)
);

ISPPipeline_accelVhK #(
    .ID( 1 ),
    .NUM_STAGE( 34 ),
    .din0_WIDTH( 30 ),
    .din1_WIDTH( 24 ),
    .dout_WIDTH( 30 ))
ISPPipeline_accelVhK_U454(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1307_p0),
    .din1(grp_fu_1307_p1),
    .ce(grp_fu_1307_ce),
    .dout(grp_fu_1307_p2)
);

ISPPipeline_accelVhK #(
    .ID( 1 ),
    .NUM_STAGE( 34 ),
    .din0_WIDTH( 30 ),
    .din1_WIDTH( 24 ),
    .dout_WIDTH( 30 ))
ISPPipeline_accelVhK_U455(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1337_p0),
    .din1(grp_fu_1337_p1),
    .ce(grp_fu_1337_ce),
    .dout(grp_fu_1337_p2)
);

ISPPipeline_accelVhK #(
    .ID( 1 ),
    .NUM_STAGE( 34 ),
    .din0_WIDTH( 30 ),
    .din1_WIDTH( 24 ),
    .dout_WIDTH( 30 ))
ISPPipeline_accelVhK_U456(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_1367_p0),
    .din1(grp_fu_1367_p1),
    .ce(grp_fu_1367_ce),
    .dout(grp_fu_1367_p2)
);

ISPPipeline_accelWhU #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 16 ),
    .din1_WIDTH( 16 ),
    .dout_WIDTH( 32 ))
ISPPipeline_accelWhU_U457(
    .din0(total_fu_3033_p0),
    .din1(total_fu_3033_p1),
    .dout(total_fu_3033_p2)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_state1;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter0 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp2_stage0_subdone) & (1'b1 == ap_condition_pp2_exit_iter0_state16) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
            ap_enable_reg_pp2_iter0 <= 1'b0;
        end else if (((icmp_ln887_11_fu_872_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
            ap_enable_reg_pp2_iter0 <= 1'b1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter1 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            if ((1'b1 == ap_condition_pp2_exit_iter0_state16)) begin
                ap_enable_reg_pp2_iter1 <= (1'b1 ^ ap_condition_pp2_exit_iter0_state16);
            end else if ((1'b1 == 1'b1)) begin
                ap_enable_reg_pp2_iter1 <= ap_enable_reg_pp2_iter0;
            end
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter10 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter10 <= ap_enable_reg_pp2_iter9;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter11 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter11 <= ap_enable_reg_pp2_iter10;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter12 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter12 <= ap_enable_reg_pp2_iter11;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter13 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter13 <= ap_enable_reg_pp2_iter12;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter14 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter14 <= ap_enable_reg_pp2_iter13;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter15 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter15 <= ap_enable_reg_pp2_iter14;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter16 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter16 <= ap_enable_reg_pp2_iter15;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter17 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter17 <= ap_enable_reg_pp2_iter16;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter18 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter18 <= ap_enable_reg_pp2_iter17;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter19 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter19 <= ap_enable_reg_pp2_iter18;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter2 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter2 <= ap_enable_reg_pp2_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter20 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter20 <= ap_enable_reg_pp2_iter19;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter21 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter21 <= ap_enable_reg_pp2_iter20;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter22 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter22 <= ap_enable_reg_pp2_iter21;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter23 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter23 <= ap_enable_reg_pp2_iter22;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter24 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter24 <= ap_enable_reg_pp2_iter23;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter25 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter25 <= ap_enable_reg_pp2_iter24;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter26 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter26 <= ap_enable_reg_pp2_iter25;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter27 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter27 <= ap_enable_reg_pp2_iter26;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter28 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter28 <= ap_enable_reg_pp2_iter27;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter29 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter29 <= ap_enable_reg_pp2_iter28;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter3 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter3 <= ap_enable_reg_pp2_iter2;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter30 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter30 <= ap_enable_reg_pp2_iter29;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter31 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter31 <= ap_enable_reg_pp2_iter30;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter32 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter32 <= ap_enable_reg_pp2_iter31;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter33 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter33 <= ap_enable_reg_pp2_iter32;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter34 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter34 <= ap_enable_reg_pp2_iter33;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter35 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter35 <= ap_enable_reg_pp2_iter34;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter36 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter36 <= ap_enable_reg_pp2_iter35;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter37 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter37 <= ap_enable_reg_pp2_iter36;
        end else if (((icmp_ln887_11_fu_872_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
            ap_enable_reg_pp2_iter37 <= 1'b0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter4 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter4 <= ap_enable_reg_pp2_iter3;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter5 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter5 <= ap_enable_reg_pp2_iter4;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter6 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter6 <= ap_enable_reg_pp2_iter5;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter7 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter7 <= ap_enable_reg_pp2_iter6;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter8 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter8 <= ap_enable_reg_pp2_iter7;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp2_iter9 <= 1'b0;
    end else begin
        if ((1'b0 == ap_block_pp2_stage0_subdone)) begin
            ap_enable_reg_pp2_iter9 <= ap_enable_reg_pp2_iter8;
        end
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state14)) begin
        j_0_reg_346 <= j_reg_3184;
    end else if ((1'b1 == ap_CS_fsm_state5)) begin
        j_0_reg_346 <= 2'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((j_0_reg_346 == 2'd0) & (1'd1 == and_ln329_fu_794_p2) & (1'b1 == ap_CS_fsm_state13))) begin
        maxValue_0_V_fu_246 <= maxValue_0_V_2_fu_832_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        maxValue_0_V_fu_246 <= 24'd65504;
    end
end

always @ (posedge ap_clk) begin
    if (((j_0_reg_346 == 2'd1) & (1'd1 == and_ln329_fu_794_p2) & (1'b1 == ap_CS_fsm_state13))) begin
        maxValue_1_V_fu_250 <= maxValue_0_V_2_fu_832_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        maxValue_1_V_fu_250 <= 24'd65504;
    end
end

always @ (posedge ap_clk) begin
    if ((~(j_0_reg_346 == 2'd1) & ~(j_0_reg_346 == 2'd0) & (1'd1 == and_ln329_fu_794_p2) & (1'b1 == ap_CS_fsm_state13))) begin
        maxValue_2_V_fu_254 <= maxValue_0_V_2_fu_832_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        maxValue_2_V_fu_254 <= 24'd65504;
    end
end

always @ (posedge ap_clk) begin
    if (((j_0_reg_346 == 2'd0) & (1'd1 == and_ln317_fu_693_p2) & (1'b1 == ap_CS_fsm_state9))) begin
        minValue_0_V_fu_234 <= minValue_0_V_2_fu_723_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        minValue_0_V_fu_234 <= 24'd16777184;
    end
end

always @ (posedge ap_clk) begin
    if (((j_0_reg_346 == 2'd1) & (1'd1 == and_ln317_fu_693_p2) & (1'b1 == ap_CS_fsm_state9))) begin
        minValue_1_V_fu_238 <= minValue_0_V_2_fu_723_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        minValue_1_V_fu_238 <= 24'd16777184;
    end
end

always @ (posedge ap_clk) begin
    if ((~(j_0_reg_346 == 2'd1) & ~(j_0_reg_346 == 2'd0) & (1'd1 == and_ln317_fu_693_p2) & (1'b1 == ap_CS_fsm_state9))) begin
        minValue_2_V_fu_242 <= minValue_0_V_2_fu_723_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        minValue_2_V_fu_242 <= 24'd16777184;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln329_fu_794_p2) & (1'b1 == ap_CS_fsm_state13))) begin
        p_01348_1_0_reg_393 <= sub_ln701_fu_805_p2;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        p_01348_1_0_reg_393 <= total_reg_3133;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln317_fu_693_p2) & (1'b1 == ap_CS_fsm_state9))) begin
        p_01629_1_0_reg_370 <= add_ln700_28_fu_705_p2;
    end else if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln293_fu_571_p2 == 1'd0))) begin
        p_01629_1_0_reg_370 <= 32'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((~(j_0_reg_346 == 2'd1) & ~(j_0_reg_346 == 2'd0) & (1'd1 == and_ln317_fu_693_p2) & (1'b1 == ap_CS_fsm_state9))) begin
        p_Val2_10_fu_230 <= minValue_0_V_2_fu_723_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        p_Val2_10_fu_230 <= 24'd16777184;
    end
end

always @ (posedge ap_clk) begin
    if (((j_0_reg_346 == 2'd0) & (1'd1 == and_ln317_fu_693_p2) & (1'b1 == ap_CS_fsm_state9))) begin
        p_Val2_6_fu_214 <= minValue_0_V_2_fu_723_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        p_Val2_6_fu_214 <= 24'd16777184;
    end
end

always @ (posedge ap_clk) begin
    if (((j_0_reg_346 == 2'd1) & (1'd1 == and_ln329_fu_794_p2) & (1'b1 == ap_CS_fsm_state13))) begin
        p_Val2_7_fu_218 <= maxValue_0_V_2_fu_832_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        p_Val2_7_fu_218 <= 24'd65504;
    end
end

always @ (posedge ap_clk) begin
    if (((j_0_reg_346 == 2'd1) & (1'd1 == and_ln317_fu_693_p2) & (1'b1 == ap_CS_fsm_state9))) begin
        p_Val2_8_fu_222 <= minValue_0_V_2_fu_723_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        p_Val2_8_fu_222 <= 24'd16777184;
    end
end

always @ (posedge ap_clk) begin
    if ((~(j_0_reg_346 == 2'd1) & ~(j_0_reg_346 == 2'd0) & (1'd1 == and_ln329_fu_794_p2) & (1'b1 == ap_CS_fsm_state13))) begin
        p_Val2_9_fu_226 <= maxValue_0_V_2_fu_832_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        p_Val2_9_fu_226 <= 24'd65504;
    end
end

always @ (posedge ap_clk) begin
    if (((j_0_reg_346 == 2'd0) & (1'd1 == and_ln329_fu_794_p2) & (1'b1 == ap_CS_fsm_state13))) begin
        p_Val2_s_fu_210 <= maxValue_0_V_2_fu_832_p2;
    end else if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        p_Val2_s_fu_210 <= 24'd65504;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln317_fu_693_p2) & (1'b1 == ap_CS_fsm_state9))) begin
        t_V_16_0_reg_358 <= add_ln700_fu_699_p2;
    end else if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln293_fu_571_p2 == 1'd0))) begin
        t_V_16_0_reg_358 <= 11'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((1'd1 == and_ln329_fu_794_p2) & (1'b1 == ap_CS_fsm_state13))) begin
        t_V_17_0_reg_381 <= add_ln701_fu_799_p2;
    end else if ((1'b1 == ap_CS_fsm_state10)) begin
        t_V_17_0_reg_381 <= 16'd1023;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln887_12_fu_887_p2 == 1'd1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0) & (ap_enable_reg_pp2_iter0 == 1'b1))) begin
        t_V_2_reg_413 <= col_V_fu_892_p2;
    end else if (((icmp_ln887_11_fu_872_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state15))) begin
        t_V_2_reg_413 <= 13'd0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state54)) begin
        t_V_reg_402 <= row_V_reg_3293;
    end else if (((icmp_ln293_fu_571_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        t_V_reg_402 <= 13'd0;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln887_12_reg_3298_pp2_iter34_reg == 1'd1) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        icmp_ln851_12_reg_3452 <= icmp_ln851_12_fu_1482_p2;
        icmp_ln851_13_reg_3467 <= icmp_ln851_13_fu_1540_p2;
        icmp_ln851_14_reg_3482 <= icmp_ln851_14_fu_1598_p2;
        icmp_ln851_15_reg_3497 <= icmp_ln851_15_fu_1656_p2;
        icmp_ln851_16_reg_3512 <= icmp_ln851_16_fu_1714_p2;
        icmp_ln851_17_reg_3527 <= icmp_ln851_17_fu_1772_p2;
        icmp_ln851_18_reg_3542 <= icmp_ln851_18_fu_1830_p2;
        icmp_ln851_19_reg_3557 <= icmp_ln851_19_fu_1888_p2;
        icmp_ln851_20_reg_3572 <= icmp_ln851_20_fu_1946_p2;
        icmp_ln851_21_reg_3587 <= icmp_ln851_21_fu_2004_p2;
        icmp_ln851_22_reg_3602 <= icmp_ln851_22_fu_2062_p2;
        icmp_ln851_reg_3437 <= icmp_ln851_fu_1424_p2;
        sub_ln1118_10_reg_3577[40 : 6] <= sub_ln1118_10_fu_1978_p2[40 : 6];
        sub_ln1118_11_reg_3592[40 : 6] <= sub_ln1118_11_fu_2036_p2[40 : 6];
        sub_ln1118_1_reg_3442[40 : 6] <= sub_ln1118_1_fu_1456_p2[40 : 6];
        sub_ln1118_2_reg_3457[40 : 6] <= sub_ln1118_2_fu_1514_p2[40 : 6];
        sub_ln1118_3_reg_3472[40 : 6] <= sub_ln1118_3_fu_1572_p2[40 : 6];
        sub_ln1118_4_reg_3487[40 : 6] <= sub_ln1118_4_fu_1630_p2[40 : 6];
        sub_ln1118_5_reg_3502[40 : 6] <= sub_ln1118_5_fu_1688_p2[40 : 6];
        sub_ln1118_6_reg_3517[40 : 6] <= sub_ln1118_6_fu_1746_p2[40 : 6];
        sub_ln1118_7_reg_3532[40 : 6] <= sub_ln1118_7_fu_1804_p2[40 : 6];
        sub_ln1118_8_reg_3547[40 : 6] <= sub_ln1118_8_fu_1862_p2[40 : 6];
        sub_ln1118_9_reg_3562[40 : 6] <= sub_ln1118_9_fu_1920_p2[40 : 6];
        sub_ln1118_reg_3427[40 : 6] <= sub_ln1118_fu_1398_p2[40 : 6];
        tmp_27_reg_3432 <= {{sub_ln1118_fu_1398_p2[29:12]}};
        tmp_28_reg_3447 <= {{sub_ln1118_1_fu_1456_p2[29:12]}};
        tmp_29_reg_3462 <= {{sub_ln1118_2_fu_1514_p2[29:12]}};
        tmp_30_reg_3477 <= {{sub_ln1118_3_fu_1572_p2[29:12]}};
        tmp_31_reg_3492 <= {{sub_ln1118_4_fu_1630_p2[29:12]}};
        tmp_32_reg_3507 <= {{sub_ln1118_5_fu_1688_p2[29:12]}};
        tmp_33_reg_3522 <= {{sub_ln1118_6_fu_1746_p2[29:12]}};
        tmp_34_reg_3537 <= {{sub_ln1118_7_fu_1804_p2[29:12]}};
        tmp_35_reg_3552 <= {{sub_ln1118_8_fu_1862_p2[29:12]}};
        tmp_36_reg_3567 <= {{sub_ln1118_9_fu_1920_p2[29:12]}};
        tmp_37_reg_3582 <= {{sub_ln1118_10_fu_1978_p2[29:12]}};
        tmp_38_reg_3597 <= {{sub_ln1118_11_fu_2036_p2[29:12]}};
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        icmp_ln883_reg_3271 <= icmp_ln883_fu_769_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        icmp_ln887_12_reg_3298 <= icmp_ln887_12_fu_887_p2;
        icmp_ln887_12_reg_3298_pp2_iter1_reg <= icmp_ln887_12_reg_3298;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b0 == ap_block_pp2_stage0_11001)) begin
        icmp_ln887_12_reg_3298_pp2_iter10_reg <= icmp_ln887_12_reg_3298_pp2_iter9_reg;
        icmp_ln887_12_reg_3298_pp2_iter11_reg <= icmp_ln887_12_reg_3298_pp2_iter10_reg;
        icmp_ln887_12_reg_3298_pp2_iter12_reg <= icmp_ln887_12_reg_3298_pp2_iter11_reg;
        icmp_ln887_12_reg_3298_pp2_iter13_reg <= icmp_ln887_12_reg_3298_pp2_iter12_reg;
        icmp_ln887_12_reg_3298_pp2_iter14_reg <= icmp_ln887_12_reg_3298_pp2_iter13_reg;
        icmp_ln887_12_reg_3298_pp2_iter15_reg <= icmp_ln887_12_reg_3298_pp2_iter14_reg;
        icmp_ln887_12_reg_3298_pp2_iter16_reg <= icmp_ln887_12_reg_3298_pp2_iter15_reg;
        icmp_ln887_12_reg_3298_pp2_iter17_reg <= icmp_ln887_12_reg_3298_pp2_iter16_reg;
        icmp_ln887_12_reg_3298_pp2_iter18_reg <= icmp_ln887_12_reg_3298_pp2_iter17_reg;
        icmp_ln887_12_reg_3298_pp2_iter19_reg <= icmp_ln887_12_reg_3298_pp2_iter18_reg;
        icmp_ln887_12_reg_3298_pp2_iter20_reg <= icmp_ln887_12_reg_3298_pp2_iter19_reg;
        icmp_ln887_12_reg_3298_pp2_iter21_reg <= icmp_ln887_12_reg_3298_pp2_iter20_reg;
        icmp_ln887_12_reg_3298_pp2_iter22_reg <= icmp_ln887_12_reg_3298_pp2_iter21_reg;
        icmp_ln887_12_reg_3298_pp2_iter23_reg <= icmp_ln887_12_reg_3298_pp2_iter22_reg;
        icmp_ln887_12_reg_3298_pp2_iter24_reg <= icmp_ln887_12_reg_3298_pp2_iter23_reg;
        icmp_ln887_12_reg_3298_pp2_iter25_reg <= icmp_ln887_12_reg_3298_pp2_iter24_reg;
        icmp_ln887_12_reg_3298_pp2_iter26_reg <= icmp_ln887_12_reg_3298_pp2_iter25_reg;
        icmp_ln887_12_reg_3298_pp2_iter27_reg <= icmp_ln887_12_reg_3298_pp2_iter26_reg;
        icmp_ln887_12_reg_3298_pp2_iter28_reg <= icmp_ln887_12_reg_3298_pp2_iter27_reg;
        icmp_ln887_12_reg_3298_pp2_iter29_reg <= icmp_ln887_12_reg_3298_pp2_iter28_reg;
        icmp_ln887_12_reg_3298_pp2_iter2_reg <= icmp_ln887_12_reg_3298_pp2_iter1_reg;
        icmp_ln887_12_reg_3298_pp2_iter30_reg <= icmp_ln887_12_reg_3298_pp2_iter29_reg;
        icmp_ln887_12_reg_3298_pp2_iter31_reg <= icmp_ln887_12_reg_3298_pp2_iter30_reg;
        icmp_ln887_12_reg_3298_pp2_iter32_reg <= icmp_ln887_12_reg_3298_pp2_iter31_reg;
        icmp_ln887_12_reg_3298_pp2_iter33_reg <= icmp_ln887_12_reg_3298_pp2_iter32_reg;
        icmp_ln887_12_reg_3298_pp2_iter34_reg <= icmp_ln887_12_reg_3298_pp2_iter33_reg;
        icmp_ln887_12_reg_3298_pp2_iter35_reg <= icmp_ln887_12_reg_3298_pp2_iter34_reg;
        icmp_ln887_12_reg_3298_pp2_iter36_reg <= icmp_ln887_12_reg_3298_pp2_iter35_reg;
        icmp_ln887_12_reg_3298_pp2_iter3_reg <= icmp_ln887_12_reg_3298_pp2_iter2_reg;
        icmp_ln887_12_reg_3298_pp2_iter4_reg <= icmp_ln887_12_reg_3298_pp2_iter3_reg;
        icmp_ln887_12_reg_3298_pp2_iter5_reg <= icmp_ln887_12_reg_3298_pp2_iter4_reg;
        icmp_ln887_12_reg_3298_pp2_iter6_reg <= icmp_ln887_12_reg_3298_pp2_iter5_reg;
        icmp_ln887_12_reg_3298_pp2_iter7_reg <= icmp_ln887_12_reg_3298_pp2_iter6_reg;
        icmp_ln887_12_reg_3298_pp2_iter8_reg <= icmp_ln887_12_reg_3298_pp2_iter7_reg;
        icmp_ln887_12_reg_3298_pp2_iter9_reg <= icmp_ln887_12_reg_3298_pp2_iter8_reg;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state6)) begin
        j_reg_3184 <= j_fu_577_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state3)) begin
        mul_ln1148_1_reg_3155 <= grp_fu_547_p2;
        mul_ln1148_reg_3150 <= grp_fu_541_p2;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state5)) begin
        mul_ln1148_2_reg_3170 <= grp_fu_556_p2;
        mul_ln1148_3_reg_3175 <= grp_fu_565_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state8) | (1'b1 == ap_CS_fsm_state12))) begin
        reg_433 <= hist_0_q0;
        reg_437 <= hist_1_q0;
        reg_441 <= hist_2_q0;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state15)) begin
        row_V_reg_3293 <= row_V_fu_877_p2;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln887_12_reg_3298_pp2_iter35_reg == 1'd1) & (1'b0 == ap_block_pp2_stage0_11001))) begin
        select_ln45_10_reg_3657 <= select_ln45_10_fu_2929_p3;
        select_ln45_11_reg_3662 <= select_ln45_11_fu_3008_p3;
        select_ln45_1_reg_3612 <= select_ln45_1_fu_2218_p3;
        select_ln45_2_reg_3617 <= select_ln45_2_fu_2297_p3;
        select_ln45_3_reg_3622 <= select_ln45_3_fu_2376_p3;
        select_ln45_4_reg_3627 <= select_ln45_4_fu_2455_p3;
        select_ln45_5_reg_3632 <= select_ln45_5_fu_2534_p3;
        select_ln45_6_reg_3637 <= select_ln45_6_fu_2613_p3;
        select_ln45_7_reg_3642 <= select_ln45_7_fu_2692_p3;
        select_ln45_8_reg_3647 <= select_ln45_8_fu_2771_p3;
        select_ln45_9_reg_3652 <= select_ln45_9_fu_2850_p3;
        select_ln45_reg_3607 <= select_ln45_fu_2139_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln293_fu_571_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
        sext_ln1148_1_reg_3207 <= sext_ln1148_1_fu_645_p1;
        sext_ln1148_2_reg_3215 <= sext_ln1148_2_fu_649_p1;
        sext_ln1148_reg_3199 <= sext_ln1148_fu_641_p1;
    end
end

always @ (posedge ap_clk) begin
    if ((1'b1 == ap_CS_fsm_state10)) begin
        sext_ln895_reg_3251 <= sext_ln895_fu_759_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((icmp_ln887_12_reg_3298 == 1'd1) & (1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        tmp_66_reg_3312 <= {{src_data_V_V_dout[19:10]}};
        tmp_69_reg_3317 <= {{src_data_V_V_dout[29:20]}};
        tmp_72_reg_3322 <= {{src_data_V_V_dout[39:30]}};
        tmp_75_reg_3327 <= {{src_data_V_V_dout[49:40]}};
        tmp_78_reg_3332 <= {{src_data_V_V_dout[59:50]}};
        tmp_81_reg_3337 <= {{src_data_V_V_dout[69:60]}};
        tmp_84_reg_3342 <= {{src_data_V_V_dout[79:70]}};
        tmp_87_reg_3347 <= {{src_data_V_V_dout[89:80]}};
        tmp_90_reg_3352 <= {{src_data_V_V_dout[99:90]}};
        tmp_93_reg_3357 <= {{src_data_V_V_dout[109:100]}};
        tmp_96_reg_3362 <= {{src_data_V_V_dout[119:110]}};
        trunc_ln703_reg_3307 <= trunc_ln703_fu_898_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
        total_reg_3133 <= total_fu_3033_p2;
        width_reg_3128 <= {{dst_cols_read[15:2]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b1 == ap_CS_fsm_state6) & (icmp_ln293_fu_571_p2 == 1'd0))) begin
        trunc_ln555_4_reg_3189 <= {{mul_ln1148_3_reg_3175[89:58]}};
        zext_ln887_2_reg_3194[24 : 0] <= zext_ln887_2_fu_601_p1[24 : 0];
    end
end

always @ (*) begin
    if ((icmp_ln887_12_fu_887_p2 == 1'd0)) begin
        ap_condition_pp2_exit_iter0_state16 = 1'b1;
    end else begin
        ap_condition_pp2_exit_iter0_state16 = 1'b0;
    end
end

always @ (*) begin
    if ((((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1)) | ((1'b1 == ap_CS_fsm_state15) & (icmp_ln887_11_fu_872_p2 == 1'd0)))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if (((ap_start == 1'b0) & (1'b1 == ap_CS_fsm_state1))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp2_iter36 == 1'b0) & (ap_enable_reg_pp2_iter35 == 1'b0) & (ap_enable_reg_pp2_iter34 == 1'b0) & (ap_enable_reg_pp2_iter33 == 1'b0) & (ap_enable_reg_pp2_iter32 == 1'b0) & (ap_enable_reg_pp2_iter31 == 1'b0) & (ap_enable_reg_pp2_iter30 == 1'b0) & (ap_enable_reg_pp2_iter29 == 1'b0) & (ap_enable_reg_pp2_iter28 == 1'b0) & (ap_enable_reg_pp2_iter27 == 1'b0) & (ap_enable_reg_pp2_iter26 == 1'b0) & (ap_enable_reg_pp2_iter25 == 1'b0) & (ap_enable_reg_pp2_iter24 == 1'b0) & (ap_enable_reg_pp2_iter23 == 1'b0) & (ap_enable_reg_pp2_iter22 == 1'b0) & (ap_enable_reg_pp2_iter21 == 1'b0) & (ap_enable_reg_pp2_iter20 == 1'b0) & (ap_enable_reg_pp2_iter19 == 1'b0) & (ap_enable_reg_pp2_iter18 == 1'b0) & (ap_enable_reg_pp2_iter17 == 1'b0) & (ap_enable_reg_pp2_iter16 == 1'b0) & (ap_enable_reg_pp2_iter15 == 1'b0) & (ap_enable_reg_pp2_iter14 == 1'b0) & (ap_enable_reg_pp2_iter13 == 1'b0) & (ap_enable_reg_pp2_iter12 == 1'b0) & (ap_enable_reg_pp2_iter11 == 1'b0) & (ap_enable_reg_pp2_iter10 == 1'b0) & (ap_enable_reg_pp2_iter9 == 1'b0) & (ap_enable_reg_pp2_iter8 == 1'b0) & (ap_enable_reg_pp2_iter7 == 1'b0) & (ap_enable_reg_pp2_iter6 == 1'b0) & (ap_enable_reg_pp2_iter5 == 1'b0) & (ap_enable_reg_pp2_iter4 == 1'b0) & (ap_enable_reg_pp2_iter3 == 1'b0) & (ap_enable_reg_pp2_iter2 == 1'b0) & (ap_enable_reg_pp2_iter37 == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b0))) begin
        ap_idle_pp2 = 1'b1;
    end else begin
        ap_idle_pp2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state15) & (icmp_ln887_11_fu_872_p2 == 1'd0))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln887_12_reg_3298_pp2_iter36_reg == 1'd1) & (1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter37 == 1'b1))) begin
        dst_data_V_V_blk_n = dst_data_V_V_full_n;
    end else begin
        dst_data_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln887_12_reg_3298_pp2_iter36_reg == 1'd1) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter37 == 1'b1))) begin
        dst_data_V_V_write = 1'b1;
    end else begin
        dst_data_V_V_write = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        grp_fu_1037_ce = 1'b1;
    end else begin
        grp_fu_1037_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        grp_fu_1067_ce = 1'b1;
    end else begin
        grp_fu_1067_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        grp_fu_1097_ce = 1'b1;
    end else begin
        grp_fu_1097_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        grp_fu_1127_ce = 1'b1;
    end else begin
        grp_fu_1127_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        grp_fu_1157_ce = 1'b1;
    end else begin
        grp_fu_1157_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        grp_fu_1187_ce = 1'b1;
    end else begin
        grp_fu_1187_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        grp_fu_1217_ce = 1'b1;
    end else begin
        grp_fu_1217_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        grp_fu_1247_ce = 1'b1;
    end else begin
        grp_fu_1247_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        grp_fu_1277_ce = 1'b1;
    end else begin
        grp_fu_1277_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        grp_fu_1307_ce = 1'b1;
    end else begin
        grp_fu_1307_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        grp_fu_1337_ce = 1'b1;
    end else begin
        grp_fu_1337_ce = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp2_stage0_11001) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        grp_fu_1367_ce = 1'b1;
    end else begin
        grp_fu_1367_ce = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        hist_0_address0 = zext_ln544_2_fu_762_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        hist_0_address0 = zext_ln544_fu_653_p1;
    end else begin
        hist_0_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state7))) begin
        hist_0_ce0 = 1'b1;
    end else begin
        hist_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        hist_1_address0 = zext_ln544_2_fu_762_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        hist_1_address0 = zext_ln544_fu_653_p1;
    end else begin
        hist_1_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state7))) begin
        hist_1_ce0 = 1'b1;
    end else begin
        hist_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_state11)) begin
        hist_2_address0 = zext_ln544_2_fu_762_p1;
    end else if ((1'b1 == ap_CS_fsm_state7)) begin
        hist_2_address0 = zext_ln544_fu_653_p1;
    end else begin
        hist_2_address0 = 'bx;
    end
end

always @ (*) begin
    if (((1'b1 == ap_CS_fsm_state11) | (1'b1 == ap_CS_fsm_state7))) begin
        hist_2_ce0 = 1'b1;
    end else begin
        hist_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((icmp_ln887_12_reg_3298 == 1'd1) & (1'b0 == ap_block_pp2_stage0) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        src_data_V_V_blk_n = src_data_V_V_empty_n;
    end else begin
        src_data_V_V_blk_n = 1'b1;
    end
end

always @ (*) begin
    if (((icmp_ln887_12_reg_3298 == 1'd1) & (1'b0 == ap_block_pp2_stage0_11001) & (ap_enable_reg_pp2_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp2_stage0))) begin
        src_data_V_V_read = 1'b1;
    end else begin
        src_data_V_V_read = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_state1 : begin
            if (((ap_start == 1'b1) & (1'b1 == ap_CS_fsm_state1))) begin
                ap_NS_fsm = ap_ST_fsm_state2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end
        end
        ap_ST_fsm_state2 : begin
            ap_NS_fsm = ap_ST_fsm_state3;
        end
        ap_ST_fsm_state3 : begin
            ap_NS_fsm = ap_ST_fsm_state4;
        end
        ap_ST_fsm_state4 : begin
            ap_NS_fsm = ap_ST_fsm_state5;
        end
        ap_ST_fsm_state5 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state6 : begin
            if (((icmp_ln293_fu_571_p2 == 1'd1) & (1'b1 == ap_CS_fsm_state6))) begin
                ap_NS_fsm = ap_ST_fsm_state15;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end
        end
        ap_ST_fsm_state7 : begin
            ap_NS_fsm = ap_ST_fsm_state8;
        end
        ap_ST_fsm_state8 : begin
            ap_NS_fsm = ap_ST_fsm_state9;
        end
        ap_ST_fsm_state9 : begin
            if (((1'd1 == and_ln317_fu_693_p2) & (1'b1 == ap_CS_fsm_state9))) begin
                ap_NS_fsm = ap_ST_fsm_state7;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state10;
            end
        end
        ap_ST_fsm_state10 : begin
            ap_NS_fsm = ap_ST_fsm_state11;
        end
        ap_ST_fsm_state11 : begin
            ap_NS_fsm = ap_ST_fsm_state12;
        end
        ap_ST_fsm_state12 : begin
            ap_NS_fsm = ap_ST_fsm_state13;
        end
        ap_ST_fsm_state13 : begin
            if (((1'd1 == and_ln329_fu_794_p2) & (1'b1 == ap_CS_fsm_state13))) begin
                ap_NS_fsm = ap_ST_fsm_state11;
            end else begin
                ap_NS_fsm = ap_ST_fsm_state14;
            end
        end
        ap_ST_fsm_state14 : begin
            ap_NS_fsm = ap_ST_fsm_state6;
        end
        ap_ST_fsm_state15 : begin
            if (((1'b1 == ap_CS_fsm_state15) & (icmp_ln887_11_fu_872_p2 == 1'd0))) begin
                ap_NS_fsm = ap_ST_fsm_state1;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_pp2_stage0 : begin
            if ((~((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln887_12_fu_887_p2 == 1'd0)) & ~((ap_enable_reg_pp2_iter36 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter37 == 1'b1)))) begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end else if ((((ap_enable_reg_pp2_iter36 == 1'b0) & (1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter37 == 1'b1)) | ((1'b0 == ap_block_pp2_stage0_subdone) & (ap_enable_reg_pp2_iter1 == 1'b0) & (ap_enable_reg_pp2_iter0 == 1'b1) & (icmp_ln887_12_fu_887_p2 == 1'd0)))) begin
                ap_NS_fsm = ap_ST_fsm_state54;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp2_stage0;
            end
        end
        ap_ST_fsm_state54 : begin
            ap_NS_fsm = ap_ST_fsm_state15;
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign add_ln1353_fu_668_p2 = (zext_ln215_4_fu_664_p1 + zext_ln215_fu_660_p1);

assign add_ln700_28_fu_705_p2 = (grp_fu_445_p5 + p_01629_1_0_reg_370);

assign add_ln700_29_fu_2078_p2 = ($signed(19'd1) + $signed(sext_ln835_fu_2068_p1));

assign add_ln700_30_fu_2157_p2 = ($signed(19'd1) + $signed(sext_ln835_1_fu_2147_p1));

assign add_ln700_31_fu_2236_p2 = ($signed(19'd1) + $signed(sext_ln835_2_fu_2226_p1));

assign add_ln700_32_fu_2315_p2 = ($signed(19'd1) + $signed(sext_ln835_3_fu_2305_p1));

assign add_ln700_33_fu_2394_p2 = ($signed(19'd1) + $signed(sext_ln835_4_fu_2384_p1));

assign add_ln700_34_fu_2473_p2 = ($signed(19'd1) + $signed(sext_ln835_5_fu_2463_p1));

assign add_ln700_35_fu_2552_p2 = ($signed(19'd1) + $signed(sext_ln835_6_fu_2542_p1));

assign add_ln700_36_fu_2631_p2 = ($signed(19'd1) + $signed(sext_ln835_7_fu_2621_p1));

assign add_ln700_37_fu_2710_p2 = ($signed(19'd1) + $signed(sext_ln835_8_fu_2700_p1));

assign add_ln700_38_fu_2789_p2 = ($signed(19'd1) + $signed(sext_ln835_9_fu_2779_p1));

assign add_ln700_39_fu_2868_p2 = ($signed(19'd1) + $signed(sext_ln835_10_fu_2858_p1));

assign add_ln700_40_fu_2947_p2 = ($signed(19'd1) + $signed(sext_ln835_11_fu_2937_p1));

assign add_ln700_fu_699_p2 = (t_V_16_0_reg_358 + 11'd1);

assign add_ln701_fu_799_p2 = ($signed(t_V_17_0_reg_381) + $signed(16'd65535));

assign and_ln317_fu_693_p2 = (xor_ln887_fu_687_p2 & icmp_ln887_fu_674_p2);

assign and_ln329_fu_794_p2 = (icmp_ln895_fu_789_p2 & icmp_ln883_reg_3271);

assign ap_CS_fsm_pp2_stage0 = ap_CS_fsm[32'd15];

assign ap_CS_fsm_state1 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_state10 = ap_CS_fsm[32'd9];

assign ap_CS_fsm_state11 = ap_CS_fsm[32'd10];

assign ap_CS_fsm_state12 = ap_CS_fsm[32'd11];

assign ap_CS_fsm_state13 = ap_CS_fsm[32'd12];

assign ap_CS_fsm_state14 = ap_CS_fsm[32'd13];

assign ap_CS_fsm_state15 = ap_CS_fsm[32'd14];

assign ap_CS_fsm_state2 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_state3 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_state4 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_state5 = ap_CS_fsm[32'd4];

assign ap_CS_fsm_state54 = ap_CS_fsm[32'd16];

assign ap_CS_fsm_state6 = ap_CS_fsm[32'd5];

assign ap_CS_fsm_state7 = ap_CS_fsm[32'd6];

assign ap_CS_fsm_state8 = ap_CS_fsm[32'd7];

assign ap_CS_fsm_state9 = ap_CS_fsm[32'd8];

assign ap_block_pp2_stage0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_pp2_stage0_01001 = (((icmp_ln887_12_reg_3298_pp2_iter36_reg == 1'd1) & (dst_data_V_V_full_n == 1'b0) & (ap_enable_reg_pp2_iter37 == 1'b1)) | ((icmp_ln887_12_reg_3298 == 1'd1) & (src_data_V_V_empty_n == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp2_stage0_11001 = (((icmp_ln887_12_reg_3298_pp2_iter36_reg == 1'd1) & (dst_data_V_V_full_n == 1'b0) & (ap_enable_reg_pp2_iter37 == 1'b1)) | ((icmp_ln887_12_reg_3298 == 1'd1) & (src_data_V_V_empty_n == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b1)));
end

always @ (*) begin
    ap_block_pp2_stage0_subdone = (((icmp_ln887_12_reg_3298_pp2_iter36_reg == 1'd1) & (dst_data_V_V_full_n == 1'b0) & (ap_enable_reg_pp2_iter37 == 1'b1)) | ((icmp_ln887_12_reg_3298 == 1'd1) & (src_data_V_V_empty_n == 1'b0) & (ap_enable_reg_pp2_iter1 == 1'b1)));
end

assign ap_block_state16_pp2_stage0_iter0 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state17_pp2_stage0_iter1 = ((icmp_ln887_12_reg_3298 == 1'd1) & (src_data_V_V_empty_n == 1'b0));
end

assign ap_block_state18_pp2_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state19_pp2_stage0_iter3 = ~(1'b1 == 1'b1);

assign ap_block_state20_pp2_stage0_iter4 = ~(1'b1 == 1'b1);

assign ap_block_state21_pp2_stage0_iter5 = ~(1'b1 == 1'b1);

assign ap_block_state22_pp2_stage0_iter6 = ~(1'b1 == 1'b1);

assign ap_block_state23_pp2_stage0_iter7 = ~(1'b1 == 1'b1);

assign ap_block_state24_pp2_stage0_iter8 = ~(1'b1 == 1'b1);

assign ap_block_state25_pp2_stage0_iter9 = ~(1'b1 == 1'b1);

assign ap_block_state26_pp2_stage0_iter10 = ~(1'b1 == 1'b1);

assign ap_block_state27_pp2_stage0_iter11 = ~(1'b1 == 1'b1);

assign ap_block_state28_pp2_stage0_iter12 = ~(1'b1 == 1'b1);

assign ap_block_state29_pp2_stage0_iter13 = ~(1'b1 == 1'b1);

assign ap_block_state30_pp2_stage0_iter14 = ~(1'b1 == 1'b1);

assign ap_block_state31_pp2_stage0_iter15 = ~(1'b1 == 1'b1);

assign ap_block_state32_pp2_stage0_iter16 = ~(1'b1 == 1'b1);

assign ap_block_state33_pp2_stage0_iter17 = ~(1'b1 == 1'b1);

assign ap_block_state34_pp2_stage0_iter18 = ~(1'b1 == 1'b1);

assign ap_block_state35_pp2_stage0_iter19 = ~(1'b1 == 1'b1);

assign ap_block_state36_pp2_stage0_iter20 = ~(1'b1 == 1'b1);

assign ap_block_state37_pp2_stage0_iter21 = ~(1'b1 == 1'b1);

assign ap_block_state38_pp2_stage0_iter22 = ~(1'b1 == 1'b1);

assign ap_block_state39_pp2_stage0_iter23 = ~(1'b1 == 1'b1);

assign ap_block_state40_pp2_stage0_iter24 = ~(1'b1 == 1'b1);

assign ap_block_state41_pp2_stage0_iter25 = ~(1'b1 == 1'b1);

assign ap_block_state42_pp2_stage0_iter26 = ~(1'b1 == 1'b1);

assign ap_block_state43_pp2_stage0_iter27 = ~(1'b1 == 1'b1);

assign ap_block_state44_pp2_stage0_iter28 = ~(1'b1 == 1'b1);

assign ap_block_state45_pp2_stage0_iter29 = ~(1'b1 == 1'b1);

assign ap_block_state46_pp2_stage0_iter30 = ~(1'b1 == 1'b1);

assign ap_block_state47_pp2_stage0_iter31 = ~(1'b1 == 1'b1);

assign ap_block_state48_pp2_stage0_iter32 = ~(1'b1 == 1'b1);

assign ap_block_state49_pp2_stage0_iter33 = ~(1'b1 == 1'b1);

assign ap_block_state50_pp2_stage0_iter34 = ~(1'b1 == 1'b1);

assign ap_block_state51_pp2_stage0_iter35 = ~(1'b1 == 1'b1);

assign ap_block_state52_pp2_stage0_iter36 = ~(1'b1 == 1'b1);

always @ (*) begin
    ap_block_state53_pp2_stage0_iter37 = ((icmp_ln887_12_reg_3298_pp2_iter36_reg == 1'd1) & (dst_data_V_V_full_n == 1'b0));
end

assign ap_enable_pp2 = (ap_idle_pp2 ^ 1'b1);

assign col_V_fu_892_p2 = (t_V_2_reg_413 + 13'd1);

assign dst_data_V_V_din = {{{{{{{{{{{{select_ln45_11_reg_3662}, {select_ln45_10_reg_3657}}, {select_ln45_9_reg_3652}}, {select_ln45_8_reg_3647}}, {select_ln45_7_reg_3642}}, {select_ln45_6_reg_3637}}, {select_ln45_5_reg_3632}}, {select_ln45_4_reg_3627}}, {select_ln45_3_reg_3622}}, {select_ln45_2_reg_3617}}, {select_ln45_1_reg_3612}}, {select_ln45_reg_3607}};

assign grp_fu_1037_p0 = {{sub_ln703_fu_1023_p2}, {6'd0}};

assign grp_fu_1037_p1 = sext_ln1148_reg_3199;

assign grp_fu_1067_p0 = {{sub_ln703_1_fu_1053_p2}, {6'd0}};

assign grp_fu_1067_p1 = sext_ln1148_1_reg_3207;

assign grp_fu_1097_p0 = {{sub_ln703_2_fu_1083_p2}, {6'd0}};

assign grp_fu_1097_p1 = sext_ln1148_2_reg_3215;

assign grp_fu_1127_p0 = {{sub_ln703_3_fu_1113_p2}, {6'd0}};

assign grp_fu_1127_p1 = sext_ln1148_reg_3199;

assign grp_fu_1157_p0 = {{sub_ln703_4_fu_1143_p2}, {6'd0}};

assign grp_fu_1157_p1 = sext_ln1148_1_reg_3207;

assign grp_fu_1187_p0 = {{sub_ln703_5_fu_1173_p2}, {6'd0}};

assign grp_fu_1187_p1 = sext_ln1148_2_reg_3215;

assign grp_fu_1217_p0 = {{sub_ln703_6_fu_1203_p2}, {6'd0}};

assign grp_fu_1217_p1 = sext_ln1148_reg_3199;

assign grp_fu_1247_p0 = {{sub_ln703_7_fu_1233_p2}, {6'd0}};

assign grp_fu_1247_p1 = sext_ln1148_1_reg_3207;

assign grp_fu_1277_p0 = {{sub_ln703_8_fu_1263_p2}, {6'd0}};

assign grp_fu_1277_p1 = sext_ln1148_2_reg_3215;

assign grp_fu_1307_p0 = {{sub_ln703_9_fu_1293_p2}, {6'd0}};

assign grp_fu_1307_p1 = sext_ln1148_reg_3199;

assign grp_fu_1337_p0 = {{sub_ln703_10_fu_1323_p2}, {6'd0}};

assign grp_fu_1337_p1 = sext_ln1148_1_reg_3207;

assign grp_fu_1367_p0 = {{sub_ln703_11_fu_1353_p2}, {6'd0}};

assign grp_fu_1367_p1 = sext_ln1148_2_reg_3215;

assign grp_fu_541_p0 = grp_fu_541_p00;

assign grp_fu_541_p00 = total_reg_3133;

assign grp_fu_541_p1 = 38'd38;

assign grp_fu_547_p0 = grp_fu_547_p00;

assign grp_fu_547_p00 = total_reg_3133;

assign grp_fu_547_p1 = 45'd6362;

assign grp_fu_556_p0 = grp_fu_556_p00;

assign grp_fu_556_p00 = mul_ln1148_reg_3150;

assign grp_fu_556_p1 = 76'd351843720889;

assign grp_fu_565_p0 = grp_fu_565_p00;

assign grp_fu_565_p00 = mul_ln1148_1_reg_3155;

assign grp_fu_565_p1 = 90'd45035996273705;

assign icmp_ln293_fu_571_p2 = ((j_0_reg_346 == 2'd3) ? 1'b1 : 1'b0);

assign icmp_ln45_10_fu_2919_p2 = ((tmp_201_fu_2909_p4 != 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln45_11_fu_2998_p2 = ((tmp_204_fu_2988_p4 != 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln45_1_fu_2208_p2 = ((tmp_174_fu_2198_p4 != 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln45_2_fu_2287_p2 = ((tmp_177_fu_2277_p4 != 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln45_3_fu_2366_p2 = ((tmp_180_fu_2356_p4 != 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln45_4_fu_2445_p2 = ((tmp_183_fu_2435_p4 != 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln45_5_fu_2524_p2 = ((tmp_186_fu_2514_p4 != 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln45_6_fu_2603_p2 = ((tmp_189_fu_2593_p4 != 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln45_7_fu_2682_p2 = ((tmp_192_fu_2672_p4 != 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln45_8_fu_2761_p2 = ((tmp_195_fu_2751_p4 != 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln45_9_fu_2840_p2 = ((tmp_198_fu_2830_p4 != 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln45_fu_2129_p2 = ((tmp_171_fu_2119_p4 != 8'd0) ? 1'b1 : 1'b0);

assign icmp_ln851_12_fu_1482_p2 = ((p_Result_105_1_fu_1472_p4 == 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln851_13_fu_1540_p2 = ((p_Result_105_2_fu_1530_p4 == 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln851_14_fu_1598_p2 = ((p_Result_105_3_fu_1588_p4 == 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln851_15_fu_1656_p2 = ((p_Result_105_4_fu_1646_p4 == 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln851_16_fu_1714_p2 = ((p_Result_105_5_fu_1704_p4 == 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln851_17_fu_1772_p2 = ((p_Result_105_6_fu_1762_p4 == 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln851_18_fu_1830_p2 = ((p_Result_105_7_fu_1820_p4 == 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln851_19_fu_1888_p2 = ((p_Result_105_8_fu_1878_p4 == 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln851_20_fu_1946_p2 = ((p_Result_105_9_fu_1936_p4 == 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln851_21_fu_2004_p2 = ((p_Result_105_s_fu_1994_p4 == 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln851_22_fu_2062_p2 = ((p_Result_105_10_fu_2052_p4 == 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln851_fu_1424_p2 = ((p_Result_2_fu_1414_p4 == 6'd0) ? 1'b1 : 1'b0);

assign icmp_ln883_fu_769_p2 = ((t_V_17_0_reg_381 != 16'd0) ? 1'b1 : 1'b0);

assign icmp_ln887_11_fu_872_p2 = (($signed(zext_ln887_fu_868_p1) < $signed(dst_rows_read)) ? 1'b1 : 1'b0);

assign icmp_ln887_12_fu_887_p2 = ((zext_ln887_1_fu_883_p1 < width_reg_3128) ? 1'b1 : 1'b0);

assign icmp_ln887_fu_674_p2 = ((add_ln1353_fu_668_p2 < zext_ln887_2_reg_3194) ? 1'b1 : 1'b0);

assign icmp_ln895_fu_789_p2 = (($signed(sub_ln1354_fu_783_p2) > $signed(sext_ln895_reg_3251)) ? 1'b1 : 1'b0);

assign j_fu_577_p2 = (j_0_reg_346 + 2'd1);

assign maxValue_0_V_2_fu_832_p2 = ($signed(tmp_107_fu_820_p5) + $signed(24'd16777152));

assign maxmin_diff_0_V_fu_623_p2 = (p_Val2_s_fu_210 - p_Val2_6_fu_214);

assign maxmin_diff_1_V_fu_629_p2 = (p_Val2_7_fu_218 - p_Val2_8_fu_222);

assign maxmin_diff_2_V_fu_635_p2 = (p_Val2_9_fu_226 - p_Val2_10_fu_230);

assign minValue_0_V_2_fu_723_p2 = (tmp_105_fu_711_p5 + 24'd64);

assign p_Result_105_10_fu_2052_p4 = {{sub_ln1118_11_fu_2036_p2[11:6]}};

assign p_Result_105_1_fu_1472_p4 = {{sub_ln1118_1_fu_1456_p2[11:6]}};

assign p_Result_105_2_fu_1530_p4 = {{sub_ln1118_2_fu_1514_p2[11:6]}};

assign p_Result_105_3_fu_1588_p4 = {{sub_ln1118_3_fu_1572_p2[11:6]}};

assign p_Result_105_4_fu_1646_p4 = {{sub_ln1118_4_fu_1630_p2[11:6]}};

assign p_Result_105_5_fu_1704_p4 = {{sub_ln1118_5_fu_1688_p2[11:6]}};

assign p_Result_105_6_fu_1762_p4 = {{sub_ln1118_6_fu_1746_p2[11:6]}};

assign p_Result_105_7_fu_1820_p4 = {{sub_ln1118_7_fu_1804_p2[11:6]}};

assign p_Result_105_8_fu_1878_p4 = {{sub_ln1118_8_fu_1862_p2[11:6]}};

assign p_Result_105_9_fu_1936_p4 = {{sub_ln1118_9_fu_1920_p2[11:6]}};

assign p_Result_105_s_fu_1994_p4 = {{sub_ln1118_10_fu_1978_p2[11:6]}};

assign p_Result_2_fu_1414_p4 = {{sub_ln1118_fu_1398_p2[11:6]}};

assign row_V_fu_877_p2 = (t_V_reg_402 + 13'd1);

assign select_ln399_10_fu_2901_p3 = ((tmp_200_fu_2893_p3[0:0] === 1'b1) ? 18'd0 : trunc_ln647_22_fu_2889_p1);

assign select_ln399_11_fu_2980_p3 = ((tmp_203_fu_2972_p3[0:0] === 1'b1) ? 18'd0 : trunc_ln647_23_fu_2968_p1);

assign select_ln399_1_fu_2190_p3 = ((tmp_173_fu_2182_p3[0:0] === 1'b1) ? 18'd0 : trunc_ln647_13_fu_2178_p1);

assign select_ln399_2_fu_2269_p3 = ((tmp_176_fu_2261_p3[0:0] === 1'b1) ? 18'd0 : trunc_ln647_14_fu_2257_p1);

assign select_ln399_3_fu_2348_p3 = ((tmp_179_fu_2340_p3[0:0] === 1'b1) ? 18'd0 : trunc_ln647_15_fu_2336_p1);

assign select_ln399_4_fu_2427_p3 = ((tmp_182_fu_2419_p3[0:0] === 1'b1) ? 18'd0 : trunc_ln647_16_fu_2415_p1);

assign select_ln399_5_fu_2506_p3 = ((tmp_185_fu_2498_p3[0:0] === 1'b1) ? 18'd0 : trunc_ln647_17_fu_2494_p1);

assign select_ln399_6_fu_2585_p3 = ((tmp_188_fu_2577_p3[0:0] === 1'b1) ? 18'd0 : trunc_ln647_18_fu_2573_p1);

assign select_ln399_7_fu_2664_p3 = ((tmp_191_fu_2656_p3[0:0] === 1'b1) ? 18'd0 : trunc_ln647_19_fu_2652_p1);

assign select_ln399_8_fu_2743_p3 = ((tmp_194_fu_2735_p3[0:0] === 1'b1) ? 18'd0 : trunc_ln647_20_fu_2731_p1);

assign select_ln399_9_fu_2822_p3 = ((tmp_197_fu_2814_p3[0:0] === 1'b1) ? 18'd0 : trunc_ln647_21_fu_2810_p1);

assign select_ln399_fu_2111_p3 = ((tmp_170_fu_2103_p3[0:0] === 1'b1) ? 18'd0 : trunc_ln647_fu_2099_p1);

assign select_ln45_10_fu_2929_p3 = ((icmp_ln45_10_fu_2919_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln45_10_fu_2925_p1);

assign select_ln45_11_fu_3008_p3 = ((icmp_ln45_11_fu_2998_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln45_11_fu_3004_p1);

assign select_ln45_1_fu_2218_p3 = ((icmp_ln45_1_fu_2208_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln45_1_fu_2214_p1);

assign select_ln45_2_fu_2297_p3 = ((icmp_ln45_2_fu_2287_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln45_2_fu_2293_p1);

assign select_ln45_3_fu_2376_p3 = ((icmp_ln45_3_fu_2366_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln45_3_fu_2372_p1);

assign select_ln45_4_fu_2455_p3 = ((icmp_ln45_4_fu_2445_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln45_4_fu_2451_p1);

assign select_ln45_5_fu_2534_p3 = ((icmp_ln45_5_fu_2524_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln45_5_fu_2530_p1);

assign select_ln45_6_fu_2613_p3 = ((icmp_ln45_6_fu_2603_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln45_6_fu_2609_p1);

assign select_ln45_7_fu_2692_p3 = ((icmp_ln45_7_fu_2682_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln45_7_fu_2688_p1);

assign select_ln45_8_fu_2771_p3 = ((icmp_ln45_8_fu_2761_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln45_8_fu_2767_p1);

assign select_ln45_9_fu_2850_p3 = ((icmp_ln45_9_fu_2840_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln45_9_fu_2846_p1);

assign select_ln45_fu_2139_p3 = ((icmp_ln45_fu_2129_p2[0:0] === 1'b1) ? 10'd1023 : trunc_ln45_fu_2135_p1);

assign select_ln850_12_fu_2170_p3 = ((tmp_172_fu_2150_p3[0:0] === 1'b1) ? select_ln851_12_fu_2163_p3 : sext_ln835_1_fu_2147_p1);

assign select_ln850_13_fu_2249_p3 = ((tmp_175_fu_2229_p3[0:0] === 1'b1) ? select_ln851_13_fu_2242_p3 : sext_ln835_2_fu_2226_p1);

assign select_ln850_14_fu_2328_p3 = ((tmp_178_fu_2308_p3[0:0] === 1'b1) ? select_ln851_14_fu_2321_p3 : sext_ln835_3_fu_2305_p1);

assign select_ln850_15_fu_2407_p3 = ((tmp_181_fu_2387_p3[0:0] === 1'b1) ? select_ln851_15_fu_2400_p3 : sext_ln835_4_fu_2384_p1);

assign select_ln850_16_fu_2486_p3 = ((tmp_184_fu_2466_p3[0:0] === 1'b1) ? select_ln851_16_fu_2479_p3 : sext_ln835_5_fu_2463_p1);

assign select_ln850_17_fu_2565_p3 = ((tmp_187_fu_2545_p3[0:0] === 1'b1) ? select_ln851_17_fu_2558_p3 : sext_ln835_6_fu_2542_p1);

assign select_ln850_18_fu_2644_p3 = ((tmp_190_fu_2624_p3[0:0] === 1'b1) ? select_ln851_18_fu_2637_p3 : sext_ln835_7_fu_2621_p1);

assign select_ln850_19_fu_2723_p3 = ((tmp_193_fu_2703_p3[0:0] === 1'b1) ? select_ln851_19_fu_2716_p3 : sext_ln835_8_fu_2700_p1);

assign select_ln850_20_fu_2802_p3 = ((tmp_196_fu_2782_p3[0:0] === 1'b1) ? select_ln851_20_fu_2795_p3 : sext_ln835_9_fu_2779_p1);

assign select_ln850_21_fu_2881_p3 = ((tmp_199_fu_2861_p3[0:0] === 1'b1) ? select_ln851_21_fu_2874_p3 : sext_ln835_10_fu_2858_p1);

assign select_ln850_22_fu_2960_p3 = ((tmp_202_fu_2940_p3[0:0] === 1'b1) ? select_ln851_22_fu_2953_p3 : sext_ln835_11_fu_2937_p1);

assign select_ln850_fu_2091_p3 = ((tmp_169_fu_2071_p3[0:0] === 1'b1) ? select_ln851_fu_2084_p3 : sext_ln835_fu_2068_p1);

assign select_ln851_12_fu_2163_p3 = ((icmp_ln851_12_reg_3452[0:0] === 1'b1) ? sext_ln835_1_fu_2147_p1 : add_ln700_30_fu_2157_p2);

assign select_ln851_13_fu_2242_p3 = ((icmp_ln851_13_reg_3467[0:0] === 1'b1) ? sext_ln835_2_fu_2226_p1 : add_ln700_31_fu_2236_p2);

assign select_ln851_14_fu_2321_p3 = ((icmp_ln851_14_reg_3482[0:0] === 1'b1) ? sext_ln835_3_fu_2305_p1 : add_ln700_32_fu_2315_p2);

assign select_ln851_15_fu_2400_p3 = ((icmp_ln851_15_reg_3497[0:0] === 1'b1) ? sext_ln835_4_fu_2384_p1 : add_ln700_33_fu_2394_p2);

assign select_ln851_16_fu_2479_p3 = ((icmp_ln851_16_reg_3512[0:0] === 1'b1) ? sext_ln835_5_fu_2463_p1 : add_ln700_34_fu_2473_p2);

assign select_ln851_17_fu_2558_p3 = ((icmp_ln851_17_reg_3527[0:0] === 1'b1) ? sext_ln835_6_fu_2542_p1 : add_ln700_35_fu_2552_p2);

assign select_ln851_18_fu_2637_p3 = ((icmp_ln851_18_reg_3542[0:0] === 1'b1) ? sext_ln835_7_fu_2621_p1 : add_ln700_36_fu_2631_p2);

assign select_ln851_19_fu_2716_p3 = ((icmp_ln851_19_reg_3557[0:0] === 1'b1) ? sext_ln835_8_fu_2700_p1 : add_ln700_37_fu_2710_p2);

assign select_ln851_20_fu_2795_p3 = ((icmp_ln851_20_reg_3572[0:0] === 1'b1) ? sext_ln835_9_fu_2779_p1 : add_ln700_38_fu_2789_p2);

assign select_ln851_21_fu_2874_p3 = ((icmp_ln851_21_reg_3587[0:0] === 1'b1) ? sext_ln835_10_fu_2858_p1 : add_ln700_39_fu_2868_p2);

assign select_ln851_22_fu_2953_p3 = ((icmp_ln851_22_reg_3602[0:0] === 1'b1) ? sext_ln835_11_fu_2937_p1 : add_ln700_40_fu_2947_p2);

assign select_ln851_fu_2084_p3 = ((icmp_ln851_reg_3437[0:0] === 1'b1) ? sext_ln835_fu_2068_p1 : add_ln700_29_fu_2078_p2);

assign sext_ln1118_10_fu_1674_p1 = $signed(shl_ln1118_s_fu_1666_p3);

assign sext_ln1118_11_fu_1684_p1 = $signed(shl_ln1118_9_fu_1678_p2);

assign sext_ln1118_12_fu_1732_p1 = $signed(shl_ln1118_10_fu_1724_p3);

assign sext_ln1118_13_fu_1742_p1 = $signed(shl_ln1118_11_fu_1736_p2);

assign sext_ln1118_14_fu_1790_p1 = $signed(shl_ln1118_12_fu_1782_p3);

assign sext_ln1118_15_fu_1800_p1 = $signed(shl_ln1118_13_fu_1794_p2);

assign sext_ln1118_16_fu_1848_p1 = $signed(shl_ln1118_14_fu_1840_p3);

assign sext_ln1118_17_fu_1858_p1 = $signed(shl_ln1118_15_fu_1852_p2);

assign sext_ln1118_18_fu_1906_p1 = $signed(shl_ln1118_16_fu_1898_p3);

assign sext_ln1118_19_fu_1916_p1 = $signed(shl_ln1118_17_fu_1910_p2);

assign sext_ln1118_1_fu_1394_p1 = $signed(shl_ln1118_fu_1388_p2);

assign sext_ln1118_20_fu_1964_p1 = $signed(shl_ln1118_18_fu_1956_p3);

assign sext_ln1118_21_fu_1974_p1 = $signed(shl_ln1118_19_fu_1968_p2);

assign sext_ln1118_22_fu_2022_p1 = $signed(shl_ln1118_20_fu_2014_p3);

assign sext_ln1118_23_fu_2032_p1 = $signed(shl_ln1118_21_fu_2026_p2);

assign sext_ln1118_2_fu_1442_p1 = $signed(shl_ln1118_2_fu_1434_p3);

assign sext_ln1118_3_fu_1452_p1 = $signed(shl_ln1118_1_fu_1446_p2);

assign sext_ln1118_4_fu_1500_p1 = $signed(shl_ln1118_4_fu_1492_p3);

assign sext_ln1118_5_fu_1510_p1 = $signed(shl_ln1118_3_fu_1504_p2);

assign sext_ln1118_6_fu_1558_p1 = $signed(shl_ln1118_6_fu_1550_p3);

assign sext_ln1118_7_fu_1568_p1 = $signed(shl_ln1118_5_fu_1562_p2);

assign sext_ln1118_8_fu_1616_p1 = $signed(shl_ln1118_8_fu_1608_p3);

assign sext_ln1118_9_fu_1626_p1 = $signed(shl_ln1118_7_fu_1620_p2);

assign sext_ln1118_fu_1384_p1 = $signed(shl_ln3_fu_1376_p3);

assign sext_ln1148_1_fu_645_p1 = $signed(maxmin_diff_1_V_fu_629_p2);

assign sext_ln1148_2_fu_649_p1 = $signed(maxmin_diff_2_V_fu_635_p2);

assign sext_ln1148_fu_641_p1 = $signed(maxmin_diff_0_V_fu_623_p2);

assign sext_ln835_10_fu_2858_p1 = $signed(tmp_37_reg_3582);

assign sext_ln835_11_fu_2937_p1 = $signed(tmp_38_reg_3597);

assign sext_ln835_1_fu_2147_p1 = $signed(tmp_28_reg_3447);

assign sext_ln835_2_fu_2226_p1 = $signed(tmp_29_reg_3462);

assign sext_ln835_3_fu_2305_p1 = $signed(tmp_30_reg_3477);

assign sext_ln835_4_fu_2384_p1 = $signed(tmp_31_reg_3492);

assign sext_ln835_5_fu_2463_p1 = $signed(tmp_32_reg_3507);

assign sext_ln835_6_fu_2542_p1 = $signed(tmp_33_reg_3522);

assign sext_ln835_7_fu_2621_p1 = $signed(tmp_34_reg_3537);

assign sext_ln835_8_fu_2700_p1 = $signed(tmp_35_reg_3552);

assign sext_ln835_9_fu_2779_p1 = $signed(tmp_36_reg_3567);

assign sext_ln835_fu_2068_p1 = $signed(tmp_27_reg_3432);

assign sext_ln895_fu_759_p1 = $signed(trunc_ln555_4_reg_3189);

assign shl_ln1118_10_fu_1724_p3 = {{trunc_ln1118_6_fu_1720_p1}, {16'd0}};

assign shl_ln1118_11_fu_1736_p2 = grp_fu_1217_p2 << 30'd6;

assign shl_ln1118_12_fu_1782_p3 = {{trunc_ln1118_7_fu_1778_p1}, {16'd0}};

assign shl_ln1118_13_fu_1794_p2 = grp_fu_1247_p2 << 30'd6;

assign shl_ln1118_14_fu_1840_p3 = {{trunc_ln1118_8_fu_1836_p1}, {16'd0}};

assign shl_ln1118_15_fu_1852_p2 = grp_fu_1277_p2 << 30'd6;

assign shl_ln1118_16_fu_1898_p3 = {{trunc_ln1118_9_fu_1894_p1}, {16'd0}};

assign shl_ln1118_17_fu_1910_p2 = grp_fu_1307_p2 << 30'd6;

assign shl_ln1118_18_fu_1956_p3 = {{trunc_ln1118_10_fu_1952_p1}, {16'd0}};

assign shl_ln1118_19_fu_1968_p2 = grp_fu_1337_p2 << 30'd6;

assign shl_ln1118_1_fu_1446_p2 = grp_fu_1067_p2 << 30'd6;

assign shl_ln1118_20_fu_2014_p3 = {{trunc_ln1118_11_fu_2010_p1}, {16'd0}};

assign shl_ln1118_21_fu_2026_p2 = grp_fu_1367_p2 << 30'd6;

assign shl_ln1118_2_fu_1434_p3 = {{trunc_ln1118_1_fu_1430_p1}, {16'd0}};

assign shl_ln1118_3_fu_1504_p2 = grp_fu_1097_p2 << 30'd6;

assign shl_ln1118_4_fu_1492_p3 = {{trunc_ln1118_2_fu_1488_p1}, {16'd0}};

assign shl_ln1118_5_fu_1562_p2 = grp_fu_1127_p2 << 30'd6;

assign shl_ln1118_6_fu_1550_p3 = {{trunc_ln1118_3_fu_1546_p1}, {16'd0}};

assign shl_ln1118_7_fu_1620_p2 = grp_fu_1157_p2 << 30'd6;

assign shl_ln1118_8_fu_1608_p3 = {{trunc_ln1118_4_fu_1604_p1}, {16'd0}};

assign shl_ln1118_9_fu_1678_p2 = grp_fu_1187_p2 << 30'd6;

assign shl_ln1118_fu_1388_p2 = grp_fu_1037_p2 << 30'd6;

assign shl_ln1118_s_fu_1666_p3 = {{trunc_ln1118_5_fu_1662_p1}, {16'd0}};

assign shl_ln3_fu_1376_p3 = {{trunc_ln1118_fu_1372_p1}, {16'd0}};

assign shl_ln703_10_fu_1342_p3 = {{tmp_96_reg_3362}, {6'd0}};

assign shl_ln703_1_fu_1042_p3 = {{tmp_66_reg_3312}, {6'd0}};

assign shl_ln703_2_fu_1072_p3 = {{tmp_69_reg_3317}, {6'd0}};

assign shl_ln703_3_fu_1102_p3 = {{tmp_72_reg_3322}, {6'd0}};

assign shl_ln703_4_fu_1132_p3 = {{tmp_75_reg_3327}, {6'd0}};

assign shl_ln703_5_fu_1162_p3 = {{tmp_78_reg_3332}, {6'd0}};

assign shl_ln703_6_fu_1192_p3 = {{tmp_81_reg_3337}, {6'd0}};

assign shl_ln703_7_fu_1222_p3 = {{tmp_84_reg_3342}, {6'd0}};

assign shl_ln703_8_fu_1252_p3 = {{tmp_87_reg_3347}, {6'd0}};

assign shl_ln703_9_fu_1282_p3 = {{tmp_90_reg_3352}, {6'd0}};

assign shl_ln703_s_fu_1312_p3 = {{tmp_93_reg_3357}, {6'd0}};

assign shl_ln_fu_1012_p3 = {{trunc_ln703_reg_3307}, {6'd0}};

assign sub_ln1118_10_fu_1978_p2 = ($signed(sext_ln1118_20_fu_1964_p1) - $signed(sext_ln1118_21_fu_1974_p1));

assign sub_ln1118_11_fu_2036_p2 = ($signed(sext_ln1118_22_fu_2022_p1) - $signed(sext_ln1118_23_fu_2032_p1));

assign sub_ln1118_1_fu_1456_p2 = ($signed(sext_ln1118_2_fu_1442_p1) - $signed(sext_ln1118_3_fu_1452_p1));

assign sub_ln1118_2_fu_1514_p2 = ($signed(sext_ln1118_4_fu_1500_p1) - $signed(sext_ln1118_5_fu_1510_p1));

assign sub_ln1118_3_fu_1572_p2 = ($signed(sext_ln1118_6_fu_1558_p1) - $signed(sext_ln1118_7_fu_1568_p1));

assign sub_ln1118_4_fu_1630_p2 = ($signed(sext_ln1118_8_fu_1616_p1) - $signed(sext_ln1118_9_fu_1626_p1));

assign sub_ln1118_5_fu_1688_p2 = ($signed(sext_ln1118_10_fu_1674_p1) - $signed(sext_ln1118_11_fu_1684_p1));

assign sub_ln1118_6_fu_1746_p2 = ($signed(sext_ln1118_12_fu_1732_p1) - $signed(sext_ln1118_13_fu_1742_p1));

assign sub_ln1118_7_fu_1804_p2 = ($signed(sext_ln1118_14_fu_1790_p1) - $signed(sext_ln1118_15_fu_1800_p1));

assign sub_ln1118_8_fu_1862_p2 = ($signed(sext_ln1118_16_fu_1848_p1) - $signed(sext_ln1118_17_fu_1858_p1));

assign sub_ln1118_9_fu_1920_p2 = ($signed(sext_ln1118_18_fu_1906_p1) - $signed(sext_ln1118_19_fu_1916_p1));

assign sub_ln1118_fu_1398_p2 = ($signed(sext_ln1118_fu_1384_p1) - $signed(sext_ln1118_1_fu_1394_p1));

assign sub_ln1354_fu_783_p2 = (zext_ln215_5_fu_775_p1 - zext_ln215_6_fu_779_p1);

assign sub_ln701_fu_805_p2 = (p_01348_1_0_reg_393 - grp_fu_445_p5);

assign sub_ln703_10_fu_1323_p2 = (zext_ln703_10_fu_1319_p1 - minValue_1_V_fu_238);

assign sub_ln703_11_fu_1353_p2 = (zext_ln703_11_fu_1349_p1 - minValue_2_V_fu_242);

assign sub_ln703_1_fu_1053_p2 = (zext_ln703_1_fu_1049_p1 - minValue_1_V_fu_238);

assign sub_ln703_2_fu_1083_p2 = (zext_ln703_2_fu_1079_p1 - minValue_2_V_fu_242);

assign sub_ln703_3_fu_1113_p2 = (zext_ln703_3_fu_1109_p1 - minValue_0_V_fu_234);

assign sub_ln703_4_fu_1143_p2 = (zext_ln703_4_fu_1139_p1 - minValue_1_V_fu_238);

assign sub_ln703_5_fu_1173_p2 = (zext_ln703_5_fu_1169_p1 - minValue_2_V_fu_242);

assign sub_ln703_6_fu_1203_p2 = (zext_ln703_6_fu_1199_p1 - minValue_0_V_fu_234);

assign sub_ln703_7_fu_1233_p2 = (zext_ln703_7_fu_1229_p1 - minValue_1_V_fu_238);

assign sub_ln703_8_fu_1263_p2 = (zext_ln703_8_fu_1259_p1 - minValue_2_V_fu_242);

assign sub_ln703_9_fu_1293_p2 = (zext_ln703_9_fu_1289_p1 - minValue_0_V_fu_234);

assign sub_ln703_fu_1023_p2 = (zext_ln703_fu_1019_p1 - minValue_0_V_fu_234);

assign tmp_167_fu_583_p4 = {{mul_ln1148_2_reg_3170[75:51]}};

assign tmp_168_fu_679_p3 = t_V_16_0_reg_358[32'd10];

assign tmp_169_fu_2071_p3 = sub_ln1118_reg_3427[32'd29];

assign tmp_170_fu_2103_p3 = select_ln850_fu_2091_p3[32'd18];

assign tmp_171_fu_2119_p4 = {{select_ln399_fu_2111_p3[17:10]}};

assign tmp_172_fu_2150_p3 = sub_ln1118_1_reg_3442[32'd29];

assign tmp_173_fu_2182_p3 = select_ln850_12_fu_2170_p3[32'd18];

assign tmp_174_fu_2198_p4 = {{select_ln399_1_fu_2190_p3[17:10]}};

assign tmp_175_fu_2229_p3 = sub_ln1118_2_reg_3457[32'd29];

assign tmp_176_fu_2261_p3 = select_ln850_13_fu_2249_p3[32'd18];

assign tmp_177_fu_2277_p4 = {{select_ln399_2_fu_2269_p3[17:10]}};

assign tmp_178_fu_2308_p3 = sub_ln1118_3_reg_3472[32'd29];

assign tmp_179_fu_2340_p3 = select_ln850_14_fu_2328_p3[32'd18];

assign tmp_180_fu_2356_p4 = {{select_ln399_3_fu_2348_p3[17:10]}};

assign tmp_181_fu_2387_p3 = sub_ln1118_4_reg_3487[32'd29];

assign tmp_182_fu_2419_p3 = select_ln850_15_fu_2407_p3[32'd18];

assign tmp_183_fu_2435_p4 = {{select_ln399_4_fu_2427_p3[17:10]}};

assign tmp_184_fu_2466_p3 = sub_ln1118_5_reg_3502[32'd29];

assign tmp_185_fu_2498_p3 = select_ln850_16_fu_2486_p3[32'd18];

assign tmp_186_fu_2514_p4 = {{select_ln399_5_fu_2506_p3[17:10]}};

assign tmp_187_fu_2545_p3 = sub_ln1118_6_reg_3517[32'd29];

assign tmp_188_fu_2577_p3 = select_ln850_17_fu_2565_p3[32'd18];

assign tmp_189_fu_2593_p4 = {{select_ln399_6_fu_2585_p3[17:10]}};

assign tmp_190_fu_2624_p3 = sub_ln1118_7_reg_3532[32'd29];

assign tmp_191_fu_2656_p3 = select_ln850_18_fu_2644_p3[32'd18];

assign tmp_192_fu_2672_p4 = {{select_ln399_7_fu_2664_p3[17:10]}};

assign tmp_193_fu_2703_p3 = sub_ln1118_8_reg_3547[32'd29];

assign tmp_194_fu_2735_p3 = select_ln850_19_fu_2723_p3[32'd18];

assign tmp_195_fu_2751_p4 = {{select_ln399_8_fu_2743_p3[17:10]}};

assign tmp_196_fu_2782_p3 = sub_ln1118_9_reg_3562[32'd29];

assign tmp_197_fu_2814_p3 = select_ln850_20_fu_2802_p3[32'd18];

assign tmp_198_fu_2830_p4 = {{select_ln399_9_fu_2822_p3[17:10]}};

assign tmp_199_fu_2861_p3 = sub_ln1118_10_reg_3577[32'd29];

assign tmp_200_fu_2893_p3 = select_ln850_21_fu_2881_p3[32'd18];

assign tmp_201_fu_2909_p4 = {{select_ln399_10_fu_2901_p3[17:10]}};

assign tmp_202_fu_2940_p3 = sub_ln1118_11_reg_3592[32'd29];

assign tmp_203_fu_2972_p3 = select_ln850_22_fu_2960_p3[32'd18];

assign tmp_204_fu_2988_p4 = {{select_ln399_11_fu_2980_p3[17:10]}};

assign total_fu_3033_p0 = total_fu_3033_p00;

assign total_fu_3033_p00 = dst_rows_read;

assign total_fu_3033_p1 = total_fu_3033_p10;

assign total_fu_3033_p10 = dst_cols_read;

assign trunc_ln1118_10_fu_1952_p1 = grp_fu_1337_p2[23:0];

assign trunc_ln1118_11_fu_2010_p1 = grp_fu_1367_p2[23:0];

assign trunc_ln1118_1_fu_1430_p1 = grp_fu_1067_p2[23:0];

assign trunc_ln1118_2_fu_1488_p1 = grp_fu_1097_p2[23:0];

assign trunc_ln1118_3_fu_1546_p1 = grp_fu_1127_p2[23:0];

assign trunc_ln1118_4_fu_1604_p1 = grp_fu_1157_p2[23:0];

assign trunc_ln1118_5_fu_1662_p1 = grp_fu_1187_p2[23:0];

assign trunc_ln1118_6_fu_1720_p1 = grp_fu_1217_p2[23:0];

assign trunc_ln1118_7_fu_1778_p1 = grp_fu_1247_p2[23:0];

assign trunc_ln1118_8_fu_1836_p1 = grp_fu_1277_p2[23:0];

assign trunc_ln1118_9_fu_1894_p1 = grp_fu_1307_p2[23:0];

assign trunc_ln1118_fu_1372_p1 = grp_fu_1037_p2[23:0];

assign trunc_ln45_10_fu_2925_p1 = select_ln399_10_fu_2901_p3[9:0];

assign trunc_ln45_11_fu_3004_p1 = select_ln399_11_fu_2980_p3[9:0];

assign trunc_ln45_1_fu_2214_p1 = select_ln399_1_fu_2190_p3[9:0];

assign trunc_ln45_2_fu_2293_p1 = select_ln399_2_fu_2269_p3[9:0];

assign trunc_ln45_3_fu_2372_p1 = select_ln399_3_fu_2348_p3[9:0];

assign trunc_ln45_4_fu_2451_p1 = select_ln399_4_fu_2427_p3[9:0];

assign trunc_ln45_5_fu_2530_p1 = select_ln399_5_fu_2506_p3[9:0];

assign trunc_ln45_6_fu_2609_p1 = select_ln399_6_fu_2585_p3[9:0];

assign trunc_ln45_7_fu_2688_p1 = select_ln399_7_fu_2664_p3[9:0];

assign trunc_ln45_8_fu_2767_p1 = select_ln399_8_fu_2743_p3[9:0];

assign trunc_ln45_9_fu_2846_p1 = select_ln399_9_fu_2822_p3[9:0];

assign trunc_ln45_fu_2135_p1 = select_ln399_fu_2111_p3[9:0];

assign trunc_ln647_13_fu_2178_p1 = select_ln850_12_fu_2170_p3[17:0];

assign trunc_ln647_14_fu_2257_p1 = select_ln850_13_fu_2249_p3[17:0];

assign trunc_ln647_15_fu_2336_p1 = select_ln850_14_fu_2328_p3[17:0];

assign trunc_ln647_16_fu_2415_p1 = select_ln850_15_fu_2407_p3[17:0];

assign trunc_ln647_17_fu_2494_p1 = select_ln850_16_fu_2486_p3[17:0];

assign trunc_ln647_18_fu_2573_p1 = select_ln850_17_fu_2565_p3[17:0];

assign trunc_ln647_19_fu_2652_p1 = select_ln850_18_fu_2644_p3[17:0];

assign trunc_ln647_20_fu_2731_p1 = select_ln850_19_fu_2723_p3[17:0];

assign trunc_ln647_21_fu_2810_p1 = select_ln850_20_fu_2802_p3[17:0];

assign trunc_ln647_22_fu_2889_p1 = select_ln850_21_fu_2881_p3[17:0];

assign trunc_ln647_23_fu_2968_p1 = select_ln850_22_fu_2960_p3[17:0];

assign trunc_ln647_fu_2099_p1 = select_ln850_fu_2091_p3[17:0];

assign trunc_ln703_fu_898_p1 = src_data_V_V_dout[9:0];

assign xor_ln887_fu_687_p2 = (tmp_168_fu_679_p3 ^ 1'd1);

assign zext_ln215_4_fu_664_p1 = grp_fu_445_p5;

assign zext_ln215_5_fu_775_p1 = p_01348_1_0_reg_393;

assign zext_ln215_6_fu_779_p1 = grp_fu_445_p5;

assign zext_ln215_fu_660_p1 = p_01629_1_0_reg_370;

assign zext_ln544_2_fu_762_p1 = t_V_17_0_reg_381;

assign zext_ln544_fu_653_p1 = t_V_16_0_reg_358;

assign zext_ln703_10_fu_1319_p1 = shl_ln703_s_fu_1312_p3;

assign zext_ln703_11_fu_1349_p1 = shl_ln703_10_fu_1342_p3;

assign zext_ln703_1_fu_1049_p1 = shl_ln703_1_fu_1042_p3;

assign zext_ln703_2_fu_1079_p1 = shl_ln703_2_fu_1072_p3;

assign zext_ln703_3_fu_1109_p1 = shl_ln703_3_fu_1102_p3;

assign zext_ln703_4_fu_1139_p1 = shl_ln703_4_fu_1132_p3;

assign zext_ln703_5_fu_1169_p1 = shl_ln703_5_fu_1162_p3;

assign zext_ln703_6_fu_1199_p1 = shl_ln703_6_fu_1192_p3;

assign zext_ln703_7_fu_1229_p1 = shl_ln703_7_fu_1222_p3;

assign zext_ln703_8_fu_1259_p1 = shl_ln703_8_fu_1252_p3;

assign zext_ln703_9_fu_1289_p1 = shl_ln703_9_fu_1282_p3;

assign zext_ln703_fu_1019_p1 = shl_ln_fu_1012_p3;

assign zext_ln887_1_fu_883_p1 = t_V_2_reg_413;

assign zext_ln887_2_fu_601_p1 = tmp_167_fu_583_p4;

assign zext_ln887_fu_868_p1 = t_V_reg_402;

always @ (posedge ap_clk) begin
    zext_ln887_2_reg_3194[32:25] <= 8'b00000000;
    sub_ln1118_reg_3427[5:0] <= 6'b000000;
    sub_ln1118_1_reg_3442[5:0] <= 6'b000000;
    sub_ln1118_2_reg_3457[5:0] <= 6'b000000;
    sub_ln1118_3_reg_3472[5:0] <= 6'b000000;
    sub_ln1118_4_reg_3487[5:0] <= 6'b000000;
    sub_ln1118_5_reg_3502[5:0] <= 6'b000000;
    sub_ln1118_6_reg_3517[5:0] <= 6'b000000;
    sub_ln1118_7_reg_3532[5:0] <= 6'b000000;
    sub_ln1118_8_reg_3547[5:0] <= 6'b000000;
    sub_ln1118_9_reg_3562[5:0] <= 6'b000000;
    sub_ln1118_10_reg_3577[5:0] <= 6'b000000;
    sub_ln1118_11_reg_3592[5:0] <= 6'b000000;
end

endmodule //AWBNormalizationkern
