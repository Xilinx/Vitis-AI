-- ==============================================================
-- RTL generated by Vivado(TM) HLS - High-Level Synthesis from C, C++ and OpenCL
-- Version: 2020.2
-- Copyright (C) 1986-2020 Xilinx, Inc. All Rights Reserved.
-- 
-- ===========================================================

library IEEE;
use IEEE.std_logic_1164.all;
use IEEE.numeric_std.all;

entity g_kernel is
port (
    ap_clk : IN STD_LOGIC;
    ap_rst : IN STD_LOGIC;
    imgblock_0_0_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    imgblock_0_1_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    imgblock_0_2_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    imgblock_0_3_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    imgblock_0_4_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    imgblock_0_5_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    imgblock_0_6_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    imgblock_0_7_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    imgblock_0_8_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    imgblock_0_9_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    imgblock_1_0_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    imgblock_1_1_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    imgblock_1_2_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    imgblock_1_3_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    imgblock_1_4_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    imgblock_1_5_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    imgblock_1_6_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    imgblock_1_7_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    imgblock_1_8_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    imgblock_1_9_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    imgblock_2_0_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    imgblock_2_1_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    imgblock_2_2_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    imgblock_2_3_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    imgblock_2_4_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    imgblock_2_5_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    imgblock_2_6_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    imgblock_2_7_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    imgblock_2_8_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    imgblock_2_9_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    imgblock_3_0_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    imgblock_3_1_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    imgblock_3_2_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    imgblock_3_3_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    imgblock_3_4_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    imgblock_3_5_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    imgblock_3_6_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    imgblock_3_7_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    imgblock_3_8_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    imgblock_3_9_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    imgblock_4_0_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    imgblock_4_1_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    imgblock_4_2_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    imgblock_4_3_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    imgblock_4_4_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    imgblock_4_5_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    imgblock_4_6_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    imgblock_4_7_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    imgblock_4_8_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    imgblock_4_9_V_read : IN STD_LOGIC_VECTOR (9 downto 0);
    loop_r : IN STD_LOGIC_VECTOR (1 downto 0);
    ap_return : OUT STD_LOGIC_VECTOR (13 downto 0);
    ap_ce : IN STD_LOGIC );
end;


architecture behav of g_kernel is 
    constant ap_const_logic_1 : STD_LOGIC := '1';
    constant ap_const_boolean_1 : BOOLEAN := true;
    constant ap_const_boolean_0 : BOOLEAN := false;
    constant ap_const_lv3_2 : STD_LOGIC_VECTOR (2 downto 0) := "010";
    constant ap_const_lv1_1 : STD_LOGIC_VECTOR (0 downto 0) := "1";
    constant ap_const_lv3_1 : STD_LOGIC_VECTOR (2 downto 0) := "001";
    constant ap_const_lv3_3 : STD_LOGIC_VECTOR (2 downto 0) := "011";
    constant ap_const_lv13_0 : STD_LOGIC_VECTOR (12 downto 0) := "0000000000000";
    constant ap_const_lv1_0 : STD_LOGIC_VECTOR (0 downto 0) := "0";
    constant ap_const_lv2_0 : STD_LOGIC_VECTOR (1 downto 0) := "00";
    constant ap_const_lv32_E : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000001110";
    constant ap_const_lv15_0 : STD_LOGIC_VECTOR (14 downto 0) := "000000000000000";
    constant ap_const_lv32_3 : STD_LOGIC_VECTOR (31 downto 0) := "00000000000000000000000000000011";
    constant ap_const_lv14_0 : STD_LOGIC_VECTOR (13 downto 0) := "00000000000000";
    constant ap_const_lv15_7FF9 : STD_LOGIC_VECTOR (14 downto 0) := "111111111111001";
    constant ap_const_logic_0 : STD_LOGIC := '0';

    signal ret_V_12_fu_618_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_V_12_reg_941 : STD_LOGIC_VECTOR (11 downto 0);
    signal ap_block_state1_pp0_stage0_iter0 : BOOLEAN;
    signal ap_block_state2_pp0_stage0_iter1 : BOOLEAN;
    signal ap_block_state3_pp0_stage0_iter2 : BOOLEAN;
    signal ap_block_pp0_stage0_11001 : BOOLEAN;
    signal ret_V_15_fu_784_p2 : STD_LOGIC_VECTOR (11 downto 0);
    signal ret_V_15_reg_946 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_72_fu_790_p12 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_72_reg_951 : STD_LOGIC_VECTOR (9 downto 0);
    signal res_fu_861_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal res_reg_956 : STD_LOGIC_VECTOR (14 downto 0);
    signal ap_block_pp0_stage0 : BOOLEAN;
    signal zext_ln215_fu_452_p1 : STD_LOGIC_VECTOR (2 downto 0);
    signal add_ln215_fu_456_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal zext_ln215_39_fu_462_p1 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_s_fu_466_p12 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_66_fu_496_p11 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_66_fu_496_p12 : STD_LOGIC_VECTOR (9 downto 0);
    signal lhs_V_fu_492_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal rhs_V_fu_522_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal ret_V_fu_526_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal or_ln_fu_536_p3 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_67_fu_548_p11 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_67_fu_548_p12 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_68_fu_578_p12 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln1353_35_fu_604_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln215_44_fu_574_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln1353_fu_608_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal lhs_V_10_fu_532_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln1353_36_fu_614_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal tmp_fu_624_p12 : STD_LOGIC_VECTOR (9 downto 0);
    signal add_ln215_1_fu_654_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_69_fu_664_p11 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_69_fu_664_p12 : STD_LOGIC_VECTOR (9 downto 0);
    signal lhs_V_11_fu_650_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal rhs_V_6_fu_690_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal ret_V_14_fu_694_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln215_2_fu_704_p2 : STD_LOGIC_VECTOR (2 downto 0);
    signal tmp_70_fu_714_p11 : STD_LOGIC_VECTOR (3 downto 0);
    signal tmp_70_fu_714_p12 : STD_LOGIC_VECTOR (9 downto 0);
    signal tmp_71_fu_744_p12 : STD_LOGIC_VECTOR (9 downto 0);
    signal zext_ln1353_37_fu_770_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal zext_ln215_50_fu_740_p1 : STD_LOGIC_VECTOR (10 downto 0);
    signal add_ln1353_21_fu_774_p2 : STD_LOGIC_VECTOR (10 downto 0);
    signal lhs_V_12_fu_700_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln1353_38_fu_780_p1 : STD_LOGIC_VECTOR (11 downto 0);
    signal zext_ln1353_fu_816_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal ret_V_13_fu_819_p2 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln_fu_829_p3 : STD_LOGIC_VECTOR (12 downto 0);
    signal shl_ln63_1_fu_840_p3 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln1354_fu_825_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln63_fu_836_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal add_ln63_fu_851_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln63_1_fu_847_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sext_ln63_fu_857_p1 : STD_LOGIC_VECTOR (14 downto 0);
    signal sub_ln64_fu_874_p2 : STD_LOGIC_VECTOR (14 downto 0);
    signal trunc_ln64_3_fu_879_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln64_fu_889_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal zext_ln64_fu_893_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal trunc_ln64_4_fu_903_p4 : STD_LOGIC_VECTOR (11 downto 0);
    signal sext_ln64_1_fu_912_p1 : STD_LOGIC_VECTOR (12 downto 0);
    signal tmp_142_fu_867_p3 : STD_LOGIC_VECTOR (0 downto 0);
    signal sub_ln64_1_fu_897_p2 : STD_LOGIC_VECTOR (13 downto 0);
    signal zext_ln64_1_fu_916_p1 : STD_LOGIC_VECTOR (13 downto 0);
    signal icmp_ln65_fu_928_p2 : STD_LOGIC_VECTOR (0 downto 0);
    signal select_ln64_fu_920_p3 : STD_LOGIC_VECTOR (13 downto 0);
    signal imgblock_0_0_V_read_int_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal imgblock_0_1_V_read_int_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal imgblock_0_2_V_read_int_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal imgblock_0_3_V_read_int_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal imgblock_0_4_V_read_int_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal imgblock_0_5_V_read_int_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal imgblock_0_6_V_read_int_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal imgblock_0_7_V_read_int_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal imgblock_0_8_V_read_int_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal imgblock_0_9_V_read_int_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal imgblock_1_0_V_read_int_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal imgblock_1_1_V_read_int_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal imgblock_1_2_V_read_int_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal imgblock_1_3_V_read_int_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal imgblock_1_4_V_read_int_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal imgblock_1_5_V_read_int_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal imgblock_1_6_V_read_int_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal imgblock_1_7_V_read_int_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal imgblock_1_8_V_read_int_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal imgblock_1_9_V_read_int_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal imgblock_2_0_V_read_int_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal imgblock_2_1_V_read_int_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal imgblock_2_2_V_read_int_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal imgblock_2_3_V_read_int_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal imgblock_2_4_V_read_int_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal imgblock_2_5_V_read_int_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal imgblock_2_6_V_read_int_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal imgblock_2_7_V_read_int_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal imgblock_2_8_V_read_int_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal imgblock_2_9_V_read_int_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal imgblock_3_0_V_read_int_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal imgblock_3_1_V_read_int_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal imgblock_3_2_V_read_int_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal imgblock_3_3_V_read_int_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal imgblock_3_4_V_read_int_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal imgblock_3_5_V_read_int_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal imgblock_3_6_V_read_int_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal imgblock_3_7_V_read_int_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal imgblock_3_8_V_read_int_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal imgblock_3_9_V_read_int_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal imgblock_4_0_V_read_int_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal imgblock_4_1_V_read_int_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal imgblock_4_2_V_read_int_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal imgblock_4_3_V_read_int_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal imgblock_4_4_V_read_int_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal imgblock_4_5_V_read_int_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal imgblock_4_6_V_read_int_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal imgblock_4_7_V_read_int_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal imgblock_4_8_V_read_int_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal imgblock_4_9_V_read_int_reg : STD_LOGIC_VECTOR (9 downto 0);
    signal loop_r_int_reg : STD_LOGIC_VECTOR (1 downto 0);

    component ISPPipeline_accelkbM IS
    generic (
        ID : INTEGER;
        NUM_STAGE : INTEGER;
        din0_WIDTH : INTEGER;
        din1_WIDTH : INTEGER;
        din2_WIDTH : INTEGER;
        din3_WIDTH : INTEGER;
        din4_WIDTH : INTEGER;
        din5_WIDTH : INTEGER;
        din6_WIDTH : INTEGER;
        din7_WIDTH : INTEGER;
        din8_WIDTH : INTEGER;
        din9_WIDTH : INTEGER;
        din10_WIDTH : INTEGER;
        dout_WIDTH : INTEGER );
    port (
        din0 : IN STD_LOGIC_VECTOR (9 downto 0);
        din1 : IN STD_LOGIC_VECTOR (9 downto 0);
        din2 : IN STD_LOGIC_VECTOR (9 downto 0);
        din3 : IN STD_LOGIC_VECTOR (9 downto 0);
        din4 : IN STD_LOGIC_VECTOR (9 downto 0);
        din5 : IN STD_LOGIC_VECTOR (9 downto 0);
        din6 : IN STD_LOGIC_VECTOR (9 downto 0);
        din7 : IN STD_LOGIC_VECTOR (9 downto 0);
        din8 : IN STD_LOGIC_VECTOR (9 downto 0);
        din9 : IN STD_LOGIC_VECTOR (9 downto 0);
        din10 : IN STD_LOGIC_VECTOR (3 downto 0);
        dout : OUT STD_LOGIC_VECTOR (9 downto 0) );
    end component;



begin
    ISPPipeline_accelkbM_U163 : component ISPPipeline_accelkbM
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 10,
        din2_WIDTH => 10,
        din3_WIDTH => 10,
        din4_WIDTH => 10,
        din5_WIDTH => 10,
        din6_WIDTH => 10,
        din7_WIDTH => 10,
        din8_WIDTH => 10,
        din9_WIDTH => 10,
        din10_WIDTH => 4,
        dout_WIDTH => 10)
    port map (
        din0 => imgblock_0_0_V_read_int_reg,
        din1 => imgblock_0_1_V_read_int_reg,
        din2 => imgblock_0_2_V_read_int_reg,
        din3 => imgblock_0_3_V_read_int_reg,
        din4 => imgblock_0_4_V_read_int_reg,
        din5 => imgblock_0_5_V_read_int_reg,
        din6 => imgblock_0_6_V_read_int_reg,
        din7 => imgblock_0_7_V_read_int_reg,
        din8 => imgblock_0_8_V_read_int_reg,
        din9 => imgblock_0_9_V_read_int_reg,
        din10 => zext_ln215_39_fu_462_p1,
        dout => tmp_s_fu_466_p12);

    ISPPipeline_accelkbM_U164 : component ISPPipeline_accelkbM
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 10,
        din2_WIDTH => 10,
        din3_WIDTH => 10,
        din4_WIDTH => 10,
        din5_WIDTH => 10,
        din6_WIDTH => 10,
        din7_WIDTH => 10,
        din8_WIDTH => 10,
        din9_WIDTH => 10,
        din10_WIDTH => 4,
        dout_WIDTH => 10)
    port map (
        din0 => imgblock_2_0_V_read_int_reg,
        din1 => imgblock_2_1_V_read_int_reg,
        din2 => imgblock_2_2_V_read_int_reg,
        din3 => imgblock_2_3_V_read_int_reg,
        din4 => imgblock_2_4_V_read_int_reg,
        din5 => imgblock_2_5_V_read_int_reg,
        din6 => imgblock_2_6_V_read_int_reg,
        din7 => imgblock_2_7_V_read_int_reg,
        din8 => imgblock_2_8_V_read_int_reg,
        din9 => imgblock_2_9_V_read_int_reg,
        din10 => tmp_66_fu_496_p11,
        dout => tmp_66_fu_496_p12);

    ISPPipeline_accelkbM_U165 : component ISPPipeline_accelkbM
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 10,
        din2_WIDTH => 10,
        din3_WIDTH => 10,
        din4_WIDTH => 10,
        din5_WIDTH => 10,
        din6_WIDTH => 10,
        din7_WIDTH => 10,
        din8_WIDTH => 10,
        din9_WIDTH => 10,
        din10_WIDTH => 4,
        dout_WIDTH => 10)
    port map (
        din0 => imgblock_2_0_V_read_int_reg,
        din1 => imgblock_2_1_V_read_int_reg,
        din2 => imgblock_2_2_V_read_int_reg,
        din3 => imgblock_2_3_V_read_int_reg,
        din4 => imgblock_2_4_V_read_int_reg,
        din5 => imgblock_2_5_V_read_int_reg,
        din6 => imgblock_2_6_V_read_int_reg,
        din7 => imgblock_2_7_V_read_int_reg,
        din8 => imgblock_2_8_V_read_int_reg,
        din9 => imgblock_2_9_V_read_int_reg,
        din10 => tmp_67_fu_548_p11,
        dout => tmp_67_fu_548_p12);

    ISPPipeline_accelkbM_U166 : component ISPPipeline_accelkbM
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 10,
        din2_WIDTH => 10,
        din3_WIDTH => 10,
        din4_WIDTH => 10,
        din5_WIDTH => 10,
        din6_WIDTH => 10,
        din7_WIDTH => 10,
        din8_WIDTH => 10,
        din9_WIDTH => 10,
        din10_WIDTH => 4,
        dout_WIDTH => 10)
    port map (
        din0 => imgblock_4_0_V_read_int_reg,
        din1 => imgblock_4_1_V_read_int_reg,
        din2 => imgblock_4_2_V_read_int_reg,
        din3 => imgblock_4_3_V_read_int_reg,
        din4 => imgblock_4_4_V_read_int_reg,
        din5 => imgblock_4_5_V_read_int_reg,
        din6 => imgblock_4_6_V_read_int_reg,
        din7 => imgblock_4_7_V_read_int_reg,
        din8 => imgblock_4_8_V_read_int_reg,
        din9 => imgblock_4_9_V_read_int_reg,
        din10 => zext_ln215_39_fu_462_p1,
        dout => tmp_68_fu_578_p12);

    ISPPipeline_accelkbM_U167 : component ISPPipeline_accelkbM
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 10,
        din2_WIDTH => 10,
        din3_WIDTH => 10,
        din4_WIDTH => 10,
        din5_WIDTH => 10,
        din6_WIDTH => 10,
        din7_WIDTH => 10,
        din8_WIDTH => 10,
        din9_WIDTH => 10,
        din10_WIDTH => 4,
        dout_WIDTH => 10)
    port map (
        din0 => imgblock_1_0_V_read_int_reg,
        din1 => imgblock_1_1_V_read_int_reg,
        din2 => imgblock_1_2_V_read_int_reg,
        din3 => imgblock_1_3_V_read_int_reg,
        din4 => imgblock_1_4_V_read_int_reg,
        din5 => imgblock_1_5_V_read_int_reg,
        din6 => imgblock_1_6_V_read_int_reg,
        din7 => imgblock_1_7_V_read_int_reg,
        din8 => imgblock_1_8_V_read_int_reg,
        din9 => imgblock_1_9_V_read_int_reg,
        din10 => zext_ln215_39_fu_462_p1,
        dout => tmp_fu_624_p12);

    ISPPipeline_accelkbM_U168 : component ISPPipeline_accelkbM
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 10,
        din2_WIDTH => 10,
        din3_WIDTH => 10,
        din4_WIDTH => 10,
        din5_WIDTH => 10,
        din6_WIDTH => 10,
        din7_WIDTH => 10,
        din8_WIDTH => 10,
        din9_WIDTH => 10,
        din10_WIDTH => 4,
        dout_WIDTH => 10)
    port map (
        din0 => imgblock_2_0_V_read_int_reg,
        din1 => imgblock_2_1_V_read_int_reg,
        din2 => imgblock_2_2_V_read_int_reg,
        din3 => imgblock_2_3_V_read_int_reg,
        din4 => imgblock_2_4_V_read_int_reg,
        din5 => imgblock_2_5_V_read_int_reg,
        din6 => imgblock_2_6_V_read_int_reg,
        din7 => imgblock_2_7_V_read_int_reg,
        din8 => imgblock_2_8_V_read_int_reg,
        din9 => imgblock_2_9_V_read_int_reg,
        din10 => tmp_69_fu_664_p11,
        dout => tmp_69_fu_664_p12);

    ISPPipeline_accelkbM_U169 : component ISPPipeline_accelkbM
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 10,
        din2_WIDTH => 10,
        din3_WIDTH => 10,
        din4_WIDTH => 10,
        din5_WIDTH => 10,
        din6_WIDTH => 10,
        din7_WIDTH => 10,
        din8_WIDTH => 10,
        din9_WIDTH => 10,
        din10_WIDTH => 4,
        dout_WIDTH => 10)
    port map (
        din0 => imgblock_2_0_V_read_int_reg,
        din1 => imgblock_2_1_V_read_int_reg,
        din2 => imgblock_2_2_V_read_int_reg,
        din3 => imgblock_2_3_V_read_int_reg,
        din4 => imgblock_2_4_V_read_int_reg,
        din5 => imgblock_2_5_V_read_int_reg,
        din6 => imgblock_2_6_V_read_int_reg,
        din7 => imgblock_2_7_V_read_int_reg,
        din8 => imgblock_2_8_V_read_int_reg,
        din9 => imgblock_2_9_V_read_int_reg,
        din10 => tmp_70_fu_714_p11,
        dout => tmp_70_fu_714_p12);

    ISPPipeline_accelkbM_U170 : component ISPPipeline_accelkbM
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 10,
        din2_WIDTH => 10,
        din3_WIDTH => 10,
        din4_WIDTH => 10,
        din5_WIDTH => 10,
        din6_WIDTH => 10,
        din7_WIDTH => 10,
        din8_WIDTH => 10,
        din9_WIDTH => 10,
        din10_WIDTH => 4,
        dout_WIDTH => 10)
    port map (
        din0 => imgblock_3_0_V_read_int_reg,
        din1 => imgblock_3_1_V_read_int_reg,
        din2 => imgblock_3_2_V_read_int_reg,
        din3 => imgblock_3_3_V_read_int_reg,
        din4 => imgblock_3_4_V_read_int_reg,
        din5 => imgblock_3_5_V_read_int_reg,
        din6 => imgblock_3_6_V_read_int_reg,
        din7 => imgblock_3_7_V_read_int_reg,
        din8 => imgblock_3_8_V_read_int_reg,
        din9 => imgblock_3_9_V_read_int_reg,
        din10 => zext_ln215_39_fu_462_p1,
        dout => tmp_71_fu_744_p12);

    ISPPipeline_accelkbM_U171 : component ISPPipeline_accelkbM
    generic map (
        ID => 1,
        NUM_STAGE => 1,
        din0_WIDTH => 10,
        din1_WIDTH => 10,
        din2_WIDTH => 10,
        din3_WIDTH => 10,
        din4_WIDTH => 10,
        din5_WIDTH => 10,
        din6_WIDTH => 10,
        din7_WIDTH => 10,
        din8_WIDTH => 10,
        din9_WIDTH => 10,
        din10_WIDTH => 4,
        dout_WIDTH => 10)
    port map (
        din0 => imgblock_2_0_V_read_int_reg,
        din1 => imgblock_2_1_V_read_int_reg,
        din2 => imgblock_2_2_V_read_int_reg,
        din3 => imgblock_2_3_V_read_int_reg,
        din4 => imgblock_2_4_V_read_int_reg,
        din5 => imgblock_2_5_V_read_int_reg,
        din6 => imgblock_2_6_V_read_int_reg,
        din7 => imgblock_2_7_V_read_int_reg,
        din8 => imgblock_2_8_V_read_int_reg,
        din9 => imgblock_2_9_V_read_int_reg,
        din10 => zext_ln215_39_fu_462_p1,
        dout => tmp_72_fu_790_p12);




    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if ((ap_const_logic_1 = ap_ce)) then
                imgblock_0_0_V_read_int_reg <= imgblock_0_0_V_read;
                imgblock_0_1_V_read_int_reg <= imgblock_0_1_V_read;
                imgblock_0_2_V_read_int_reg <= imgblock_0_2_V_read;
                imgblock_0_3_V_read_int_reg <= imgblock_0_3_V_read;
                imgblock_0_4_V_read_int_reg <= imgblock_0_4_V_read;
                imgblock_0_5_V_read_int_reg <= imgblock_0_5_V_read;
                imgblock_0_6_V_read_int_reg <= imgblock_0_6_V_read;
                imgblock_0_7_V_read_int_reg <= imgblock_0_7_V_read;
                imgblock_0_8_V_read_int_reg <= imgblock_0_8_V_read;
                imgblock_0_9_V_read_int_reg <= imgblock_0_9_V_read;
                imgblock_1_0_V_read_int_reg <= imgblock_1_0_V_read;
                imgblock_1_1_V_read_int_reg <= imgblock_1_1_V_read;
                imgblock_1_2_V_read_int_reg <= imgblock_1_2_V_read;
                imgblock_1_3_V_read_int_reg <= imgblock_1_3_V_read;
                imgblock_1_4_V_read_int_reg <= imgblock_1_4_V_read;
                imgblock_1_5_V_read_int_reg <= imgblock_1_5_V_read;
                imgblock_1_6_V_read_int_reg <= imgblock_1_6_V_read;
                imgblock_1_7_V_read_int_reg <= imgblock_1_7_V_read;
                imgblock_1_8_V_read_int_reg <= imgblock_1_8_V_read;
                imgblock_1_9_V_read_int_reg <= imgblock_1_9_V_read;
                imgblock_2_0_V_read_int_reg <= imgblock_2_0_V_read;
                imgblock_2_1_V_read_int_reg <= imgblock_2_1_V_read;
                imgblock_2_2_V_read_int_reg <= imgblock_2_2_V_read;
                imgblock_2_3_V_read_int_reg <= imgblock_2_3_V_read;
                imgblock_2_4_V_read_int_reg <= imgblock_2_4_V_read;
                imgblock_2_5_V_read_int_reg <= imgblock_2_5_V_read;
                imgblock_2_6_V_read_int_reg <= imgblock_2_6_V_read;
                imgblock_2_7_V_read_int_reg <= imgblock_2_7_V_read;
                imgblock_2_8_V_read_int_reg <= imgblock_2_8_V_read;
                imgblock_2_9_V_read_int_reg <= imgblock_2_9_V_read;
                imgblock_3_0_V_read_int_reg <= imgblock_3_0_V_read;
                imgblock_3_1_V_read_int_reg <= imgblock_3_1_V_read;
                imgblock_3_2_V_read_int_reg <= imgblock_3_2_V_read;
                imgblock_3_3_V_read_int_reg <= imgblock_3_3_V_read;
                imgblock_3_4_V_read_int_reg <= imgblock_3_4_V_read;
                imgblock_3_5_V_read_int_reg <= imgblock_3_5_V_read;
                imgblock_3_6_V_read_int_reg <= imgblock_3_6_V_read;
                imgblock_3_7_V_read_int_reg <= imgblock_3_7_V_read;
                imgblock_3_8_V_read_int_reg <= imgblock_3_8_V_read;
                imgblock_3_9_V_read_int_reg <= imgblock_3_9_V_read;
                imgblock_4_0_V_read_int_reg <= imgblock_4_0_V_read;
                imgblock_4_1_V_read_int_reg <= imgblock_4_1_V_read;
                imgblock_4_2_V_read_int_reg <= imgblock_4_2_V_read;
                imgblock_4_3_V_read_int_reg <= imgblock_4_3_V_read;
                imgblock_4_4_V_read_int_reg <= imgblock_4_4_V_read;
                imgblock_4_5_V_read_int_reg <= imgblock_4_5_V_read;
                imgblock_4_6_V_read_int_reg <= imgblock_4_6_V_read;
                imgblock_4_7_V_read_int_reg <= imgblock_4_7_V_read;
                imgblock_4_8_V_read_int_reg <= imgblock_4_8_V_read;
                imgblock_4_9_V_read_int_reg <= imgblock_4_9_V_read;
                loop_r_int_reg <= loop_r;
            end if;
        end if;
    end process;
    process (ap_clk)
    begin
        if (ap_clk'event and ap_clk = '1') then
            if (((ap_const_boolean_0 = ap_block_pp0_stage0_11001) and (ap_const_logic_1 = ap_ce))) then
                res_reg_956 <= res_fu_861_p2;
                ret_V_12_reg_941 <= ret_V_12_fu_618_p2;
                ret_V_15_reg_946 <= ret_V_15_fu_784_p2;
                tmp_72_reg_951 <= tmp_72_fu_790_p12;
            end if;
        end if;
    end process;
    add_ln1353_21_fu_774_p2 <= std_logic_vector(unsigned(zext_ln1353_37_fu_770_p1) + unsigned(zext_ln215_50_fu_740_p1));
    add_ln1353_fu_608_p2 <= std_logic_vector(unsigned(zext_ln1353_35_fu_604_p1) + unsigned(zext_ln215_44_fu_574_p1));
    add_ln215_1_fu_654_p2 <= std_logic_vector(unsigned(zext_ln215_fu_452_p1) + unsigned(ap_const_lv3_1));
    add_ln215_2_fu_704_p2 <= std_logic_vector(unsigned(zext_ln215_fu_452_p1) + unsigned(ap_const_lv3_3));
    add_ln215_fu_456_p2 <= std_logic_vector(unsigned(zext_ln215_fu_452_p1) + unsigned(ap_const_lv3_2));
    add_ln63_fu_851_p2 <= std_logic_vector(signed(sext_ln1354_fu_825_p1) + signed(zext_ln63_fu_836_p1));
        ap_block_pp0_stage0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_pp0_stage0_11001 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state1_pp0_stage0_iter0 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state2_pp0_stage0_iter1 <= not((ap_const_boolean_1 = ap_const_boolean_1));
        ap_block_state3_pp0_stage0_iter2 <= not((ap_const_boolean_1 = ap_const_boolean_1));
    ap_return <= 
        ap_const_lv14_0 when (icmp_ln65_fu_928_p2(0) = '1') else 
        select_ln64_fu_920_p3;
    icmp_ln65_fu_928_p2 <= "1" when (signed(res_reg_956) < signed(ap_const_lv15_7FF9)) else "0";
    lhs_V_10_fu_532_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_fu_526_p2),12));
    lhs_V_11_fu_650_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_fu_624_p12),11));
    lhs_V_12_fu_700_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_14_fu_694_p2),12));
    lhs_V_fu_492_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_s_fu_466_p12),11));
    or_ln_fu_536_p3 <= (ap_const_lv1_1 & loop_r_int_reg);
    res_fu_861_p2 <= std_logic_vector(unsigned(zext_ln63_1_fu_847_p1) + unsigned(sext_ln63_fu_857_p1));
    ret_V_12_fu_618_p2 <= std_logic_vector(unsigned(lhs_V_10_fu_532_p1) + unsigned(zext_ln1353_36_fu_614_p1));
    ret_V_13_fu_819_p2 <= std_logic_vector(unsigned(ap_const_lv13_0) - unsigned(zext_ln1353_fu_816_p1));
    ret_V_14_fu_694_p2 <= std_logic_vector(unsigned(lhs_V_11_fu_650_p1) + unsigned(rhs_V_6_fu_690_p1));
    ret_V_15_fu_784_p2 <= std_logic_vector(unsigned(lhs_V_12_fu_700_p1) + unsigned(zext_ln1353_38_fu_780_p1));
    ret_V_fu_526_p2 <= std_logic_vector(unsigned(lhs_V_fu_492_p1) + unsigned(rhs_V_fu_522_p1));
    rhs_V_6_fu_690_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_69_fu_664_p12),11));
    rhs_V_fu_522_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_66_fu_496_p12),11));
    select_ln64_fu_920_p3 <= 
        sub_ln64_1_fu_897_p2 when (tmp_142_fu_867_p3(0) = '1') else 
        zext_ln64_1_fu_916_p1;
        sext_ln1354_fu_825_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(ret_V_13_fu_819_p2),14));

        sext_ln63_fu_857_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(add_ln63_fu_851_p2),15));

        sext_ln64_1_fu_912_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln64_4_fu_903_p4),13));

        sext_ln64_fu_889_p1 <= std_logic_vector(IEEE.numeric_std.resize(signed(trunc_ln64_3_fu_879_p4),13));

    shl_ln63_1_fu_840_p3 <= (tmp_72_reg_951 & ap_const_lv2_0);
    shl_ln_fu_829_p3 <= (ret_V_15_reg_946 & ap_const_lv1_0);
    sub_ln64_1_fu_897_p2 <= std_logic_vector(unsigned(ap_const_lv14_0) - unsigned(zext_ln64_fu_893_p1));
    sub_ln64_fu_874_p2 <= std_logic_vector(unsigned(ap_const_lv15_0) - unsigned(res_reg_956));
    tmp_142_fu_867_p3 <= res_reg_956(14 downto 14);
    tmp_66_fu_496_p11 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(loop_r_int_reg),4));
    tmp_67_fu_548_p11 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(or_ln_fu_536_p3),4));
    tmp_69_fu_664_p11 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln215_1_fu_654_p2),4));
    tmp_70_fu_714_p11 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln215_2_fu_704_p2),4));
    trunc_ln64_3_fu_879_p4 <= sub_ln64_fu_874_p2(14 downto 3);
    trunc_ln64_4_fu_903_p4 <= res_reg_956(14 downto 3);
    zext_ln1353_35_fu_604_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_68_fu_578_p12),11));
    zext_ln1353_36_fu_614_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1353_fu_608_p2),12));
    zext_ln1353_37_fu_770_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_71_fu_744_p12),11));
    zext_ln1353_38_fu_780_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln1353_21_fu_774_p2),12));
    zext_ln1353_fu_816_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(ret_V_12_reg_941),13));
    zext_ln215_39_fu_462_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(add_ln215_fu_456_p2),4));
    zext_ln215_44_fu_574_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_67_fu_548_p12),11));
    zext_ln215_50_fu_740_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(tmp_70_fu_714_p12),11));
    zext_ln215_fu_452_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(loop_r_int_reg),3));
    zext_ln63_1_fu_847_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln63_1_fu_840_p3),15));
    zext_ln63_fu_836_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(shl_ln_fu_829_p3),14));
    zext_ln64_1_fu_916_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln64_1_fu_912_p1),14));
    zext_ln64_fu_893_p1 <= std_logic_vector(IEEE.numeric_std.resize(unsigned(sext_ln64_fu_889_p1),14));
end behav;
