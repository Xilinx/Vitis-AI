// RUN: tf-mlir-translate -hlo-text-to-mlir-hlo %s -o - | FileCheck %s

HloModule main.5

// CHECK-LABEL: func @main(%arg0: tensor<4xf32>, %arg1: tensor<f32>) -> tensor<4xf64> {
ENTRY %foo.5 (Arg_0.1: f32[4], Arg_1.2: f32[]) -> f64[4] {
  %Arg_0.1 = f32[4] parameter(0)
  %Arg_1.2 = f32[] parameter(1)

  // CHECK-NEXT: %0 = "xla_hlo.convert"(%arg0) {name = "convert.3"} : (tensor<4xf32>) -> tensor<4xf64>
  %convert.3 = f64[4] convert(f32[4] %Arg_0.1)

  // CHECK-NEXT: %1 = "xla_hlo.convert"(%arg1) {name = "convert.4"} : (tensor<f32>) -> tensor<f64>
  %convert.4 = f64[] convert(f32[] %Arg_1.2)

  // CHECK-NEXT: %2 = "xla_hlo.add"(%0, %1) {name = "add.5"} : (tensor<4xf64>, tensor<f64>) -> tensor<4xf64>
  // CHECK-NEXT: return %2 : tensor<4xf64>
  ROOT %add.5 = f64[4] add(f64[4] %convert.3, f64[] %convert.4)
}

