# RUN: tf-mlir-translate -graphdef-to-mlir %s -tf-input-arrays=input0,input1 -tf-input-data-types=DT_INT32,DT_INT32 -tf-input-shapes=10:10 -tf-output-arrays=Add -o - | FileCheck %s

node {
  name: "Add"
  op: "Add"
  input: "input0"
  input: "input1"
  attr {
    key: "T"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "input0"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
}
node {
  name: "input1"
  op: "Placeholder"
  attr {
    key: "dtype"
    value {
      type: DT_INT32
    }
  }
}
versions {
  producer: 27
}

# CHECK: func @main(%arg0: tensor<10xi32>, %arg1: tensor<10xi32>) -> tensor<10xi32>
# CHECK: attributes {tf.entry_function = {inputs = "input0, input1", outputs = "Add"}} {

# CHECK:   %[[INPUT0:[0-9]+]]:2 = tf_executor.island
# CHECK-NEXT: "tf.Placeholder.input"(%arg0)

# CHECK:   %[[INPUT1:[0-9]+]]:2 = tf_executor.island
# CHECK-NEXT: "tf.Placeholder.input"(%arg1)

# CHECK:   %[[add:[0-9]+]]:2 = tf_executor.island
# CHECK-NEXT: "tf.Add"(%[[INPUT0]]#0, %[[INPUT1]]#0)

# CHECK:   fetch %[[add]]#0
