/*
 * Copyright 2019 Xilinx Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
Important:
  ./test_bin_pointpillars.cpp , ./test_performance_pointpillars, ./test_accuracy_pointpillars first param followed must be with 2 model names.
  first model name is for PointNet, second model name is for RPN
  Valid model name:
    PointNet:  pointpillars_kitti_12000_0_pt
    RPN:       pointpillars_kitti_12000_1_pt

1, compile

    execute the following command:

        sh build.sh

2, copy the compiled executable file and test image to the development board.

   run the executable file.

    sample : /test_bin_pointpillars  pointpillars_kitti_12000_0_pt pointpillars_kitti_12000_1_pt sample_pointpillars.bin  sample_pointpillars.png 
    output : 
0       18.541065 3.999999 -1.732742 1.730013 4.419279 1.465484 1.695000     0.880797
0       34.606930 1.505865 -1.601687 1.503061 3.495937 1.398375 1.757500     0.835484
0       10.851732 4.705865 -1.609760 1.650789 4.350764 1.609520 1.632500     0.835484
1       21.309460 -2.400001 -1.749794 0.600000 1.963422 1.813025 4.711593     0.777300
0       57.825863 -4.254135 -1.536627 1.550773 3.839536 1.512004 2.007500     0.679179
    
    sample : ./test_accuracy_pointpillars pointpillars_kitti_12000_0_pt  pointpillars_kitti_12000_1_pt  test_accuracy_pointpillars_bin.list test_accuracy_pointpillars_rgb.list test_accuracy_pointpillars_calib.list result
    output : 
    result dir holding the detect result files for each data in test_accuracy_pointpillars_bin.list
   
    sample : ./test_performance_pointpillars pointpillars_kitti_12000_0_pt  pointpillars_kitti_12000_1_pt  -t 1 -s 30 test_performance_pointpillars.list



* how to set DISPLAY_PARAM

  there are 3 variables in DISPLAY_PARAM: P2 rect Trv2c.
  each of them are float data in 4x4 metrix.
  the last row of the matrixs are all [0,0,0,1].
  
  Trv2c:
    in calib_velo_to_cam.txt, there are R (3x3 ) and T (3x1). 
    R is rotation matrix, T is translation vector.
    R|T takes a point in Velodyne coordinates and transforms it into the
    coordinate system of the left video camera. Likewise it serves as a
    representation of the Velodyne coordinate frame in camera coordinates.
    Reshape R to 3x3 and make R|T be 3x4 matrix. This is the upper 3 rows of Trv2c
  
  P2:
    in calib_cam_to_cam.txt, P_rect_02 ( normally, _02 is used)
    reshape P_rect_02 to 3x4 Matrix, this is the upper 3 rows of P2.
    
  rect:
    in calib_cam_to_cam.txt, reshape R_rect_00 to 3x3 Matrix (called r).
    then reshape r|0 to 3x4 Matrix ( add 0 to each row  as last element )
    this is the upper 3 rows of rect.

